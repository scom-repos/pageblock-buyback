define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChained.json.ts", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    ///<amd-module name='@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChained.json.ts'/> 
    exports.default = {
        "abi": [
            { "inputs": [{ "internalType": "address[]", "name": "_from", "type": "address[]" }, { "internalType": "address[]", "name": "_to", "type": "address[]" }, { "internalType": "uint256[]", "name": "_count", "type": "uint256[]" }, { "internalType": "address[]", "name": "_paths", "type": "address[]" }, { "internalType": "address[]", "name": "_oracles", "type": "address[]" }], "stateMutability": "nonpayable", "type": "constructor" },
            { "inputs": [], "name": "decimals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "bytes", "name": "payload", "type": "bytes" }], "name": "getLatestPrice", "outputs": [{ "internalType": "uint256", "name": "price", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "bytes", "name": "payload", "type": "bytes" }], "name": "getRatio", "outputs": [{ "internalType": "uint256", "name": "numerator", "type": "uint256" }, { "internalType": "uint256", "name": "denominator", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }], "name": "isSupported", "outputs": [{ "internalType": "bool", "name": "supported", "type": "bool" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }, { "internalType": "address", "name": "", "type": "address" }, { "internalType": "uint256", "name": "", "type": "uint256" }], "name": "oraclesStore", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }, { "internalType": "address", "name": "", "type": "address" }, { "internalType": "uint256", "name": "", "type": "uint256" }], "name": "pathsStore", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "priceFeedAddresses", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" }
        ],
        "bytecode": "60806040523480156200001157600080fd5b506040516200138038038062001380833981810160405260a08110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82518660208202830111640100000000821117156200008c57600080fd5b82525081516020918201928201910280838360005b83811015620000bb578181015183820152602001620000a1565b5050505090500160405260200180516040519392919084640100000000821115620000e557600080fd5b908301906020820185811115620000fb57600080fd5b82518660208202830111640100000000821117156200011957600080fd5b82525081516020918201928201910280838360005b83811015620001485781810151838201526020016200012e565b50505050905001604052602001805160405193929190846401000000008211156200017257600080fd5b9083019060208201858111156200018857600080fd5b8251866020820283011164010000000082111715620001a657600080fd5b82525081516020918201928201910280838360005b83811015620001d5578181015183820152602001620001bb565b5050505090500160405260200180516040519392919084640100000000821115620001ff57600080fd5b9083019060208201858111156200021557600080fd5b82518660208202830111640100000000821117156200023357600080fd5b82525081516020918201928201910280838360005b838110156200026257818101518382015260200162000248565b50505050905001604052602001805160405193929190846401000000008211156200028c57600080fd5b908301906020820185811115620002a257600080fd5b8251866020820283011164010000000082111715620002c057600080fd5b82525081516020918201928201910280838360005b83811015620002ef578181015183820152602001620002d5565b5050505090500160405250505060008090508451865114801562000314575083518551145b62000366576040805162461bcd60e51b815260206004820152601660248201527f4172726179206c656e677468206e6f74206d6174636800000000000000000000604482015290519081900360640190fd5b60005b8451811015620003ac57620003a18582815181106200038457fe5b6020026020010151836200059860201b620008171790919060201c565b915060010162000369565b50825181148015620003d857508151620003d68451836200059860201b620008171790919060201c565b145b6200042a576040805162461bcd60e51b815260206004820152601660248201527f4172726179206c656e677468206e6f74206d6174636800000000000000000000604482015290519081900360640190fd5b6000805b87518110156200058a5760008682815181106200044757fe5b602002602001015190506060816001600160401b03811180156200046a57600080fd5b5060405190808252806020026020018201604052801562000495578160200160208202803683370190505b5090506060826001016001600160401b0381118015620004b457600080fd5b50604051908082528060200260200182016040528015620004df578160200160208202803683370190505b50905060005b838110156200057957888681518110620004fb57fe5b60200260200101518382815181106200051057fe5b60200260200101906001600160a01b031690816001600160a01b03168152505087858701815181106200053f57fe5b60200260200101518282815181106200055457fe5b6001600160a01b039092166020928302919091019091015260019586019501620004e5565b5050600190920191506200042e9050565b5050505050505050620005fa565b600082820183811015620005f3576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b610d76806200060a6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806375aa41741161005b57806375aa4174146101b457806388462c8d146101e7578063d9da4fe614610236578063f3a16d02146102f15761007d565b806306e5415014610082578063313ce567146100ee578063495e43481461010c575b600080fd5b6100c56004803603606081101561009857600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610334565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6100f6610383565b6040805160ff9092168252519081900360200190f35b6101a26004803603606081101561012257600080fd5b73ffffffffffffffffffffffffffffffffffffffff823581169260208101359091169181019060608101604082013564010000000081111561016357600080fd5b82018360208201111561017557600080fd5b8035906020019184600183028401116401000000008311171561019757600080fd5b509092509050610388565b60408051918252519081900360200190f35b6100c5600480360360208110156101ca57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610717565b610222600480360360408110156101fd57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602001351661073f565b604080519115158252519081900360200190f35b6102d8600480360360a081101561024c57600080fd5b73ffffffffffffffffffffffffffffffffffffffff823581169260208101359091169160408201359160608101359181019060a08101608082013564010000000081111561029957600080fd5b8201836020820111156102ab57600080fd5b803590602001918460018302840111640100000000831117156102cd57600080fd5b5090925090506107e4565b6040805192835260208301919091528051918290030190f35b6100c56004803603606081101561030757600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013590911690604001356107f2565b6002602052826000526040600020602052816000526040600020818154811061035957fe5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16925083915050565b601290565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152600260209081526040808320938716835292815282822080548451818402810184019095528085529293606093909283018282801561041a57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116103ef575b50505073ffffffffffffffffffffffffffffffffffffffff808a166000908152600360209081526040808320938c16835292815290829020805483518184028101840190945280845295965060609592945092508301828280156104b457602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610489575b5050505050905060008090506000808483815181106104cf57fe5b602002602001015190508383815181106104e557fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663495e43488b838b8b6040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060206040518083038186803b1580156105d157600080fd5b505afa1580156105e5573d6000803e3d6000fd5b505050506040513d60208110156105fb57600080fd5b5051845190965060009085908590811061061157fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561065e57600080fd5b505afa158015610672573d6000803e3d6000fd5b505050506040513d602081101561068857600080fd5b50516001945090505b85518410156106e5578192508584815181106106a957fe5b602002602001015191506106d587828787815181106106c457fe5b602002602001015186868e8e610892565b9097506001909401939050610691565b61070787828787815181106106f657fe5b6020026020010151858e8e8e610892565b509b9a5050505050505050505050565b60016020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b73ffffffffffffffffffffffffffffffffffffffff808316600090815260036020908152604080832093851683529281528282208054845181840281018401909552808552929360609390928301828280156107d157602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116107a6575b5050925115159450505050505b92915050565b600080965096945050505050565b6003602052826000526040600020602052816000526040600020818154811061035957fe5b60008282018381101561088b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b60008060008773ffffffffffffffffffffffffffffffffffffffff1663495e4348888888886040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060206040518083038186803b15801561097c57600080fd5b505afa158015610990573d6000803e3d6000fd5b505050506040513d60208110156109a657600080fd5b5051604080517f313ce567000000000000000000000000000000000000000000000000000000008152905191925060009173ffffffffffffffffffffffffffffffffffffffff8b169163313ce567916004808301926020929190829003018186803b158015610a1457600080fd5b505afa158015610a28573d6000803e3d6000fd5b505050506040513d6020811015610a3e57600080fd5b50519050610a528b8363ffffffff610af816565b9350610a6a60ff8b811690831663ffffffff61081716565b60121115610ab557610aae610a9e60ff80841690610a92906012908f1663ffffffff610b6b16565b9063ffffffff610b6b16565b8590600a0a63ffffffff610af816565b9350610ae6565b610ae3610ad36012610a9260ff8e811690861663ffffffff61081716565b8590600a0a63ffffffff610bad16565b93505b60129250505097509795505050505050565b600082610b07575060006107de565b82820282848281610b1457fe5b041461088b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180610d206021913960400191505060405180910390fd5b600061088b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610bef565b600061088b83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610ca0565b60008184841115610c98576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c5d578181015183820152602001610c45565b50505050905090810190601f168015610c8a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008183610d09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201818152835160248401528351909283926044909101919085019080838360008315610c5d578181015183820152602001610c45565b506000838581610d1557fe5b049594505050505056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220736b75e241c4e1f0beb6cc57ea056c5a5a08a3b0b5fc554832863860a30506ec64736f6c634300060b0033"
    };
});
define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChained.ts", ["require", "exports", "@ijstech/eth-contract", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChained.json.ts"], function (require, exports, eth_contract_1, OSWAP_OracleChained_json_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.OSWAP_OracleChained = void 0;
    class OSWAP_OracleChained extends eth_contract_1.Contract {
        constructor(wallet, address) {
            super(wallet, address, OSWAP_OracleChained_json_1.default.abi, OSWAP_OracleChained_json_1.default.bytecode);
            this.assign();
        }
        deploy(params, options) {
            return this.__deploy([params.from, params.to, this.wallet.utils.toString(params.count), params.paths, params.oracles], options);
        }
        assign() {
            let decimals_call = async (options) => {
                let result = await this.call('decimals', [], options);
                return new eth_contract_1.BigNumber(result);
            };
            this.decimals = decimals_call;
            let getLatestPriceParams = (params) => [params.from, params.to, this.wallet.utils.stringToBytes(params.payload)];
            let getLatestPrice_call = async (params, options) => {
                let result = await this.call('getLatestPrice', getLatestPriceParams(params), options);
                return new eth_contract_1.BigNumber(result);
            };
            this.getLatestPrice = getLatestPrice_call;
            let getRatioParams = (params) => [params.from, params.to, this.wallet.utils.toString(params.param3), this.wallet.utils.toString(params.param4), this.wallet.utils.stringToBytes(params.payload)];
            let getRatio_call = async (params, options) => {
                let result = await this.call('getRatio', getRatioParams(params), options);
                return {
                    numerator: new eth_contract_1.BigNumber(result.numerator),
                    denominator: new eth_contract_1.BigNumber(result.denominator)
                };
            };
            this.getRatio = getRatio_call;
            let isSupportedParams = (params) => [params.from, params.to];
            let isSupported_call = async (params, options) => {
                let result = await this.call('isSupported', isSupportedParams(params), options);
                return result;
            };
            this.isSupported = isSupported_call;
            let oraclesStoreParams = (params) => [params.param1, params.param2, this.wallet.utils.toString(params.param3)];
            let oraclesStore_call = async (params, options) => {
                let result = await this.call('oraclesStore', oraclesStoreParams(params), options);
                return result;
            };
            this.oraclesStore = oraclesStore_call;
            let pathsStoreParams = (params) => [params.param1, params.param2, this.wallet.utils.toString(params.param3)];
            let pathsStore_call = async (params, options) => {
                let result = await this.call('pathsStore', pathsStoreParams(params), options);
                return result;
            };
            this.pathsStore = pathsStore_call;
            let priceFeedAddresses_call = async (param1, options) => {
                let result = await this.call('priceFeedAddresses', [param1], options);
                return result;
            };
            this.priceFeedAddresses = priceFeedAddresses_call;
        }
    }
    exports.OSWAP_OracleChained = OSWAP_OracleChained;
    OSWAP_OracleChained._abi = OSWAP_OracleChained_json_1.default.abi;
});
define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlink.json.ts", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    ///<amd-module name='@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlink.json.ts'/> 
    exports.default = {
        "abi": [
            { "inputs": [], "stateMutability": "nonpayable", "type": "constructor" },
            { "inputs": [], "name": "WETH", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "_WETH", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "chainlinkDeicmals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "decimals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "bytes", "name": "payload", "type": "bytes" }], "name": "getLatestPrice", "outputs": [{ "internalType": "uint256", "name": "price", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "bytes", "name": "", "type": "bytes" }], "name": "getRatio", "outputs": [{ "internalType": "uint256", "name": "numerator", "type": "uint256" }, { "internalType": "uint256", "name": "denominator", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }], "name": "isSupported", "outputs": [{ "internalType": "bool", "name": "supported", "type": "bool" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "priceFeedAddresses", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" }
        ],
        "bytecode": "60a06040526001805460ff1916601217905534801561001d57600080fd5b507fc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2000000000000000000000000608052600060208190527f922605635d8625baeee2632c4abd30ed3e656c608e4e1d527ac798b2e7bbaf8080546001600160a01b03199081167372afaecf99c9d9c8215ff44c77b94b99c28741e8179091557f7145bb02480b505fc02ccfdba07d3ba3a9d821606f0688263abedd0ac6e5bec580548216736df09e975c830ecae5bd4ed9d90f3a95a4f880121790557f2fd76cfb49d3383b2a06baf321cf3e4267eb5cb4e5c9f424191270833864efcf805482167389c7926c7c15fd5bfdb1edcff7e7fc8283b578f61790557f652f71c42b843343e1ef371dbb9eee4ae200cef6c0330cc356d68047e9c79b628054821673492575fdd11a0fcf2c6c719867890a7648d526eb1790557f6aa415b64acb0a434cca4219caf83aa35a6e08e958efcfbc0a11e6938dcca50b80548216738f83670260f8f7708143b836a2a6f11ef0abac011790557f8dd1acf2f417f842f399a5c6c5a803e3017458a53801bad96df1fe1972a4537c805482167358921ac140522867bf50b9e009599da0ca4a23791790557f2bc93a8060526cefdf8802183664660d7d7310808def67df12894f0e5193b4338054821673c1438aa3823a6ba0c159cfa8d98df5a994ba120b1790557f60788a10714095b4b847dd17e28e2482eb05bcedcbe89ea8d5fa139281c227ff80548216730bdb051e10c9718d1c29efbad442e88d389582741790557f9d36796f595ad8c503b82568e7e967e06e60c0e85648af5d26070800c033c7f080548216730d16d4528239e9ee52fa531af613acdb23d88c941790557f72ecb6b277d69e65f266d635816977482f3bd43f38cd571ba98aab196b191eb28054821673cf61d1841b178fe82c8895fe60c2edda083144161790557f51c8e55e820f27a577f1b35603f17913888fc9eae77c90ee67b8ebed664dfd858054821673dd22a54e05410d8d1007c38b5c7a3ed74b8552811790557fac42b33335ec2d57e8c892598a95336eedfbe3a46f787016e9d908bff25633e98054821673deb288f737066589598e9214e782fa5a8ed689e81790557f939f7cabc28bdbedc4485191b21a60d41b948f6b2be04fad8a9bba962c7a74b18054821673614715d2af89e6ec99a233818275142ce88d1cfd1790557f714d08b158d6cc294ffeb4a3b345613fb0e642c104a5bce757c5f7f16bd4df5480548216738f7c7181ed1a2ba41cfc3f5d064ef91b67daef661790557fc19dbee4376f33a2c7d0d8afb05074ae4879269d0731097362888a48b88cbe4e805482167375fbd83b4bd51dee765b2a01e8d3aa1b020f9d331790557f511cc89fca1810b4d2868146b87932d94ee0e38147e04dc2f8572df83cf520a880548216731b39ee86ec5979ba5c322b826b3ecb8c799916991790557f74b21504d6ce8d3085ff4d3c40f4f6f826f045fe400f691809753490c1113ccc80548216737b6230ef79d5e97c11049ab362c0b685facba0c21790557fa321655a2bbe4fb76e06e998714ab65c52c1c2c1d83195276a2c435589568d76805482167382597cfe6af8baad7c0d441aa82cbc3b517596071790557ff7b15f98e94b56adc7bc4251d8e5bab2a85df3c658d291f469be1863917931e98054821673ca696a9eb93b81adfe6435759a29ab4cf2991a961790557f70c3dba262fa5eaaf3e393830b86a1923f032bbcdc463b5d2b22ed5f11b1e68580548216738a12be339b0cd1829b91adc01977caa5e9ac121e1790557f5306b8fbe80b30a74098357ee8e26fad8dc069da9011cca5f0870a0a5982e5418054821673773616e4d11a78f511299002da57a0a94577f1f41790557f1bc36087bcda8c8f0a1d3644ff9e81045f37abda2f3e48c9950fe55b89d0df568054821673029849bbc0b1d93b85a8b6190e979fd38f5760e21790557f2a792ecbe4cc20859315764ffd1173cc3d655abe0eab051e1b91505d05664e5f805482167324d9ab51950f3d62e9144fdc2f3135daa6ce8d1b1790557f27e997bcf7e34b5892c35718d72ca8a4d44f6f77265e19fe4feb6a8ebb16cc7b805482167314d04fff8d21bd62987a5ce9ce543d2f1edf5d3e1790557f69385f4f59c73b47d354995d37e8afb2d12626a98f707577a862ca34c9b8dfab80548216732de7e4a9488488e0058b95854cc2f7955b35dc9b1790557fe1f42dac1a969062788e146df38452cb3deb0c18993a68cabc3beaf2d8927b318054821673a614953df476577e90dcf4e3428960e221ea47271790557f1937f4929bf506eeb2c6a1d0a2fcd058a6c656179f2f8b4280efa139cc62bcba805482167317d054ecac33d91f7340645341efb5de9009f1c11790557f65ddfc0b22efd48a70a9225c1497ac6013365784568b598beb41c24a618196638054821673af5e8d9cd9fc85725a83bf23c52f1c39a71588a61790557fa47c6237e3771726e573ebf3e2aae7b22fb6912d94711a8c0ebc4a9f4941e83080548216731b61bad1495161bcb6c03ddb0e41622c0270bb1a1790557ff3da0919264f7c718053ecd775aaadf3e60482b8a48602c1a29f9e3fa1891d1c8054821673656c0544ef4c98a6a98491833a89204abb045d6b1790557fcf66ea24a3a22ace3478fe5474bcc1fe794b64f2f3e3e510121d34175d9fca748054821673e7015ccb7e5f788b8c1010fc22343473eaac37411790557f7e8b0ddd41f45dc519379597a96fbf674e542ac0abe9d28115974f5e6d9d1f6280548216734e844125952d32acdf339be976c98e22f6f318db1790557f730d6fdf8f2d5e5e75a62ad49cc4d175b7750703aa72e452e1e22258c77079fb8054821673dc530d9457755926550b59e8eccdae76241815571790557fb155860a6156b882a029d82cb64ada93d58af9bcf177423c0df252ea57537f45805482167313a8f2cc27ccc2761ca1b21d2f3e762445f201ce1790557ffde91a0e4ce347aee87f50e1828f560ac227f5a85b774d40a730df907420cbdd8054821673160ac928a16c93ed4895c2de6f81ecce9a7eb7b41790557fe9ac309054ae3ea057b8ba5ade5fbdb631fd2a69208b4c4996b5da5c0c28541a805482167382a44d92d6c329826dc557c5e1be6ebec5d5feb91790557fdda00a57bee26ed4ac93f73d0238caf2b0b80d455de521e247ae994efa80def5805482167324551a8fb2a7211a25a17b1481f043a8a8adc7f21790557fd85a4d964d4d582b84640f5fb5e87df4a5d5298bb387091004bd9260d56a89e38054821673daea8386611a157b08829ed4997a8a62b557014c1790557f8368c25c4b2f30d7b2ab019df22a73e277c773d0fb7cde331e90efc89d2692fb805482167398334b85de2a8b998ba844c5521e73d68ad69c001790557f7b66cee30b2b198fbf35e728c76f17d88c3a425bd48097e22eafaff9da2e7e8f80548216739cb2a01a7e64992d32a34db7ceea4c919c391f6a1790557fe8643eefe5c7411f6a5fa5efbc8c5ba3b518d0fb73c9e4b17263132fddb35ddd8054821673fd93c391f3a81565dae1f6a66115c26f36a92d6d1790557fe7ad96a34620650a4b4bc1354f7fc06794a9fe551267162fdb4eedc2720590f880548216739b0fc4bb9981e5333689d69bdbf66351b9861e621790557f291fc04542f545d171df618942aa085a5ff8408cbc578fd254cdb33abd33d35580548216732c881b6f3f6b5ff6c975813f87a4dad0b241c15b1790557f692c63a03bf35f688365fdce87bd4530629214d76f11021ca81cb251428807a9805482167357c9ab3e56ee4a83752c181f241120a3dbba06a11790557f629da0e8ff2229b61f23ea59f6fc9fae5385ec7d86836d69d66518b801a1a2b98054821673ba9b2a360eb8abdb677d6d7f27e12de11aa052ef1790557fc13b7ee270ec43e8a6443e3b8f180d8f4fca097dedaede03fcc04df7145c999a80548216733a08ebbab125224b7b6474384ee39fbb247d22001790557fdfcc185e406aad40b3880bc723dcc773f9b6e7bc42904ab3f9845c594921f49d80548216739b97304ea12efed0fad976fbecaad46016bf269e1790557f3dac7eedd2c2c2f790ed98399eb44d86394a11105d16c59b53e16a8788cb866b80548216733b41d5571468904d4e53b6a8d93a6bac43f02dc91790557fc8923fd5e49e23bbf39410f29ed2fd031284ae9deae0421a55fa840a74091ffc80548216734ad7b025127e89263242ab68f0f9c4e5c033b4891790557fca6d9c5f0f8a61760221632ac5123020f6457c97c340e39c224f27f10709004880548216732a784368b1d492f458bf919389f42c18315765f51790557f72d1ea1bd06e478789ce223c9d4541833ee2f7ebeef7a8270683f3d403f32f9480548216733147d7203354dc06d9fd350c7a2437bca92387a41790557fe2c8e4a8fa3904a45b2d114396c1fba62bf2ed05bd169dc940fa95bf862d58858054821673d4ce430c3b67b3e2f7026d86e7128588629e24551790557ff1d4fe8be39ae1d5174965bc28753959e2d0aee29df2ece084d4796a3291c4428054821673c16935b445f4bdc172e408433c8f7101bbbbe3681790557f915ea3178cf8d84ce8970365961a708ef05e98859d8d4717485c47bf3cbcb26480548216734cba1e1fdc738d0fe8db3ee07728e2bc4da676c61790557f3a366db8310f607ec90a3e157b2d9c96b54e5b9058a23c07ffef108dcac299bf8054821673875d60c44cfbc38baa4eb2ddb76a767deb91b97e1790557f6a0ff5e9c82c4b6c02813537e66c776442d8694c3e7f57c0041dc74622b13d228054821673ea286b2584f79cd4d322fe107d9683971c8905961790557f6cd63715d5f0db03eec592ada4e78050279222b9583fb20a52ef8a37c8e911b9805482167379291a9d692df95334b1a0b3b4ae6bc606782f8c1790557f86533f34a757e46c0721fbd7d349a6f1936fb78c3f41968b01245132d7a80c658054821673050c048c9a0cd0e76f166e2539f87ef2accec58f1790557fa292fc3a060596e7bbf9388db4399d71e37bb598ae8f7221306b31a84208ac728054821673a1ffc11eaa62d34c3b3272270aecf9d879773b321790557f891368e9fb55bce905a27799ff398f5706410e14205316f805cafda2a6c93be480548216738e0b7e6062272b5ef4524250bfff8e5bd34977571790557fb738e63d4f4906dfb172df67af9f36b70db9ec183d59b161eabe70a6ea8083e68054821673e572cef69f43c2e488b33924af04bdace19079cf1790557f319239e9c6ea28d449eae6ff18cd00242df63538dddb59444559ab635416b0c68054821673ffa4bb3a24b60c0262dbaad60d77a3c3fa6173e81790557f690bb39a0a5e54120bf07b6463b8fcd7bea90578d8ae77d1e573a88ddc40bfec80548216733886ba987236181d98f2401c507fb8bea7871df21790557fef188c9425e10b9ff1f1fb69b77afe1d1874b5bbe31bfcba2584fae894ee14478054821673f817b69ea583caff291e287cae00ea329d22765c1790557f6da98f1d47bb0bc5549e1497f71ab684f8d693b19b458fbccae05e126d246e908054821673d6aa3d25116d8da79ea0246c4826eb951872e02e1790557fc6521c8ea4247e8beb499344e591b9401fb2807ff9997dd598fd9e56c73a264d8054821673986b5e1e1755e3c2440e960477f25201b0a8bbd41790557fa934b07068f5d95a11413ed6d08a4a1122dc4b8c14a6ab2d94f8b279dac630428054821673ee9f2375b4bdf6387aa8265dd4fb8f16512a1d461790557fbfbb6e0ba78daf468733c76bad8771bca2c4b9e50f4caf63c623fea7eda8d6028054821673a20623070413d42a5c01db2c8111640dd7a5a03a1790557f69c5978d336f25ec042bca14912a5485eeb71dabfb9b8e5726ad13db570f76c2805482167399cd3337aa0da455845d7afe7781341fdae4d2ef1790557fe2f5263ab0aff2d245fbc15bf86f3654aada3c07fe237aa7b35d5a4307de57698054821673e5dc0a609ab8bcf15d3f35cfaa1ff40f521173ea1790557f828ac2cfae8391df6fe4c86c1beb4a85a14c88f651908f41682259723170b5dc80548216737c5d4f8345e66f68099581db340cd65b078c41f41790557f1ce7425dcaab438b3aa06773f467c327bc5dafb088bd4b5574d752d6ef71f7d78054821673aab2f6b45b28e962b3acd1ee4fc88aeddf55775617905573e41d2489571d322189246dafa5ebde1f4699f4989091527fd3bdcf34226f9e810a1afecc8561c82ca9d9fd3955869ad47d9842f2dba8fa1e8054909116732da4983a622a8498bb1a21fae9d8f6c66493996217905560805160601c610be86112036000398061034e52806103d252806104c3528061056f52806106085250610be86000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638e9e56ef1161005b5780638e9e56ef146101fe578063ad5c464814610206578063d9da4fe61461020e578063e0af3616146102c957610088565b8063313ce5671461008d578063495e4348146100ab57806375aa41741461015357806388462c8d146101af575b600080fd5b6100956102d1565b6040805160ff9092168252519081900360200190f35b610141600480360360608110156100c157600080fd5b73ffffffffffffffffffffffffffffffffffffffff823581169260208101359091169181019060608101604082013564010000000081111561010257600080fd5b82018360208201111561011457600080fd5b8035906020019184600183028401116401000000008311171561013657600080fd5b5090925090506102d6565b60408051918252519081900360200190f35b6101866004803603602081101561016957600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610322565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6101ea600480360360408110156101c557600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602001351661034a565b604080519115158252519081900360200190f35b6100956104b8565b6101866104c1565b6102b0600480360360a081101561022457600080fd5b73ffffffffffffffffffffffffffffffffffffffff823581169260208101359091169160408201359160608101359181019060a08101608082013564010000000081111561027157600080fd5b82018360208201111561028357600080fd5b803590602001918460018302840111640100000000831117156102a557600080fd5b5090925090506104e5565b6040805192835260208301919091528051918290030190f35b61018661078e565b601290565b60008060006102ea878760008089896104e5565b90925090506103178161030b84670de0b6b3a764000063ffffffff6107a616565b9063ffffffff61082016565b979650505050505050565b60006020819052908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156103d0575073ffffffffffffffffffffffffffffffffffffffff8082166000908152602081905260409020541615156104b2565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610454575073ffffffffffffffffffffffffffffffffffffffff8083166000908152602081905260409020541615156104b2565b73ffffffffffffffffffffffffffffffffffffffff808416600090815260208190526040808220548584168352912054908216911681158015906104ad575073ffffffffffffffffffffffffffffffffffffffff811615155b925050505b92915050565b60015460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000808673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16141561056d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180610b3c6029913960400191505060405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614156106065773ffffffffffffffffffffffffffffffffffffffff8088166000908152602081905260408120549091166105f481610862565b60ff16600a0a94509250610783915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614156106a05773ffffffffffffffffffffffffffffffffffffffff80891660009081526020819052604081205490911661068d81610862565b90945060ff16600a0a9250610783915050565b73ffffffffffffffffffffffffffffffffffffffff808916600090815260208190526040812054909116906106d482610862565b73ffffffffffffffffffffffffffffffffffffffff808c16600090815260208190526040812054939750919350919091169061070f82610862565b909550905060ff80841690821611156107525761074b61073b60ff83811690861663ffffffff6109c916565b8790600a0a63ffffffff6107a616565b955061077e565b61077b61076b60ff85811690841663ffffffff6109c916565b8690600a0a63ffffffff6107a616565b94505b505050505b965096945050505050565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b6000826107b5575060006104b2565b828202828482816107c257fe5b0414610819576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180610b656021913960400191505060405180910390fd5b9392505050565b600061081983836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610a0b565b60008073ffffffffffffffffffffffffffffffffffffffff83166108e757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4f535741503a2070726963652066656564206e6f7420666f756e640000000000604482015290519081900360640190fd5b60008373ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561092f57600080fd5b505afa158015610943573d6000803e3d6000fd5b505050506040513d60a081101561095957600080fd5b506020015160015460ff1692509050600081136109c1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180610b86602d913960400191505060405180910390fd5b939092509050565b600061081983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610ac7565b60008183610ab1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610a76578181015183820152602001610a5e565b50505050905090810190601f168015610aa35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581610abd57fe5b0495945050505050565b60008184841115610b33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201818152835160248401528351909283926044909101919085019080838360008315610a76578181015183820152602001610a5e565b50505090039056fe4f535741503a2066726f6d20616e6420746f2061646472657373657320617265207468652073616d65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f535741505f4f7261636c65436861696e6c696e6b3a204e65676174697665206f72207a65726f207072696365a264697066735822122039346efde2b87c03e6ead462cdb46d7b3fab491025c03988000a85991b47c6e664736f6c634300060b0033"
    };
});
define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlink.ts", ["require", "exports", "@ijstech/eth-contract", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlink.json.ts"], function (require, exports, eth_contract_2, OSWAP_OracleChainlink_json_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.OSWAP_OracleChainlink = void 0;
    class OSWAP_OracleChainlink extends eth_contract_2.Contract {
        constructor(wallet, address) {
            super(wallet, address, OSWAP_OracleChainlink_json_1.default.abi, OSWAP_OracleChainlink_json_1.default.bytecode);
            this.assign();
        }
        deploy(options) {
            return this.__deploy([], options);
        }
        assign() {
            let WETH_call = async (options) => {
                let result = await this.call('WETH', [], options);
                return result;
            };
            this.WETH = WETH_call;
            let _WETH_call = async (options) => {
                let result = await this.call('_WETH', [], options);
                return result;
            };
            this._WETH = _WETH_call;
            let chainlinkDeicmals_call = async (options) => {
                let result = await this.call('chainlinkDeicmals', [], options);
                return new eth_contract_2.BigNumber(result);
            };
            this.chainlinkDeicmals = chainlinkDeicmals_call;
            let decimals_call = async (options) => {
                let result = await this.call('decimals', [], options);
                return new eth_contract_2.BigNumber(result);
            };
            this.decimals = decimals_call;
            let getLatestPriceParams = (params) => [params.from, params.to, this.wallet.utils.stringToBytes(params.payload)];
            let getLatestPrice_call = async (params, options) => {
                let result = await this.call('getLatestPrice', getLatestPriceParams(params), options);
                return new eth_contract_2.BigNumber(result);
            };
            this.getLatestPrice = getLatestPrice_call;
            let getRatioParams = (params) => [params.from, params.to, this.wallet.utils.toString(params.param3), this.wallet.utils.toString(params.param4), this.wallet.utils.stringToBytes(params.param5)];
            let getRatio_call = async (params, options) => {
                let result = await this.call('getRatio', getRatioParams(params), options);
                return {
                    numerator: new eth_contract_2.BigNumber(result.numerator),
                    denominator: new eth_contract_2.BigNumber(result.denominator)
                };
            };
            this.getRatio = getRatio_call;
            let isSupportedParams = (params) => [params.from, params.to];
            let isSupported_call = async (params, options) => {
                let result = await this.call('isSupported', isSupportedParams(params), options);
                return result;
            };
            this.isSupported = isSupported_call;
            let priceFeedAddresses_call = async (param1, options) => {
                let result = await this.call('priceFeedAddresses', [param1], options);
                return result;
            };
            this.priceFeedAddresses = priceFeedAddresses_call;
        }
    }
    exports.OSWAP_OracleChainlink = OSWAP_OracleChainlink;
    OSWAP_OracleChainlink._abi = OSWAP_OracleChainlink_json_1.default.abi;
});
define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkBinance.json.ts", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    ///<amd-module name='@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkBinance.json.ts'/> 
    exports.default = {
        "abi": [
            { "inputs": [], "stateMutability": "nonpayable", "type": "constructor" },
            { "inputs": [], "name": "WETH", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "_WBNB", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "chainlinkDeicmals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "decimals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "bytes", "name": "payload", "type": "bytes" }], "name": "getLatestPrice", "outputs": [{ "internalType": "uint256", "name": "price", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "bytes", "name": "", "type": "bytes" }], "name": "getRatio", "outputs": [{ "internalType": "uint256", "name": "numerator", "type": "uint256" }, { "internalType": "uint256", "name": "denominator", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }], "name": "isSupported", "outputs": [{ "internalType": "bool", "name": "supported", "type": "bool" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "priceFeedAddresses", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" }
        ],
        "bytecode": ""
    };
});
define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkBinance.ts", ["require", "exports", "@ijstech/eth-contract", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkBinance.json.ts"], function (require, exports, eth_contract_3, OSWAP_OracleChainlinkBinance_json_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.OSWAP_OracleChainlinkBinance = void 0;
    class OSWAP_OracleChainlinkBinance extends eth_contract_3.Contract {
        constructor(wallet, address) {
            super(wallet, address, OSWAP_OracleChainlinkBinance_json_1.default.abi, OSWAP_OracleChainlinkBinance_json_1.default.bytecode);
            this.assign();
        }
        deploy(options) {
            return this.__deploy([], options);
        }
        assign() {
            let WETH_call = async (options) => {
                let result = await this.call('WETH', [], options);
                return result;
            };
            this.WETH = WETH_call;
            let _WBNB_call = async (options) => {
                let result = await this.call('_WBNB', [], options);
                return result;
            };
            this._WBNB = _WBNB_call;
            let chainlinkDeicmals_call = async (options) => {
                let result = await this.call('chainlinkDeicmals', [], options);
                return new eth_contract_3.BigNumber(result);
            };
            this.chainlinkDeicmals = chainlinkDeicmals_call;
            let decimals_call = async (options) => {
                let result = await this.call('decimals', [], options);
                return new eth_contract_3.BigNumber(result);
            };
            this.decimals = decimals_call;
            let getLatestPriceParams = (params) => [params.from, params.to, this.wallet.utils.stringToBytes(params.payload)];
            let getLatestPrice_call = async (params, options) => {
                let result = await this.call('getLatestPrice', getLatestPriceParams(params), options);
                return new eth_contract_3.BigNumber(result);
            };
            this.getLatestPrice = getLatestPrice_call;
            let getRatioParams = (params) => [params.from, params.to, this.wallet.utils.toString(params.param3), this.wallet.utils.toString(params.param4), this.wallet.utils.stringToBytes(params.param5)];
            let getRatio_call = async (params, options) => {
                let result = await this.call('getRatio', getRatioParams(params), options);
                return {
                    numerator: new eth_contract_3.BigNumber(result.numerator),
                    denominator: new eth_contract_3.BigNumber(result.denominator)
                };
            };
            this.getRatio = getRatio_call;
            let isSupportedParams = (params) => [params.from, params.to];
            let isSupported_call = async (params, options) => {
                let result = await this.call('isSupported', isSupportedParams(params), options);
                return result;
            };
            this.isSupported = isSupported_call;
            let priceFeedAddresses_call = async (param1, options) => {
                let result = await this.call('priceFeedAddresses', [param1], options);
                return result;
            };
            this.priceFeedAddresses = priceFeedAddresses_call;
        }
    }
    exports.OSWAP_OracleChainlinkBinance = OSWAP_OracleChainlinkBinance;
    OSWAP_OracleChainlinkBinance._abi = OSWAP_OracleChainlinkBinance_json_1.default.abi;
});
define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkFiat.json.ts", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    ///<amd-module name='@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkFiat.json.ts'/> 
    exports.default = {
        "abi": [
            { "inputs": [], "stateMutability": "nonpayable", "type": "constructor" },
            { "inputs": [], "name": "WETH", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "chainlinkDeicmals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "decimals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "bytes", "name": "payload", "type": "bytes" }], "name": "getLatestPrice", "outputs": [{ "internalType": "uint256", "name": "price", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "fromAmount", "type": "uint256" }, { "internalType": "uint256", "name": "toAmount", "type": "uint256" }, { "internalType": "bytes", "name": "payload", "type": "bytes" }], "name": "getRatio", "outputs": [{ "internalType": "uint256", "name": "numerator", "type": "uint256" }, { "internalType": "uint256", "name": "denominator", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }], "name": "isSupported", "outputs": [{ "internalType": "bool", "name": "supported", "type": "bool" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "priceFeedAddresses", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" }
        ],
        "bytecode": "60a06040526001805460ff1916601217905534801561001d57600080fd5b50600060808190526001805460ff1916600817905560208190527f2a11cb67ca5c7e99dba99b50e02c11472d0f19c22ed5af42a1599a7f57e1c7a480546001600160a01b0319908116735f4ec3df9cbd43714fe2740f5e3616155c5b8419179091557f922605635d8625baeee2632c4abd30ed3e656c608e4e1d527ac798b2e7bbaf808054821673c929ad75b72593967de83e7f7cda0493458261d91790557f7145bb02480b505fc02ccfdba07d3ba3a9d821606f0688263abedd0ac6e5bec58054821673547a514d5e3769680ce22b2361c10ea13619e8a91790557f6003db125a0431b50c16b279904f3833ad40a59205c5dd86e52593289213f85b8054821673231e764b44b2c1b7ca171fa8021a24ed520cde101790557ff34f20bbd4e46695d49bcf329350e74df33b4424a785fe9bbf81bc56aa6e9e358054821673b23d105df4958b4b81757e12f2151b5b5183520b1790557f9567ec2ba8ba890bac0ed061353221bda07e1a3caa0f4cd196c3959a6b7da76e80548216738797abc4641de76342b8ace9c63e3301dc35e3d81790557f652f71c42b843343e1ef371dbb9eee4ae200cef6c0330cc356d68047e9c79b628054821673e20ca8d7546932360e37e9d72c1a47334af577061790557fd3172e9761f8f902dc6e1bb80a9d77948a644fb69c451d158615998e836e061080548216737eed379bf00005cfed29fed4009669de9bcc21ce1790557f8dd1acf2f417f842f399a5c6c5a803e3017458a53801bad96df1fe1972a4537c805482167366a47b7206130e6ff64854ef0e1edfa237e653391790557f60788a10714095b4b847dd17e28e2482eb05bcedcbe89ea8d5fa139281c227ff8054821673919c77acc7373d000b329c1276c76586ed2dd19f1790557f9d36796f595ad8c503b82568e7e967e06e60c0e85648af5d26070800c033c7f080548216739441d7556e7820b5ca42082cfa99487d56aca9581790557f72ecb6b277d69e65f266d635816977482f3bd43f38cd571ba98aab196b191eb280548216731e6cf0d433de4fe882a437abc654f58e1e78548c1790557fac42b33335ec2d57e8c892598a95336eedfbe3a46f787016e9d908bff25633e98054821673f4030086522a5beea4988f8ca5b36dbc97bee88c1790557f939f7cabc28bdbedc4485191b21a60d41b948f6b2be04fad8a9bba962c7a74b18054821673833d8eb16d306ed1fbb5d7a2e019e106b960965a1790557f9fe95883346d750bb0069fa8dcb6f96777f500681e1e3fd69dfaaeb0d4bdcf7d8054821673b10a047f8db80d781d006f1401beb7d70eb4da1a1790557f511cc89fca1810b4d2868146b87932d94ee0e38147e04dc2f8572df83cf520a88054821673dbd020caef83efd542f4de03e3cf0c28a4428bd51790557f74b21504d6ce8d3085ff4d3c40f4f6f826f045fe400f691809753490c1113ccc80548216730ad50393f11ffac4dd0fe5f1056448ecb75226cf1790557ff7b15f98e94b56adc7bc4251d8e5bab2a85df3c658d291f469be1863917931e98054821672cb80cf097d9aa9a3779ad8ee7cf98437eae0501790557f70c3dba262fa5eaaf3e393830b86a1923f032bbcdc463b5d2b22ed5f11b1e6858054821673cd627aa160a6fa45eb793d19ef54f5062f20f33f1790557f5306b8fbe80b30a74098357ee8e26fad8dc069da9011cca5f0870a0a5982e5418054821673aed0c38402a5d19df6e4c03f4e2dced6e29c1ee91790557f1f1e0089795d1bb133612d9d3cf9619af7b07c609488ea5aef58bd28c174fbc78054821673ee636e1f7a0a846eec2385e729cea7d1b339d40d1790557f1bc36087bcda8c8f0a1d3644ff9e81045f37abda2f3e48c9950fe55b89d0df568054821673d2a593bf7594ace1fad597adb697b5645d5eddb21790557fdfd3b41754e69a955b4a4730437be271f138167ae4e1ece990fe33d579fa67818054821673bf86e7b2565eac3bfd80634176f31bd186566b061790557f541919c86040022d9e18ea6a255cd26949db2e27ffdd387787ea434611d53f4480548216736ebc52c8c1089be9eb3945c4350b68b8e4c2233f1790557f65ddfc0b22efd48a70a9225c1497ac6013365784568b598beb41c24a618196638054821673bfc189ac214e6a4a35ebc281ad15669619b755341790557f80456c86de953933f186adaa911aaf36152275eae039f985c38a66534afc83428054821673e1329b3f6513912caf589659777b66011aee58801790557f3e7bf06e8b72ffba99e83ea37caf8bbc9adb97b25a1163ad0646bb7e775f97f78054821673ae2ebe3c4d20ce13ce47cbb49b6d7ee631cd816e1790557ff3da0919264f7c718053ecd775aaadf3e60482b8a48602c1a29f9e3fa1891d1c8054821673f8ff43e991a81e6ec886a3d281a2c6cc19ae70fc1790557f730d6fdf8f2d5e5e75a62ad49cc4d175b7750703aa72e452e1e22258c77079fb80548216732c1d072e956affc0d435cb7ac38ef18d24d9127c1790557ffde91a0e4ce347aee87f50e1828f560ac227f5a85b774d40a730df907420cbdd8054821673fd33ec6abaa1bdc3d9c6c85f1d6299e5a1a5511f1790557f09e71077be6092a94ba4c293285c670ccd9ca579f60d83ec45b8ca147ea0a60e80548216737bac85a8a13a4bcd8abb3eb7d6b4d632c5a576761790557fdda00a57bee26ed4ac93f73d0238caf2b0b80d455de521e247ae994efa80def58054821673ec1d1b3b0443256cc3860e24a46f108e699484aa1790557f8368c25c4b2f30d7b2ab019df22a73e277c773d0fb7cde331e90efc89d2692fb8054821673c751e86208f0f8af2d5cd0e29716ca7ad98b5ef51790557f7b66cee30b2b198fbf35e728c76f17d88c3a425bd48097e22eafaff9da2e7e8f8054821673cc445b35b3636bc7cc7051f4769d8982ed0d449a1790557fe7ad96a34620650a4b4bc1354f7fc06794a9fe551267162fdb4eedc2720590f880548216737ece4e4e206ed913d991a074a19c1921427267971790557f692c63a03bf35f688365fdce87bd4530629214d76f11021ca81cb251428807a980548216737d476f061f8212a8c9317d5784e72b4212436e931790557feea4636393899058b0b6051b59d9306ed43f999aaaf4d4244fb870242378ebea80548216734ea6ec4c1691c62623122b213572b2be5a618c0d1790557f72d1ea1bd06e478789ce223c9d4541833ee2f7ebeef7a8270683f3d403f32f9480548216730f59666ede214281e956cb3b2d0d69415aff4a011790557fe2c8e4a8fa3904a45b2d114396c1fba62bf2ed05bd169dc940fa95bf862d58858054821673f9fcc6e1186acf6529b1c1949453f51b4b6eee671790557f3a366db8310f607ec90a3e157b2d9c96b54e5b9058a23c07ffef108dcac299bf805482167348731cf7e84dc94c5f84577882c14be11a5b74561790557fbcefea18500237153a0e9088d0aa32cbf76867a6b9a7a7fcd0ec7de527a38512805482167335e3f7e558c04ce7eee1629258ecbba03b36ec561790557f6cd63715d5f0db03eec592ada4e78050279222b9583fb20a52ef8a37c8e911b98054821673dc3ea94cd0ac27d9a86c180091e7f78c683d36991790557ffdb5d3617a6450fac65ced82c9646220efbda1aea30e39403b5e9946b26be9308054821672a773bd2ce922f866bb43ab876009fb959d7c291790557fb738e63d4f4906dfb172df67af9f36b70db9ec183d59b161eabe70a6ea8083e68054821673cc70f09a6cc17553b2e31954cd36e4a2d89501f71790557fccaa2bed149af4debba20ef072d5630af579675cb2378409659ed4b2bb54bd128054821673fb0cfd6c19e25db4a08d8a204a387cea48cc138f1790557ff29e19d793628f32246efa818ea830f268dcfeb11786303f962ad24575d5dcdd805482167326929b85fe284eeab939831002e1928183a10fb11790557f6da98f1d47bb0bc5549e1497f71ab684f8d693b19b458fbccae05e126d246e908054821673553303d460ee0afb37edff9be42922d8ff63220e1790557fc6521c8ea4247e8beb499344e591b9401fb2807ff9997dd598fd9e56c73a264d80548216738fffffd4afb6115b954bd326cbe7b4ba576818f61790557f9990e89c9768229b006f2e7a48943a16645111b1ae5191d7b4fb30d0d698833f8054821673fac81ea9dd29d8e9b212acd6edbeb6de38cb43af1790557f6d1d9d05b361c4628ed0b0e7e3820f2271e1f5cbacb28004d44b7e2471cd18e280548216737a8544894f7fd0c69cfcbe2b4b2e277b0b9a43551790557fa934b07068f5d95a11413ed6d08a4a1122dc4b8c14a6ab2d94f8b279dac6304280548216733e7d1eab13ad0104d2750b8863b489d65364e32d1790557f828ac2cfae8391df6fe4c86c1beb4a85a14c88f651908f41682259723170b5dc8054821673a027702dbb89fbd58938e4324ac03b58d812b0e11790557fd3bdcf34226f9e810a1afecc8561c82ca9d9fd3955869ad47d9842f2dba8fa1e80548216732885d15b8af22648b98b122b22fdf4d2a56c60231790557ff7016d9ff68d9bf2559d515d1b83fd6a6cc71e99301e48aecb14f4d0370abeb08054821673283d433435cfcabf00263beef6a362b7cc5ed9f21790557fb1f5de9df089da4b366136a057dcf5b8fef3ecb35e3ad7ca7d756d5d6d025da88054821673a8e875f94138b0c5b51d1e1d5de35bbddd28ea871790557357ab1ec28d129707052df4df418d58a2d46d5f519091527f891368e9fb55bce905a27799ff398f5706410e14205316f805cafda2a6c93be4805490911673ad35bd71b9afe6e4bdc266b345c198eadef9ad9417905560805160601c610ccd610de26000398061039b528061053c52806105c0528061072e52806107c75250610ccd6000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806388462c8d1161005b57806388462c8d146101a45780638e9e56ef146101f3578063ad5c4648146101fb578063d9da4fe6146102035761007d565b8063313ce56714610082578063495e4348146100a057806375aa417414610148575b600080fd5b61008a6102be565b6040805160ff9092168252519081900360200190f35b610136600480360360608110156100b657600080fd5b73ffffffffffffffffffffffffffffffffffffffff82358116926020810135909116918101906060810160408201356401000000008111156100f757600080fd5b82018360208201111561010957600080fd5b8035906020019184600183028401116401000000008311171561012b57600080fd5b5090925090506102c3565b60408051918252519081900360200190f35b61017b6004803603602081101561015e57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661030f565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6101df600480360360408110156101ba57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516610337565b604080519115158252519081900360200190f35b61008a610390565b61017b610399565b6102a5600480360360a081101561021957600080fd5b73ffffffffffffffffffffffffffffffffffffffff823581169260208101359091169160408201359160608101359181019060a08101608082013564010000000081111561026657600080fd5b82018360208201111561027857600080fd5b8035906020019184600183028401116401000000008311171561029a57600080fd5b5090925090506103bd565b6040805192835260208301919091528051918290030190f35b601290565b60008060006102d7878760008089896103bd565b9092509050610304816102f884670de0b6b3a764000063ffffffff61048316565b9063ffffffff6104f616565b979650505050505050565b60006020819052908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff83161580610370575073ffffffffffffffffffffffffffffffffffffffff8216155b1561037d5750600061038a565b6103878383610538565b90505b92915050565b60015460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008073ffffffffffffffffffffffffffffffffffffffff8816158015906103fa575073ffffffffffffffffffffffffffffffffffffffff871615155b61046557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f4f535741503a204f7261636c653a20496e76616c696420616464726573730000604482015290519081900360640190fd5b6104738888888888886106a4565b915091505b965096945050505050565b6000826104925750600061038a565b8282028284828161049f57fe5b0414610387576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180610c4a6021913960400191505060405180910390fd5b600061038783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061094c565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156105be575073ffffffffffffffffffffffffffffffffffffffff80821660009081526020819052604090205416151561038a565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610642575073ffffffffffffffffffffffffffffffffffffffff80831660009081526020819052604090205416151561038a565b73ffffffffffffffffffffffffffffffffffffffff8084166000908152602081905260408082205485841683529120549082169116811580159061069b575073ffffffffffffffffffffffffffffffffffffffff811615155b95945050505050565b6000808673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16141561072c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180610c216029913960400191505060405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614156107c55773ffffffffffffffffffffffffffffffffffffffff8088166000908152602081905260408120549091166107b381610a08565b60ff16600a0a94509250610478915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16141561085f5773ffffffffffffffffffffffffffffffffffffffff80891660009081526020819052604081205490911661084c81610a08565b90945060ff16600a0a9250610478915050565b73ffffffffffffffffffffffffffffffffffffffff8089166000908152602081905260408120549091169061089382610a08565b73ffffffffffffffffffffffffffffffffffffffff808c1660009081526020819052604081205493975091935091909116906108ce82610a08565b909550905060ff80841690821611156109115761090a6108fa60ff83811690861663ffffffff610b6f16565b8790600a0a63ffffffff61048316565b955061093d565b61093a61092a60ff85811690841663ffffffff610b6f16565b8690600a0a63ffffffff61048316565b94505b50505050965096945050505050565b600081836109f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156109b757818101518382015260200161099f565b50505050905090810190601f1680156109e45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816109fe57fe5b0495945050505050565b60008073ffffffffffffffffffffffffffffffffffffffff8316610a8d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4f535741503a2070726963652066656564206e6f7420666f756e640000000000604482015290519081900360640190fd5b60008373ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610ad557600080fd5b505afa158015610ae9573d6000803e3d6000fd5b505050506040513d60a0811015610aff57600080fd5b506020015160015460ff169250905060008113610b67576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180610c6b602d913960400191505060405180910390fd5b939092509050565b600061038783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060008184841115610c18576040517f08c379a00000000000000000000000000000000000000000000000000000000081526020600482018181528351602484015283519092839260449091019190850190808383600083156109b757818101518382015260200161099f565b50505090039056fe4f535741503a2066726f6d20616e6420746f2061646472657373657320617265207468652073616d65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f535741505f4f7261636c65436861696e6c696e6b3a204e65676174697665206f72207a65726f207072696365a26469706673582212203b31640fe6cc09d3dd71a8d89242df3f4d38ce1043f52d6eef94b295433ecbab64736f6c634300060b0033"
    };
});
define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkFiat.ts", ["require", "exports", "@ijstech/eth-contract", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkFiat.json.ts"], function (require, exports, eth_contract_4, OSWAP_OracleChainlinkFiat_json_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.OSWAP_OracleChainlinkFiat = void 0;
    class OSWAP_OracleChainlinkFiat extends eth_contract_4.Contract {
        constructor(wallet, address) {
            super(wallet, address, OSWAP_OracleChainlinkFiat_json_1.default.abi, OSWAP_OracleChainlinkFiat_json_1.default.bytecode);
            this.assign();
        }
        deploy(options) {
            return this.__deploy([], options);
        }
        assign() {
            let WETH_call = async (options) => {
                let result = await this.call('WETH', [], options);
                return result;
            };
            this.WETH = WETH_call;
            let chainlinkDeicmals_call = async (options) => {
                let result = await this.call('chainlinkDeicmals', [], options);
                return new eth_contract_4.BigNumber(result);
            };
            this.chainlinkDeicmals = chainlinkDeicmals_call;
            let decimals_call = async (options) => {
                let result = await this.call('decimals', [], options);
                return new eth_contract_4.BigNumber(result);
            };
            this.decimals = decimals_call;
            let getLatestPriceParams = (params) => [params.from, params.to, this.wallet.utils.stringToBytes(params.payload)];
            let getLatestPrice_call = async (params, options) => {
                let result = await this.call('getLatestPrice', getLatestPriceParams(params), options);
                return new eth_contract_4.BigNumber(result);
            };
            this.getLatestPrice = getLatestPrice_call;
            let getRatioParams = (params) => [params.from, params.to, this.wallet.utils.toString(params.fromAmount), this.wallet.utils.toString(params.toAmount), this.wallet.utils.stringToBytes(params.payload)];
            let getRatio_call = async (params, options) => {
                let result = await this.call('getRatio', getRatioParams(params), options);
                return {
                    numerator: new eth_contract_4.BigNumber(result.numerator),
                    denominator: new eth_contract_4.BigNumber(result.denominator)
                };
            };
            this.getRatio = getRatio_call;
            let isSupportedParams = (params) => [params.from, params.to];
            let isSupported_call = async (params, options) => {
                let result = await this.call('isSupported', isSupportedParams(params), options);
                return result;
            };
            this.isSupported = isSupported_call;
            let priceFeedAddresses_call = async (param1, options) => {
                let result = await this.call('priceFeedAddresses', [param1], options);
                return result;
            };
            this.priceFeedAddresses = priceFeedAddresses_call;
        }
    }
    exports.OSWAP_OracleChainlinkFiat = OSWAP_OracleChainlinkFiat;
    OSWAP_OracleChainlinkFiat._abi = OSWAP_OracleChainlinkFiat_json_1.default.abi;
});
define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkFiatAvalanche.json.ts", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    ///<amd-module name='@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkFiatAvalanche.json.ts'/> 
    exports.default = {
        "abi": [
            { "inputs": [], "stateMutability": "nonpayable", "type": "constructor" },
            { "inputs": [], "name": "WETH", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "chainlinkDeicmals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "decimals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "bytes", "name": "payload", "type": "bytes" }], "name": "getLatestPrice", "outputs": [{ "internalType": "uint256", "name": "price", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "fromAmount", "type": "uint256" }, { "internalType": "uint256", "name": "toAmount", "type": "uint256" }, { "internalType": "bytes", "name": "payload", "type": "bytes" }], "name": "getRatio", "outputs": [{ "internalType": "uint256", "name": "numerator", "type": "uint256" }, { "internalType": "uint256", "name": "denominator", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }], "name": "isSupported", "outputs": [{ "internalType": "bool", "name": "supported", "type": "bool" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "priceFeedAddresses", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" }
        ],
        "bytecode": ""
    };
});
define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkFiatAvalanche.ts", ["require", "exports", "@ijstech/eth-contract", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkFiatAvalanche.json.ts"], function (require, exports, eth_contract_5, OSWAP_OracleChainlinkFiatAvalanche_json_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.OSWAP_OracleChainlinkFiatAvalanche = void 0;
    class OSWAP_OracleChainlinkFiatAvalanche extends eth_contract_5.Contract {
        constructor(wallet, address) {
            super(wallet, address, OSWAP_OracleChainlinkFiatAvalanche_json_1.default.abi, OSWAP_OracleChainlinkFiatAvalanche_json_1.default.bytecode);
            this.assign();
        }
        deploy(options) {
            return this.__deploy([], options);
        }
        assign() {
            let WETH_call = async (options) => {
                let result = await this.call('WETH', [], options);
                return result;
            };
            this.WETH = WETH_call;
            let chainlinkDeicmals_call = async (options) => {
                let result = await this.call('chainlinkDeicmals', [], options);
                return new eth_contract_5.BigNumber(result);
            };
            this.chainlinkDeicmals = chainlinkDeicmals_call;
            let decimals_call = async (options) => {
                let result = await this.call('decimals', [], options);
                return new eth_contract_5.BigNumber(result);
            };
            this.decimals = decimals_call;
            let getLatestPriceParams = (params) => [params.from, params.to, this.wallet.utils.stringToBytes(params.payload)];
            let getLatestPrice_call = async (params, options) => {
                let result = await this.call('getLatestPrice', getLatestPriceParams(params), options);
                return new eth_contract_5.BigNumber(result);
            };
            this.getLatestPrice = getLatestPrice_call;
            let getRatioParams = (params) => [params.from, params.to, this.wallet.utils.toString(params.fromAmount), this.wallet.utils.toString(params.toAmount), this.wallet.utils.stringToBytes(params.payload)];
            let getRatio_call = async (params, options) => {
                let result = await this.call('getRatio', getRatioParams(params), options);
                return {
                    numerator: new eth_contract_5.BigNumber(result.numerator),
                    denominator: new eth_contract_5.BigNumber(result.denominator)
                };
            };
            this.getRatio = getRatio_call;
            let isSupportedParams = (params) => [params.from, params.to];
            let isSupported_call = async (params, options) => {
                let result = await this.call('isSupported', isSupportedParams(params), options);
                return result;
            };
            this.isSupported = isSupported_call;
            let priceFeedAddresses_call = async (param1, options) => {
                let result = await this.call('priceFeedAddresses', [param1], options);
                return result;
            };
            this.priceFeedAddresses = priceFeedAddresses_call;
        }
    }
    exports.OSWAP_OracleChainlinkFiatAvalanche = OSWAP_OracleChainlinkFiatAvalanche;
    OSWAP_OracleChainlinkFiatAvalanche._abi = OSWAP_OracleChainlinkFiatAvalanche_json_1.default.abi;
});
define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkFiatBinance.json.ts", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    ///<amd-module name='@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkFiatBinance.json.ts'/> 
    exports.default = {
        "abi": [
            { "inputs": [], "stateMutability": "nonpayable", "type": "constructor" },
            { "inputs": [], "name": "WETH", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "chainlinkDeicmals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "decimals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "bytes", "name": "payload", "type": "bytes" }], "name": "getLatestPrice", "outputs": [{ "internalType": "uint256", "name": "price", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "fromAmount", "type": "uint256" }, { "internalType": "uint256", "name": "toAmount", "type": "uint256" }, { "internalType": "bytes", "name": "payload", "type": "bytes" }], "name": "getRatio", "outputs": [{ "internalType": "uint256", "name": "numerator", "type": "uint256" }, { "internalType": "uint256", "name": "denominator", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }], "name": "isSupported", "outputs": [{ "internalType": "bool", "name": "supported", "type": "bool" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "priceFeedAddresses", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" }
        ],
        "bytecode": ""
    };
});
define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkFiatBinance.ts", ["require", "exports", "@ijstech/eth-contract", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkFiatBinance.json.ts"], function (require, exports, eth_contract_6, OSWAP_OracleChainlinkFiatBinance_json_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.OSWAP_OracleChainlinkFiatBinance = void 0;
    class OSWAP_OracleChainlinkFiatBinance extends eth_contract_6.Contract {
        constructor(wallet, address) {
            super(wallet, address, OSWAP_OracleChainlinkFiatBinance_json_1.default.abi, OSWAP_OracleChainlinkFiatBinance_json_1.default.bytecode);
            this.assign();
        }
        deploy(options) {
            return this.__deploy([], options);
        }
        assign() {
            let WETH_call = async (options) => {
                let result = await this.call('WETH', [], options);
                return result;
            };
            this.WETH = WETH_call;
            let chainlinkDeicmals_call = async (options) => {
                let result = await this.call('chainlinkDeicmals', [], options);
                return new eth_contract_6.BigNumber(result);
            };
            this.chainlinkDeicmals = chainlinkDeicmals_call;
            let decimals_call = async (options) => {
                let result = await this.call('decimals', [], options);
                return new eth_contract_6.BigNumber(result);
            };
            this.decimals = decimals_call;
            let getLatestPriceParams = (params) => [params.from, params.to, this.wallet.utils.stringToBytes(params.payload)];
            let getLatestPrice_call = async (params, options) => {
                let result = await this.call('getLatestPrice', getLatestPriceParams(params), options);
                return new eth_contract_6.BigNumber(result);
            };
            this.getLatestPrice = getLatestPrice_call;
            let getRatioParams = (params) => [params.from, params.to, this.wallet.utils.toString(params.fromAmount), this.wallet.utils.toString(params.toAmount), this.wallet.utils.stringToBytes(params.payload)];
            let getRatio_call = async (params, options) => {
                let result = await this.call('getRatio', getRatioParams(params), options);
                return {
                    numerator: new eth_contract_6.BigNumber(result.numerator),
                    denominator: new eth_contract_6.BigNumber(result.denominator)
                };
            };
            this.getRatio = getRatio_call;
            let isSupportedParams = (params) => [params.from, params.to];
            let isSupported_call = async (params, options) => {
                let result = await this.call('isSupported', isSupportedParams(params), options);
                return result;
            };
            this.isSupported = isSupported_call;
            let priceFeedAddresses_call = async (param1, options) => {
                let result = await this.call('priceFeedAddresses', [param1], options);
                return result;
            };
            this.priceFeedAddresses = priceFeedAddresses_call;
        }
    }
    exports.OSWAP_OracleChainlinkFiatBinance = OSWAP_OracleChainlinkFiatBinance;
    OSWAP_OracleChainlinkFiatBinance._abi = OSWAP_OracleChainlinkFiatBinance_json_1.default.abi;
});
define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkFiatGeneric.json.ts", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    ///<amd-module name='@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkFiatGeneric.json.ts'/> 
    exports.default = {
        "abi": [
            { "inputs": [{ "internalType": "address[]", "name": "_tokens", "type": "address[]" }, { "internalType": "address[]", "name": "_pricefeeds", "type": "address[]" }], "stateMutability": "nonpayable", "type": "constructor" },
            { "inputs": [], "name": "WETH", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "chainlinkDeicmals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "decimals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "bytes", "name": "payload", "type": "bytes" }], "name": "getLatestPrice", "outputs": [{ "internalType": "uint256", "name": "price", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "fromAmount", "type": "uint256" }, { "internalType": "uint256", "name": "toAmount", "type": "uint256" }, { "internalType": "bytes", "name": "payload", "type": "bytes" }], "name": "getRatio", "outputs": [{ "internalType": "uint256", "name": "numerator", "type": "uint256" }, { "internalType": "uint256", "name": "denominator", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }], "name": "isSupported", "outputs": [{ "internalType": "bool", "name": "supported", "type": "bool" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "priceFeedAddresses", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" }
        ],
        "bytecode": "60a06040526001805460ff1916601217905534801561001d57600080fd5b50604051610fc9380380610fc98339818101604052604081101561004057600080fd5b810190808051604051939291908464010000000082111561006057600080fd5b90830190602082018581111561007557600080fd5b825186602082028301116401000000008211171561009257600080fd5b82525081516020918201928201910280838360005b838110156100bf5781810151838201526020016100a7565b50505050905001604052602001805160405193929190846401000000008211156100e857600080fd5b9083019060208201858111156100fd57600080fd5b825186602082028301116401000000008211171561011a57600080fd5b82525081516020918201928201910280838360005b8381101561014757818101518382015260200161012f565b50505050919091016040525050600060805250508051825183918391146101b5576040805162461bcd60e51b815260206004820152601660248201527f4172726179206c656e677468206e6f74206d6174636800000000000000000000604482015290519081900360640190fd5b815160005b8181101561029b5760008482815181106101d057fe5b6020908102919091018101516001600160a01b03808216600090815292839052604090922054909250161561024c576040805162461bcd60e51b815260206004820152601960248201527f7072696365206665656420616c72656164792065786973747300000000000000604482015290519081900360640190fd5b83828151811061025857fe5b6020908102919091018101516001600160a01b03928316600090815291829052604090912080546001600160a01b031916929091169190911790556001016101ba565b50506001805460ff191660081790555050505060805160601c610cea6102df6000398061035752806106155280610699528061080752806108a05250610cea6000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806388462c8d1161005b57806388462c8d146101a45780638e9e56ef146101f3578063ad5c4648146101fb578063d9da4fe6146102035761007d565b8063313ce56714610082578063495e4348146100a057806375aa417414610148575b600080fd5b61008a6102be565b6040805160ff9092168252519081900360200190f35b610136600480360360608110156100b657600080fd5b73ffffffffffffffffffffffffffffffffffffffff82358116926020810135909116918101906060810160408201356401000000008111156100f757600080fd5b82018360208201111561010957600080fd5b8035906020019184600183028401116401000000008311171561012b57600080fd5b5090925090506102c3565b60408051918252519081900360200190f35b61017b6004803603602081101561015e57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661030f565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6101df600480360360408110156101ba57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516610337565b604080519115158252519081900360200190f35b61008a61034c565b61017b610355565b6102a5600480360360a081101561021957600080fd5b73ffffffffffffffffffffffffffffffffffffffff823581169260208101359091169160408201359160608101359181019060a08101608082013564010000000081111561026657600080fd5b82018360208201111561027857600080fd5b8035906020019184600183028401116401000000008311171561029a57600080fd5b509092509050610379565b6040805192835260208301919091528051918290030190f35b601290565b60008060006102d787876000808989610379565b9092509050610304816102f884670de0b6b3a764000063ffffffff61039a16565b9063ffffffff61040d16565b979650505050505050565b60006020819052908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6000610343838361044f565b90505b92915050565b60015460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008061038a88888888888861049f565b915091505b965096945050505050565b6000826103a957506000610346565b828202828482816103b657fe5b0414610343576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180610c676021913960400191505060405180910390fd5b600061034383836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610555565b600073ffffffffffffffffffffffffffffffffffffffff83161580610488575073ffffffffffffffffffffffffffffffffffffffff8216155b1561049557506000610346565b6103438383610611565b60008073ffffffffffffffffffffffffffffffffffffffff8816158015906104dc575073ffffffffffffffffffffffffffffffffffffffff871615155b61054757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f4f535741503a204f7261636c653a20496e76616c696420616464726573730000604482015290519081900360640190fd5b61038a88888888888861077d565b600081836105fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156105c05781810151838201526020016105a8565b50505050905090810190601f1680156105ed5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161060757fe5b0495945050505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610697575073ffffffffffffffffffffffffffffffffffffffff808216600090815260208190526040902054161515610346565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561071b575073ffffffffffffffffffffffffffffffffffffffff808316600090815260208190526040902054161515610346565b73ffffffffffffffffffffffffffffffffffffffff80841660009081526020819052604080822054858416835291205490821691168115801590610774575073ffffffffffffffffffffffffffffffffffffffff811615155b95945050505050565b6000808673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161415610805576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180610c3e6029913960400191505060405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16141561089e5773ffffffffffffffffffffffffffffffffffffffff80881660009081526020819052604081205490911661088c81610a25565b60ff16600a0a9450925061038f915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614156109385773ffffffffffffffffffffffffffffffffffffffff80891660009081526020819052604081205490911661092581610a25565b90945060ff16600a0a925061038f915050565b73ffffffffffffffffffffffffffffffffffffffff8089166000908152602081905260408120549091169061096c82610a25565b73ffffffffffffffffffffffffffffffffffffffff808c1660009081526020819052604081205493975091935091909116906109a782610a25565b909550905060ff80841690821611156109ea576109e36109d360ff83811690861663ffffffff610b8c16565b8790600a0a63ffffffff61039a16565b9550610a16565b610a13610a0360ff85811690841663ffffffff610b8c16565b8690600a0a63ffffffff61039a16565b94505b50505050965096945050505050565b60008073ffffffffffffffffffffffffffffffffffffffff8316610aaa57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4f535741503a2070726963652066656564206e6f7420666f756e640000000000604482015290519081900360640190fd5b60008373ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610af257600080fd5b505afa158015610b06573d6000803e3d6000fd5b505050506040513d60a0811015610b1c57600080fd5b506020015160015460ff169250905060008113610b84576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180610c88602d913960400191505060405180910390fd5b939092509050565b600061034383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060008184841115610c35576040517f08c379a00000000000000000000000000000000000000000000000000000000081526020600482018181528351602484015283519092839260449091019190850190808383600083156105c05781810151838201526020016105a8565b50505090039056fe4f535741503a2066726f6d20616e6420746f2061646472657373657320617265207468652073616d65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f535741505f4f7261636c65436861696e6c696e6b3a204e65676174697665206f72207a65726f207072696365a2646970667358221220923a25b9e9c6043d9b4aeb3c375c23ccce1b1722fe3568478db71f0a6455259064736f6c634300060b0033"
    };
});
define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkFiatGeneric.ts", ["require", "exports", "@ijstech/eth-contract", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkFiatGeneric.json.ts"], function (require, exports, eth_contract_7, OSWAP_OracleChainlinkFiatGeneric_json_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.OSWAP_OracleChainlinkFiatGeneric = void 0;
    class OSWAP_OracleChainlinkFiatGeneric extends eth_contract_7.Contract {
        constructor(wallet, address) {
            super(wallet, address, OSWAP_OracleChainlinkFiatGeneric_json_1.default.abi, OSWAP_OracleChainlinkFiatGeneric_json_1.default.bytecode);
            this.assign();
        }
        deploy(params, options) {
            return this.__deploy([params.tokens, params.pricefeeds], options);
        }
        assign() {
            let WETH_call = async (options) => {
                let result = await this.call('WETH', [], options);
                return result;
            };
            this.WETH = WETH_call;
            let chainlinkDeicmals_call = async (options) => {
                let result = await this.call('chainlinkDeicmals', [], options);
                return new eth_contract_7.BigNumber(result);
            };
            this.chainlinkDeicmals = chainlinkDeicmals_call;
            let decimals_call = async (options) => {
                let result = await this.call('decimals', [], options);
                return new eth_contract_7.BigNumber(result);
            };
            this.decimals = decimals_call;
            let getLatestPriceParams = (params) => [params.from, params.to, this.wallet.utils.stringToBytes(params.payload)];
            let getLatestPrice_call = async (params, options) => {
                let result = await this.call('getLatestPrice', getLatestPriceParams(params), options);
                return new eth_contract_7.BigNumber(result);
            };
            this.getLatestPrice = getLatestPrice_call;
            let getRatioParams = (params) => [params.from, params.to, this.wallet.utils.toString(params.fromAmount), this.wallet.utils.toString(params.toAmount), this.wallet.utils.stringToBytes(params.payload)];
            let getRatio_call = async (params, options) => {
                let result = await this.call('getRatio', getRatioParams(params), options);
                return {
                    numerator: new eth_contract_7.BigNumber(result.numerator),
                    denominator: new eth_contract_7.BigNumber(result.denominator)
                };
            };
            this.getRatio = getRatio_call;
            let isSupportedParams = (params) => [params.from, params.to];
            let isSupported_call = async (params, options) => {
                let result = await this.call('isSupported', isSupportedParams(params), options);
                return result;
            };
            this.isSupported = isSupported_call;
            let priceFeedAddresses_call = async (param1, options) => {
                let result = await this.call('priceFeedAddresses', [param1], options);
                return result;
            };
            this.priceFeedAddresses = priceFeedAddresses_call;
        }
    }
    exports.OSWAP_OracleChainlinkFiatGeneric = OSWAP_OracleChainlinkFiatGeneric;
    OSWAP_OracleChainlinkFiatGeneric._abi = OSWAP_OracleChainlinkFiatGeneric_json_1.default.abi;
});
define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkGeneric.json.ts", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    ///<amd-module name='@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkGeneric.json.ts'/> 
    exports.default = {
        "abi": [
            { "inputs": [{ "internalType": "address", "name": "_weth", "type": "address" }, { "internalType": "address[]", "name": "_tokens", "type": "address[]" }, { "internalType": "address[]", "name": "_pricefeeds", "type": "address[]" }], "stateMutability": "nonpayable", "type": "constructor" },
            { "inputs": [], "name": "WETH", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "chainlinkDeicmals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "decimals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "bytes", "name": "payload", "type": "bytes" }], "name": "getLatestPrice", "outputs": [{ "internalType": "uint256", "name": "price", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "bytes", "name": "", "type": "bytes" }], "name": "getRatio", "outputs": [{ "internalType": "uint256", "name": "numerator", "type": "uint256" }, { "internalType": "uint256", "name": "denominator", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }], "name": "isSupported", "outputs": [{ "internalType": "bool", "name": "supported", "type": "bool" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "priceFeedAddresses", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" }
        ],
        "bytecode": "60a06040526001805460ff1916601217905534801561001d57600080fd5b50604051610ea4380380610ea48339818101604052606081101561004057600080fd5b81516020830180516040519294929383019291908464010000000082111561006757600080fd5b90830190602082018581111561007c57600080fd5b825186602082028301116401000000008211171561009957600080fd5b82525081516020918201928201910280838360005b838110156100c65781810151838201526020016100ae565b50505050905001604052602001805160405193929190846401000000008211156100ef57600080fd5b90830190602082018581111561010457600080fd5b825186602082028301116401000000008211171561012157600080fd5b82525081516020918201928201910280838360005b8381101561014e578181015183820152602001610136565b50505050919091016040525050506001600160601b0319606085901b16608052508051825183918391146101c9576040805162461bcd60e51b815260206004820152601660248201527f4172726179206c656e677468206e6f74206d6174636800000000000000000000604482015290519081900360640190fd5b815160005b818110156102af5760008482815181106101e457fe5b6020908102919091018101516001600160a01b038082166000908152928390526040909220549092501615610260576040805162461bcd60e51b815260206004820152601960248201527f7072696365206665656420616c72656164792065786973747300000000000000604482015290519081900360640190fd5b83828151811061026c57fe5b6020908102919091018101516001600160a01b03928316600090815291829052604090912080546001600160a01b031916929091169190911790556001016101ce565b5050505050505060805160601c610bbd6102e76000398061033b52806103bf52806104b0528061055c52806105f55250610bbd6000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806388462c8d1161005b57806388462c8d146101a45780638e9e56ef146101f3578063ad5c4648146101fb578063d9da4fe6146102035761007d565b8063313ce56714610082578063495e4348146100a057806375aa417414610148575b600080fd5b61008a6102be565b6040805160ff9092168252519081900360200190f35b610136600480360360608110156100b657600080fd5b73ffffffffffffffffffffffffffffffffffffffff82358116926020810135909116918101906060810160408201356401000000008111156100f757600080fd5b82018360208201111561010957600080fd5b8035906020019184600183028401116401000000008311171561012b57600080fd5b5090925090506102c3565b60408051918252519081900360200190f35b61017b6004803603602081101561015e57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661030f565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6101df600480360360408110156101ba57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516610337565b604080519115158252519081900360200190f35b61008a6104a5565b61017b6104ae565b6102a5600480360360a081101561021957600080fd5b73ffffffffffffffffffffffffffffffffffffffff823581169260208101359091169160408201359160608101359181019060a08101608082013564010000000081111561026657600080fd5b82018360208201111561027857600080fd5b8035906020019184600183028401116401000000008311171561029a57600080fd5b5090925090506104d2565b6040805192835260208301919091528051918290030190f35b601290565b60008060006102d7878760008089896104d2565b9092509050610304816102f884670de0b6b3a764000063ffffffff61077b16565b9063ffffffff6107f516565b979650505050505050565b60006020819052908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156103bd575073ffffffffffffffffffffffffffffffffffffffff80821660009081526020819052604090205416151561049f565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610441575073ffffffffffffffffffffffffffffffffffffffff80831660009081526020819052604090205416151561049f565b73ffffffffffffffffffffffffffffffffffffffff8084166000908152602081905260408082205485841683529120549082169116811580159061049a575073ffffffffffffffffffffffffffffffffffffffff811615155b925050505b92915050565b60015460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000808673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16141561055a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180610b116029913960400191505060405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614156105f35773ffffffffffffffffffffffffffffffffffffffff8088166000908152602081905260408120549091166105e181610837565b60ff16600a0a94509250610770915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16141561068d5773ffffffffffffffffffffffffffffffffffffffff80891660009081526020819052604081205490911661067a81610837565b90945060ff16600a0a9250610770915050565b73ffffffffffffffffffffffffffffffffffffffff808916600090815260208190526040812054909116906106c182610837565b73ffffffffffffffffffffffffffffffffffffffff808c1660009081526020819052604081205493975091935091909116906106fc82610837565b909550905060ff808416908216111561073f5761073861072860ff83811690861663ffffffff61099e16565b8790600a0a63ffffffff61077b16565b955061076b565b61076861075860ff85811690841663ffffffff61099e16565b8690600a0a63ffffffff61077b16565b94505b505050505b965096945050505050565b60008261078a5750600061049f565b8282028284828161079757fe5b04146107ee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180610b3a6021913960400191505060405180910390fd5b9392505050565b60006107ee83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506109e0565b60008073ffffffffffffffffffffffffffffffffffffffff83166108bc57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4f535741503a2070726963652066656564206e6f7420666f756e640000000000604482015290519081900360640190fd5b60008373ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561090457600080fd5b505afa158015610918573d6000803e3d6000fd5b505050506040513d60a081101561092e57600080fd5b506020015160015460ff169250905060008113610996576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180610b5b602d913960400191505060405180910390fd5b939092509050565b60006107ee83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610a9c565b60008183610a86576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610a4b578181015183820152602001610a33565b50505050905090810190601f168015610a785780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581610a9257fe5b0495945050505050565b60008184841115610b08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201818152835160248401528351909283926044909101919085019080838360008315610a4b578181015183820152602001610a33565b50505090039056fe4f535741503a2066726f6d20616e6420746f2061646472657373657320617265207468652073616d65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f535741505f4f7261636c65436861696e6c696e6b3a204e65676174697665206f72207a65726f207072696365a2646970667358221220c823b6ce38d6643d1e9f0c40883d1df68619ea1143ff725b493304cd6c16f7cb64736f6c634300060b0033"
    };
});
define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkGeneric.ts", ["require", "exports", "@ijstech/eth-contract", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkGeneric.json.ts"], function (require, exports, eth_contract_8, OSWAP_OracleChainlinkGeneric_json_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.OSWAP_OracleChainlinkGeneric = void 0;
    class OSWAP_OracleChainlinkGeneric extends eth_contract_8.Contract {
        constructor(wallet, address) {
            super(wallet, address, OSWAP_OracleChainlinkGeneric_json_1.default.abi, OSWAP_OracleChainlinkGeneric_json_1.default.bytecode);
            this.assign();
        }
        deploy(params, options) {
            return this.__deploy([params.weth, params.tokens, params.pricefeeds], options);
        }
        assign() {
            let WETH_call = async (options) => {
                let result = await this.call('WETH', [], options);
                return result;
            };
            this.WETH = WETH_call;
            let chainlinkDeicmals_call = async (options) => {
                let result = await this.call('chainlinkDeicmals', [], options);
                return new eth_contract_8.BigNumber(result);
            };
            this.chainlinkDeicmals = chainlinkDeicmals_call;
            let decimals_call = async (options) => {
                let result = await this.call('decimals', [], options);
                return new eth_contract_8.BigNumber(result);
            };
            this.decimals = decimals_call;
            let getLatestPriceParams = (params) => [params.from, params.to, this.wallet.utils.stringToBytes(params.payload)];
            let getLatestPrice_call = async (params, options) => {
                let result = await this.call('getLatestPrice', getLatestPriceParams(params), options);
                return new eth_contract_8.BigNumber(result);
            };
            this.getLatestPrice = getLatestPrice_call;
            let getRatioParams = (params) => [params.from, params.to, this.wallet.utils.toString(params.param3), this.wallet.utils.toString(params.param4), this.wallet.utils.stringToBytes(params.param5)];
            let getRatio_call = async (params, options) => {
                let result = await this.call('getRatio', getRatioParams(params), options);
                return {
                    numerator: new eth_contract_8.BigNumber(result.numerator),
                    denominator: new eth_contract_8.BigNumber(result.denominator)
                };
            };
            this.getRatio = getRatio_call;
            let isSupportedParams = (params) => [params.from, params.to];
            let isSupported_call = async (params, options) => {
                let result = await this.call('isSupported', isSupportedParams(params), options);
                return result;
            };
            this.isSupported = isSupported_call;
            let priceFeedAddresses_call = async (param1, options) => {
                let result = await this.call('priceFeedAddresses', [param1], options);
                return result;
            };
            this.priceFeedAddresses = priceFeedAddresses_call;
        }
    }
    exports.OSWAP_OracleChainlinkGeneric = OSWAP_OracleChainlinkGeneric;
    OSWAP_OracleChainlinkGeneric._abi = OSWAP_OracleChainlinkGeneric_json_1.default.abi;
});
define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkLimitedGeneric.json.ts", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    ///<amd-module name='@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkLimitedGeneric.json.ts'/> 
    exports.default = {
        "abi": [
            { "inputs": [{ "internalType": "address", "name": "factory", "type": "address" }, { "internalType": "address", "name": "_weth", "type": "address" }, { "internalType": "address[]", "name": "token", "type": "address[]" }, { "internalType": "address[]", "name": "_pricefeeds", "type": "address[]" }], "stateMutability": "nonpayable", "type": "constructor" },
            { "inputs": [], "name": "WETH", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "chainlinkDeicmals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "decimals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "factory", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "bytes", "name": "payload", "type": "bytes" }], "name": "getLatestPrice", "outputs": [{ "internalType": "uint256", "name": "price", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "fromAmount", "type": "uint256" }, { "internalType": "uint256", "name": "toAmount", "type": "uint256" }, { "internalType": "bytes", "name": "payload", "type": "bytes" }], "name": "getRatio", "outputs": [{ "internalType": "uint256", "name": "numerator", "type": "uint256" }, { "internalType": "uint256", "name": "denominator", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }], "name": "isSupported", "outputs": [{ "internalType": "bool", "name": "supported", "type": "bool" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "priceFeedAddresses", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" }
        ],
        "bytecode": "60c06040526001805460ff191660121790553480156200001e57600080fd5b50604051620011dd380380620011dd833981810160405260808110156200004457600080fd5b815160208301516040808501805191519395929483019291846401000000008211156200007057600080fd5b9083019060208201858111156200008657600080fd5b8251866020820283011164010000000082111715620000a457600080fd5b82525081516020918201928201910280838360005b83811015620000d3578181015183820152602001620000b9565b5050505090500160405260200180516040519392919084640100000000821115620000fd57600080fd5b9083019060208201858111156200011357600080fd5b82518660208202830111640100000000821117156200013157600080fd5b82525081516020918201928201910280838360005b838110156200016057818101518382015260200162000146565b50505050919091016040525050506001600160601b0319606085811b821660805286901b1660a052508051825114620001e0576040805162461bcd60e51b815260206004820152601660248201527f4172726179206c656e677468206e6f74206d6174636800000000000000000000604482015290519081900360640190fd5b60005b8251811015620002ed5760006001600160a01b03166000808584815181106200020857fe5b6020908102919091018101516001600160a01b0390811683529082019290925260400160002054161462000283576040805162461bcd60e51b815260206004820152601960248201527f7072696365206665656420616c72656164792065786973747300000000000000604482015290519081900360640190fd5b8181815181106200029057fe5b6020026020010151600080858481518110620002a857fe5b6020908102919091018101516001600160a01b0390811683529082019290925260400160002080546001600160a01b03191692909116919091179055600101620001e3565b505050505060805160601c60a05160601c610ea36200033a600039806104e75280610515528061066152508061034e52806103d252806104c35280610904528061099d5250610ea36000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638e9e56ef1161005b5780638e9e56ef146101fe578063ad5c464814610206578063c45a01551461020e578063d9da4fe61461021657610088565b8063313ce5671461008d578063495e4348146100ab57806375aa41741461015357806388462c8d146101af575b600080fd5b6100956102d1565b6040805160ff9092168252519081900360200190f35b610141600480360360608110156100c157600080fd5b73ffffffffffffffffffffffffffffffffffffffff823581169260208101359091169181019060608101604082013564010000000081111561010257600080fd5b82018360208201111561011457600080fd5b8035906020019184600183028401116401000000008311171561013657600080fd5b5090925090506102d6565b60408051918252519081900360200190f35b6101866004803603602081101561016957600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610322565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6101ea600480360360408110156101c557600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602001351661034a565b604080519115158252519081900360200190f35b6100956104b8565b6101866104c1565b6101866104e5565b6102b8600480360360a081101561022c57600080fd5b73ffffffffffffffffffffffffffffffffffffffff823581169260208101359091169160408201359160608101359181019060a08101608082013564010000000081111561027957600080fd5b82018360208201111561028b57600080fd5b803590602001918460018302840111640100000000831117156102ad57600080fd5b509092509050610509565b6040805192835260208301919091528051918290030190f35b601290565b60008060006102ea87876000808989610509565b90925090506103178161030b84670de0b6b3a764000063ffffffff6107be16565b9063ffffffff61083816565b979650505050505050565b60006020819052908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156103d0575073ffffffffffffffffffffffffffffffffffffffff8082166000908152602081905260409020541615156104b2565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610454575073ffffffffffffffffffffffffffffffffffffffff8083166000908152602081905260409020541615156104b2565b73ffffffffffffffffffffffffffffffffffffffff808416600090815260208190526040808220548584168352912054908216911681158015906104ad575073ffffffffffffffffffffffffffffffffffffffff811615155b925050505b92915050565b60015460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080856106585760007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f98126f9896040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156105b057600080fd5b505afa1580156105c4573d6000803e3d6000fd5b505050506040513d60208110156105da57600080fd5b5051905080156106525780861061065257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4f535741503a204f766572204c696d6974000000000000000000000000000000604482015290519081900360640190fd5b506107a0565b846107a05760007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f98126f98a6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156106fc57600080fd5b505afa158015610710573d6000803e3d6000fd5b505050506040513d602081101561072657600080fd5b50519050801561079e5780871061079e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4f535741503a204f766572204c696d6974000000000000000000000000000000604482015290519081900360640190fd5b505b6107ae88888888888861087a565b915091505b965096945050505050565b6000826107cd575060006104b2565b828202828482816107da57fe5b0414610831576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180610e206021913960400191505060405180910390fd5b9392505050565b600061083183836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610b22565b6000808673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161415610902576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180610df76029913960400191505060405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16141561099b5773ffffffffffffffffffffffffffffffffffffffff80881660009081526020819052604081205490911661098981610bde565b60ff16600a0a945092506107b3915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161415610a355773ffffffffffffffffffffffffffffffffffffffff808916600090815260208190526040812054909116610a2281610bde565b90945060ff16600a0a92506107b3915050565b73ffffffffffffffffffffffffffffffffffffffff80891660009081526020819052604081205490911690610a6982610bde565b73ffffffffffffffffffffffffffffffffffffffff808c166000908152602081905260408120549397509193509190911690610aa482610bde565b909550905060ff8084169082161115610ae757610ae0610ad060ff83811690861663ffffffff610d4516565b8790600a0a63ffffffff6107be16565b9550610b13565b610b10610b0060ff85811690841663ffffffff610d4516565b8690600a0a63ffffffff6107be16565b94505b50505050965096945050505050565b60008183610bc8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b8d578181015183820152602001610b75565b50505050905090810190601f168015610bba5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581610bd457fe5b0495945050505050565b60008073ffffffffffffffffffffffffffffffffffffffff8316610c6357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4f535741503a2070726963652066656564206e6f7420666f756e640000000000604482015290519081900360640190fd5b60008373ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610cab57600080fd5b505afa158015610cbf573d6000803e3d6000fd5b505050506040513d60a0811015610cd557600080fd5b506020015160015460ff169250905060008113610d3d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180610e41602d913960400191505060405180910390fd5b939092509050565b600061083183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060008184841115610dee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201818152835160248401528351909283926044909101919085019080838360008315610b8d578181015183820152602001610b75565b50505090039056fe4f535741503a2066726f6d20616e6420746f2061646472657373657320617265207468652073616d65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f535741505f4f7261636c65436861696e6c696e6b3a204e65676174697665206f72207a65726f207072696365a2646970667358221220d693beb71c699eade3bab904441fe50d4c9b451b63784ee50da7ff6f8de0f3c764736f6c634300060b0033"
    };
});
define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkLimitedGeneric.ts", ["require", "exports", "@ijstech/eth-contract", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkLimitedGeneric.json.ts"], function (require, exports, eth_contract_9, OSWAP_OracleChainlinkLimitedGeneric_json_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.OSWAP_OracleChainlinkLimitedGeneric = void 0;
    class OSWAP_OracleChainlinkLimitedGeneric extends eth_contract_9.Contract {
        constructor(wallet, address) {
            super(wallet, address, OSWAP_OracleChainlinkLimitedGeneric_json_1.default.abi, OSWAP_OracleChainlinkLimitedGeneric_json_1.default.bytecode);
            this.assign();
        }
        deploy(params, options) {
            return this.__deploy([params.factory, params.weth, params.token, params.pricefeeds], options);
        }
        assign() {
            let WETH_call = async (options) => {
                let result = await this.call('WETH', [], options);
                return result;
            };
            this.WETH = WETH_call;
            let chainlinkDeicmals_call = async (options) => {
                let result = await this.call('chainlinkDeicmals', [], options);
                return new eth_contract_9.BigNumber(result);
            };
            this.chainlinkDeicmals = chainlinkDeicmals_call;
            let decimals_call = async (options) => {
                let result = await this.call('decimals', [], options);
                return new eth_contract_9.BigNumber(result);
            };
            this.decimals = decimals_call;
            let factory_call = async (options) => {
                let result = await this.call('factory', [], options);
                return result;
            };
            this.factory = factory_call;
            let getLatestPriceParams = (params) => [params.from, params.to, this.wallet.utils.stringToBytes(params.payload)];
            let getLatestPrice_call = async (params, options) => {
                let result = await this.call('getLatestPrice', getLatestPriceParams(params), options);
                return new eth_contract_9.BigNumber(result);
            };
            this.getLatestPrice = getLatestPrice_call;
            let getRatioParams = (params) => [params.from, params.to, this.wallet.utils.toString(params.fromAmount), this.wallet.utils.toString(params.toAmount), this.wallet.utils.stringToBytes(params.payload)];
            let getRatio_call = async (params, options) => {
                let result = await this.call('getRatio', getRatioParams(params), options);
                return {
                    numerator: new eth_contract_9.BigNumber(result.numerator),
                    denominator: new eth_contract_9.BigNumber(result.denominator)
                };
            };
            this.getRatio = getRatio_call;
            let isSupportedParams = (params) => [params.from, params.to];
            let isSupported_call = async (params, options) => {
                let result = await this.call('isSupported', isSupportedParams(params), options);
                return result;
            };
            this.isSupported = isSupported_call;
            let priceFeedAddresses_call = async (param1, options) => {
                let result = await this.call('priceFeedAddresses', [param1], options);
                return result;
            };
            this.priceFeedAddresses = priceFeedAddresses_call;
        }
    }
    exports.OSWAP_OracleChainlinkLimitedGeneric = OSWAP_OracleChainlinkLimitedGeneric;
    OSWAP_OracleChainlinkLimitedGeneric._abi = OSWAP_OracleChainlinkLimitedGeneric_json_1.default.abi;
});
define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkPriceGuardFiatGeneric.json.ts", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    ///<amd-module name='@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkPriceGuardFiatGeneric.json.ts'/> 
    exports.default = {
        "abi": [
            { "inputs": [{ "internalType": "address[]", "name": "_tokens", "type": "address[]" }, { "internalType": "address[]", "name": "_pricefeeds", "type": "address[]" }, { "internalType": "address", "name": "_factory", "type": "address" }, { "internalType": "uint256", "name": "_maxValue", "type": "uint256" }, { "internalType": "uint256", "name": "_deviation", "type": "uint256" }, { "internalType": "bool", "name": "_returnAmmPrice", "type": "bool" }], "stateMutability": "nonpayable", "type": "constructor" },
            { "inputs": [], "name": "WETH", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "chainlinkDeicmals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "decimals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "decimals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "factory", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "bytes", "name": "payload", "type": "bytes" }], "name": "getLatestPrice", "outputs": [{ "internalType": "uint256", "name": "price", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "fromAmount", "type": "uint256" }, { "internalType": "uint256", "name": "toAmount", "type": "uint256" }], "name": "getPriceInfo", "outputs": [{ "internalType": "uint256", "name": "chainlinkPrice", "type": "uint256" }, { "internalType": "uint256", "name": "ammPrice", "type": "uint256" }, { "internalType": "uint256", "name": "usdAmount", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "fromAmount", "type": "uint256" }, { "internalType": "uint256", "name": "toAmount", "type": "uint256" }, { "internalType": "bytes", "name": "payload", "type": "bytes" }], "name": "getRatio", "outputs": [{ "internalType": "uint256", "name": "numerator", "type": "uint256" }, { "internalType": "uint256", "name": "denominator", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "high", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }], "name": "isSupported", "outputs": [{ "internalType": "bool", "name": "supported", "type": "bool" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "low", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "maxValue", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "priceFeedAddresses", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "returnAmmPrice", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "wethDecimals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "wethPriceFeed", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" }
        ],
        "bytecode": "61016060405260018054601260ff199091161761ff0019166108001790553480156200002a57600080fd5b5060405162001e3f38038062001e3f833981810160405260c08110156200005057600080fd5b81019080805160405193929190846401000000008211156200007157600080fd5b9083019060208201858111156200008757600080fd5b8251866020820283011164010000000082111715620000a557600080fd5b82525081516020918201928201910280838360005b83811015620000d4578181015183820152602001620000ba565b5050505090500160405260200180516040519392919084640100000000821115620000fe57600080fd5b9083019060208201858111156200011457600080fd5b82518660208202830111640100000000821117156200013257600080fd5b82525081516020918201928201910280838360005b838110156200016157818101518382015260200162000147565b50505050919091016040908152602083015190830151606084015160809485015160009586905288518a51949850929650909490935086928692869286928c928c92918891889188918891889188911462000203576040805162461bcd60e51b815260206004820152601660248201527f4172726179206c656e677468206e6f74206d6174636800000000000000000000604482015290519081900360640190fd5b815160005b81811015620002ee5760008482815181106200022057fe5b6020908102919091018101516001600160a01b0380821660009081529283905260409092205490925016156200029d576040805162461bcd60e51b815260206004820152601960248201527f7072696365206665656420616c72656164792065786973747300000000000000604482015290519081900360640190fd5b838281518110620002aa57fe5b6020908102919091018101516001600160a01b03928316600090815291829052604090912080546001600160a01b0319169290911691909117905560010162000208565b505050670de0b6b3a7640000831115905062000351576040805162461bcd60e51b815260206004820152601360248201527f496e76616c69642070726963652072616e676500000000000000000000000000604482015290519081900360640190fd5b606085811b6001600160601b031990811660a0529085901b1660c05260e083905262000392670de0b6b3a764000083620004ad602090811b6200072517901c565b61010052620003b6670de0b6b3a764000083620004fe602090811b6200076717901c565b61012052151560f81b6101405250506001805460ff1916600817905550508b51955060009450505050505b818110156200049f576000888281518110620003f957fe5b60200260200101519050806001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156200043d57600080fd5b505afa15801562000452573d6000803e3d6000fd5b505050506040513d60208110156200046957600080fd5b50516001600160a01b03919091166000908152600260205260409020805460ff191660ff909216919091179055600101620003e1565b5050505050505050620005f4565b6000620004f783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506200055960201b60201c565b9392505050565b600082820183811015620004f7576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60008184841115620005ec5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015620005b057818101518382015260200162000596565b50505050905090810190601f168015620005de5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60805160601c60a05160601c60c05160601c60e05161010051610120516101405160f81c6117be6200068160003980610662528061143b5250806105d452806114b652806116185250806106aa528061147d52806115df52508061063e52806112665250806106ce5280610a9352508061041452508061068652806110da528061115e52506117be6000f3fe608060405234801561001057600080fd5b50600436106100ff5760003560e01c80638e9e56ef11610097578063c40de79a11610066578063c40de79a14610314578063c45a01551461031c578063d449a83214610324578063d9da4fe614610357576100ff565b80638e9e56ef146102f457806394a5c2e4146102fc578063ad3d96e614610304578063ad5c46481461030c576100ff565b8063495e4348116100d3578063495e4348146101c2578063713658f31461026a57806375aa41741461027257806388462c8d146102a5576100ff565b80627127511461010457806325e1c83814610135578063313ce5671461019c57806346d58601146101ba575b600080fd5b61010c610412565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61017e6004803603608081101561014b57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060408101359060600135610436565b60408051938452602084019290925282820152519081900360600190f35b6101a461057f565b6040805160ff9092168252519081900360200190f35b6101a4610584565b610258600480360360608110156101d857600080fd5b73ffffffffffffffffffffffffffffffffffffffff823581169260208101359091169181019060608101604082013564010000000081111561021957600080fd5b82018360208201111561022b57600080fd5b8035906020019184600183028401116401000000008311171561024d57600080fd5b509092509050610592565b60408051918252519081900360200190f35b6102586105d2565b61010c6004803603602081101561028857600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166105f6565b6102e0600480360360408110156102bb57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602001351661061e565b604080519115158252519081900360200190f35b6101a4610633565b61025861063c565b6102e0610660565b61010c610684565b6102586106a8565b61010c6106cc565b6101a46004803603602081101561033a57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166106f0565b6103f9600480360360a081101561036d57600080fd5b73ffffffffffffffffffffffffffffffffffffffff823581169260208101359091169160408201359160608101359181019060a0810160808201356401000000008111156103ba57600080fd5b8201836020820111156103cc57600080fd5b803590602001918460018302840111640100000000831117156103ee57600080fd5b509092509050610705565b6040805192835260208301919091528051918290030190f35b7f000000000000000000000000000000000000000000000000000000000000000081565b600080600080600080600061044d8b8b8b8b6107db565b9398509196509450925090506104818361047586670de0b6b3a764000063ffffffff610c3a16565b9063ffffffff610cad16565b96506dffffffffffffffffffffffffffff8216156105715773ffffffffffffffffffffffffffffffffffffffff808c1660009081526002602052604080822054928d16825290205460ff91821691166104f86dffffffffffffffffffffffffffff8416670de0b6b3a764000063ffffffff610c3a16565b97508160ff168160ff161015610523576105208860ff83850316600a0a63ffffffff610c3a16565b97505b610543886dffffffffffffffffffffffffffff861663ffffffff610cad16565b97508060ff168260ff16101561056e5761056b8860ff84840316600a0a63ffffffff610cad16565b97505b50505b505050509450945094915050565b601290565b600154610100900460ff1681565b60008060006105a687876000808989610705565b90925090506105c78161047584670de0b6b3a764000063ffffffff610c3a16565b979650505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006020819052908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b600061062a8383610cef565b90505b92915050565b60015460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60026020526000908152604090205460ff1681565b600080610716888888888888610d3f565b91509150965096945050505050565b600061062a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610d50565b60008282018381101561062a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60008060008060008773ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff161415610868576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806116c66029913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8916158015906108a2575073ffffffffffffffffffffffffffffffffffffffff881615155b61090d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f4f535741503a204f7261636c653a20496e76616c696420616464726573730000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff808a166000908152602081905260409020541661093e81610e01565b5073ffffffffffffffffffffffffffffffffffffffff808b166000908152602081905260409020549196501661097381610e01565b509450886109ab576001546109989060ff16600a0a6104758a8863ffffffff610c3a16565b96506109a4878b610f68565b9650610a40565b876109d9576001546109cd9060ff16600a0a6104758b8963ffffffff610c3a16565b96506109a4878c610f68565b604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f7261636c6541646170746f723a20496e76616c696420616d6f756e74000000604482015290519081900360640190fd5b604080517fe6a4390500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8d811660048301528c8116602483015291516000927f0000000000000000000000000000000000000000000000000000000000000000169163e6a43905916044808301926020929190829003018186803b158015610ad957600080fd5b505afa158015610aed573d6000803e3d6000fd5b505050506040513d6020811015610b0357600080fd5b5051905073ffffffffffffffffffffffffffffffffffffffff8116610b8957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f70616972206e6f74206578697374730000000000000000000000000000000000604482015290519081900360640190fd5b8073ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b158015610bcf57600080fd5b505afa158015610be3573d6000803e3d6000fd5b505050506040513d6060811015610bf957600080fd5b508051602090910151909550935073ffffffffffffffffffffffffffffffffffffffff808d16908c161015610c2c579293925b505050945094509450945094565b600082610c495750600061062d565b82820282848281610c5657fe5b041461062a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061173b6021913960400191505060405180910390fd5b600061062a83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611057565b600073ffffffffffffffffffffffffffffffffffffffff83161580610d28575073ffffffffffffffffffffffffffffffffffffffff8216155b15610d355750600061062d565b61062a83836110d6565b600080610716888888888888611242565b60008184841115610df9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610dbe578181015183820152602001610da6565b50505050905090810190601f168015610deb5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008073ffffffffffffffffffffffffffffffffffffffff8316610e8657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4f535741503a2070726963652066656564206e6f7420666f756e640000000000604482015290519081900360640190fd5b60008373ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610ece57600080fd5b505afa158015610ee2573d6000803e3d6000fd5b505050506040513d60a0811015610ef857600080fd5b506020015160015460ff169250905060008113610f60576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d81526020018061175c602d913960400191505060405180910390fd5b939092509050565b73ffffffffffffffffffffffffffffffffffffffff811660009081526002602052604081205460ff1680610fe7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806117196022913960400191505060405180910390fd5b601281111561102c57611025847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee8301600a0a63ffffffff610c3a16565b935061104f565b601281101561104f5761104c846012839003600a0a63ffffffff610cad16565b93505b509192915050565b600081836110c0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201818152835160248401528351909283926044909101919085019080838360008315610dbe578181015183820152602001610da6565b5060008385816110cc57fe5b0495945050505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561115c575073ffffffffffffffffffffffffffffffffffffffff80821660009081526020819052604090205416151561062d565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156111e0575073ffffffffffffffffffffffffffffffffffffffff80831660009081526020819052604090205416151561062d565b73ffffffffffffffffffffffffffffffffffffffff80841660009081526020819052604080822054858416835291205490821691168115801590611239575073ffffffffffffffffffffffffffffffffffffffff811615155b95945050505050565b60008060008060006112568b8b8b8b6107db565b92985090965091945090925090507f00000000000000000000000000000000000000000000000000000000000000008311156112f357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f7261636c6541646170746f723a204578636565737369766520616d6f756e74604482015290519081900360640190fd5b6000611315856dffffffffffffffffffffffffffff841663ffffffff610c3a16565b90506000611339876dffffffffffffffffffffffffffff861663ffffffff610c3a16565b90506000600260008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690506000600260008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905060008260ff168260ff16101561140e575060ff81830316600a0a611407858263ffffffff610c3a16565b9450611439565b8160ff168360ff161015611439575060ff82820316600a0a611436848263ffffffff610c3a16565b93505b7f0000000000000000000000000000000000000000000000000000000000000000156115c15761147784670de0b6b3a764000063ffffffff610c3a16565b6114a7867f000000000000000000000000000000000000000000000000000000000000000063ffffffff610c3a16565b111580156114fb57506114e0857f000000000000000000000000000000000000000000000000000000000000000063ffffffff610c3a16565b6114f885670de0b6b3a764000063ffffffff610c3a16565b11155b611550576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806116ef602a913960400191505060405180910390fd5b856dffffffffffffffffffffffffffff169950866dffffffffffffffffffffffffffff1698508260ff168260ff16101561159b576115948a8263ffffffff610c3a16565b99506115bc565b8160ff168360ff1610156115bc576115b9898263ffffffff610c3a16565b98505b6116b2565b6115d985670de0b6b3a764000063ffffffff610c3a16565b611609857f000000000000000000000000000000000000000000000000000000000000000063ffffffff610c3a16565b1115801561165d5750611642847f000000000000000000000000000000000000000000000000000000000000000063ffffffff610c3a16565b61165a86670de0b6b3a764000063ffffffff610c3a16565b11155b6116b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806116ef602a913960400191505060405180910390fd5b505050505050505096509694505050505056fe4f535741503a2066726f6d20616e6420746f2061646472657373657320617265207468652073616d654f7261636c6541646170746f723a205072696365206f75747369646520616c6c6f7765642072616e67654f7261636c6541646170746f723a20746f6b656e206e6f7420737570706f72746564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f535741505f4f7261636c65436861696e6c696e6b3a204e65676174697665206f72207a65726f207072696365a264697066735822122064688d904baeba9a1db471e04b6c0d7a682431c0b9d607ff0e3957a848e9b11464736f6c634300060b0033"
    };
});
define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkPriceGuardFiatGeneric.ts", ["require", "exports", "@ijstech/eth-contract", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkPriceGuardFiatGeneric.json.ts"], function (require, exports, eth_contract_10, OSWAP_OracleChainlinkPriceGuardFiatGeneric_json_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.OSWAP_OracleChainlinkPriceGuardFiatGeneric = void 0;
    class OSWAP_OracleChainlinkPriceGuardFiatGeneric extends eth_contract_10.Contract {
        constructor(wallet, address) {
            super(wallet, address, OSWAP_OracleChainlinkPriceGuardFiatGeneric_json_1.default.abi, OSWAP_OracleChainlinkPriceGuardFiatGeneric_json_1.default.bytecode);
            this.assign();
        }
        deploy(params, options) {
            return this.__deploy([params.tokens, params.pricefeeds, params.factory, this.wallet.utils.toString(params.maxValue), this.wallet.utils.toString(params.deviation), params.returnAmmPrice], options);
        }
        assign() {
            let WETH_call = async (options) => {
                let result = await this.call('WETH', [], options);
                return result;
            };
            this.WETH = WETH_call;
            let chainlinkDeicmals_call = async (options) => {
                let result = await this.call('chainlinkDeicmals', [], options);
                return new eth_contract_10.BigNumber(result);
            };
            this.chainlinkDeicmals = chainlinkDeicmals_call;
            let decimals_call = async (options) => {
                let result = await this.call('decimals', [], options);
                return new eth_contract_10.BigNumber(result);
            };
            this.decimals = decimals_call;
            let decimals_1_call = async (param1, options) => {
                let result = await this.call('decimals', [param1], options);
                return new eth_contract_10.BigNumber(result);
            };
            this.decimals_1 = decimals_1_call;
            let factory_call = async (options) => {
                let result = await this.call('factory', [], options);
                return result;
            };
            this.factory = factory_call;
            let getLatestPriceParams = (params) => [params.from, params.to, this.wallet.utils.stringToBytes(params.payload)];
            let getLatestPrice_call = async (params, options) => {
                let result = await this.call('getLatestPrice', getLatestPriceParams(params), options);
                return new eth_contract_10.BigNumber(result);
            };
            this.getLatestPrice = getLatestPrice_call;
            let getPriceInfoParams = (params) => [params.from, params.to, this.wallet.utils.toString(params.fromAmount), this.wallet.utils.toString(params.toAmount)];
            let getPriceInfo_call = async (params, options) => {
                let result = await this.call('getPriceInfo', getPriceInfoParams(params), options);
                return {
                    chainlinkPrice: new eth_contract_10.BigNumber(result.chainlinkPrice),
                    ammPrice: new eth_contract_10.BigNumber(result.ammPrice),
                    usdAmount: new eth_contract_10.BigNumber(result.usdAmount)
                };
            };
            this.getPriceInfo = getPriceInfo_call;
            let getRatioParams = (params) => [params.from, params.to, this.wallet.utils.toString(params.fromAmount), this.wallet.utils.toString(params.toAmount), this.wallet.utils.stringToBytes(params.payload)];
            let getRatio_call = async (params, options) => {
                let result = await this.call('getRatio', getRatioParams(params), options);
                return {
                    numerator: new eth_contract_10.BigNumber(result.numerator),
                    denominator: new eth_contract_10.BigNumber(result.denominator)
                };
            };
            this.getRatio = getRatio_call;
            let high_call = async (options) => {
                let result = await this.call('high', [], options);
                return new eth_contract_10.BigNumber(result);
            };
            this.high = high_call;
            let isSupportedParams = (params) => [params.from, params.to];
            let isSupported_call = async (params, options) => {
                let result = await this.call('isSupported', isSupportedParams(params), options);
                return result;
            };
            this.isSupported = isSupported_call;
            let low_call = async (options) => {
                let result = await this.call('low', [], options);
                return new eth_contract_10.BigNumber(result);
            };
            this.low = low_call;
            let maxValue_call = async (options) => {
                let result = await this.call('maxValue', [], options);
                return new eth_contract_10.BigNumber(result);
            };
            this.maxValue = maxValue_call;
            let priceFeedAddresses_call = async (param1, options) => {
                let result = await this.call('priceFeedAddresses', [param1], options);
                return result;
            };
            this.priceFeedAddresses = priceFeedAddresses_call;
            let returnAmmPrice_call = async (options) => {
                let result = await this.call('returnAmmPrice', [], options);
                return result;
            };
            this.returnAmmPrice = returnAmmPrice_call;
            let wethDecimals_call = async (options) => {
                let result = await this.call('wethDecimals', [], options);
                return new eth_contract_10.BigNumber(result);
            };
            this.wethDecimals = wethDecimals_call;
            let wethPriceFeed_call = async (options) => {
                let result = await this.call('wethPriceFeed', [], options);
                return result;
            };
            this.wethPriceFeed = wethPriceFeed_call;
        }
    }
    exports.OSWAP_OracleChainlinkPriceGuardFiatGeneric = OSWAP_OracleChainlinkPriceGuardFiatGeneric;
    OSWAP_OracleChainlinkPriceGuardFiatGeneric._abi = OSWAP_OracleChainlinkPriceGuardFiatGeneric_json_1.default.abi;
});
define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkPriceGuardGeneric.json.ts", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    ///<amd-module name='@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkPriceGuardGeneric.json.ts'/> 
    exports.default = {
        "abi": [
            { "inputs": [{ "internalType": "address", "name": "_weth", "type": "address" }, { "internalType": "address", "name": "wethPriceFeed", "type": "address" }, { "internalType": "address[]", "name": "_tokens", "type": "address[]" }, { "internalType": "address[]", "name": "_pricefeeds", "type": "address[]" }, { "internalType": "address", "name": "_factory", "type": "address" }, { "internalType": "uint256", "name": "_maxValue", "type": "uint256" }, { "internalType": "uint256", "name": "_deviation", "type": "uint256" }, { "internalType": "bool", "name": "_returnAmmPrice", "type": "bool" }], "stateMutability": "nonpayable", "type": "constructor" },
            { "inputs": [], "name": "WETH", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "chainlinkDeicmals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "decimals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "decimals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "factory", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "bytes", "name": "payload", "type": "bytes" }], "name": "getLatestPrice", "outputs": [{ "internalType": "uint256", "name": "price", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "fromAmount", "type": "uint256" }, { "internalType": "uint256", "name": "toAmount", "type": "uint256" }], "name": "getPriceInfo", "outputs": [{ "internalType": "uint256", "name": "chainlinkPrice", "type": "uint256" }, { "internalType": "uint256", "name": "ammPrice", "type": "uint256" }, { "internalType": "uint256", "name": "usdAmount", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "fromAmount", "type": "uint256" }, { "internalType": "uint256", "name": "toAmount", "type": "uint256" }, { "internalType": "bytes", "name": "payload", "type": "bytes" }], "name": "getRatio", "outputs": [{ "internalType": "uint256", "name": "numerator", "type": "uint256" }, { "internalType": "uint256", "name": "denominator", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "high", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }], "name": "isSupported", "outputs": [{ "internalType": "bool", "name": "supported", "type": "bool" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "low", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "maxValue", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "priceFeedAddresses", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "returnAmmPrice", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "wethDecimals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "wethPriceFeed", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" }
        ],
        "bytecode": "61016060405260018054601260ff199091161761ff0019166108001790553480156200002a57600080fd5b50604051620020533803806200205383398181016040526101008110156200005157600080fd5b815160208301516040808501805191519395929483019291846401000000008211156200007d57600080fd5b9083019060208201858111156200009357600080fd5b8251866020820283011164010000000082111715620000b157600080fd5b82525081516020918201928201910280838360005b83811015620000e0578181015183820152602001620000c6565b50505050905001604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82518660208202830111640100000000821117156200013e57600080fd5b82525081516020918201928201910280838360005b838110156200016d57818101518382015260200162000153565b50505050919091016040908152602083015190830151606080850151608095860151918c901b6001600160601b031916909552875189519397509195509250889186918691869186918e918d918d91839183911462000213576040805162461bcd60e51b815260206004820152601660248201527f4172726179206c656e677468206e6f74206d6174636800000000000000000000604482015290519081900360640190fd5b815160005b81811015620002fe5760008482815181106200023057fe5b6020908102919091018101516001600160a01b038082166000908152928390526040909220549092501615620002ad576040805162461bcd60e51b815260206004820152601960248201527f7072696365206665656420616c72656164792065786973747300000000000000604482015290519081900360640190fd5b838281518110620002ba57fe5b6020908102919091018101516001600160a01b03928316600090815291829052604090912080546001600160a01b0319169290911691909117905560010162000218565b505050670de0b6b3a764000086111593506200036592505050576040805162461bcd60e51b815260206004820152601360248201527f496e76616c69642070726963652072616e676500000000000000000000000000604482015290519081900360640190fd5b606085811b6001600160601b031990811660a0529085901b1660c05260e0839052620003a6670de0b6b3a76400008362000546602090811b6200087e17901c565b61010052620003ca670de0b6b3a76400008362000597602090811b620008c717901c565b61012052151560f81b6101405250506040805163313ce56760e01b815290516001600160a01b038c16935063313ce56792506004808301926020929190829003018186803b1580156200041c57600080fd5b505afa15801562000431573d6000803e3d6000fd5b505050506040513d60208110156200044857600080fd5b50516001600160a01b0389166000908152600260205260408120805460ff191660ff909316929092179091558651905b81811015620005365760008882815181106200049057fe5b60200260200101519050806001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015620004d457600080fd5b505afa158015620004e9573d6000803e3d6000fd5b505050506040513d60208110156200050057600080fd5b50516001600160a01b03919091166000908152600260205260409020805460ff191660ff90921691909117905560010162000478565b505050505050505050506200068d565b60006200059083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250620005f260201b60201c565b9392505050565b60008282018381101562000590576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60008184841115620006855760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015620006495781810151838201526020016200062f565b50505050905090810190601f168015620006775780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60805160601c60a05160601c60c05160601c60e05161010051610120516101405160f81c61192a62000729600039806107bb52806112215250806105d4528061129c52806113fe525080610803528061126352806113c5525080610797528061104c5250806108275280610d435250806104145280610c8b52508061062252806106a652806107df52806109cc5280610a91525061192a6000f3fe608060405234801561001057600080fd5b50600436106100ff5760003560e01c80638e9e56ef11610097578063c40de79a11610066578063c40de79a14610314578063c45a01551461031c578063d449a83214610324578063d9da4fe614610357576100ff565b80638e9e56ef146102f457806394a5c2e4146102fc578063ad3d96e614610304578063ad5c46481461030c576100ff565b8063495e4348116100d3578063495e4348146101c2578063713658f31461026a57806375aa41741461027257806388462c8d146102a5576100ff565b80627127511461010457806325e1c83814610135578063313ce5671461019c57806346d58601146101ba575b600080fd5b61010c610412565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61017e6004803603608081101561014b57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060408101359060600135610436565b60408051938452602084019290925282820152519081900360600190f35b6101a461057f565b6040805160ff9092168252519081900360200190f35b6101a4610584565b610258600480360360608110156101d857600080fd5b73ffffffffffffffffffffffffffffffffffffffff823581169260208101359091169181019060608101604082013564010000000081111561021957600080fd5b82018360208201111561022b57600080fd5b8035906020019184600183028401116401000000008311171561024d57600080fd5b509092509050610592565b60408051918252519081900360200190f35b6102586105d2565b61010c6004803603602081101561028857600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166105f6565b6102e0600480360360408110156102bb57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602001351661061e565b604080519115158252519081900360200190f35b6101a461078c565b610258610795565b6102e06107b9565b61010c6107dd565b610258610801565b61010c610825565b6101a46004803603602081101561033a57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610849565b6103f9600480360360a081101561036d57600080fd5b73ffffffffffffffffffffffffffffffffffffffff823581169260208101359091169160408201359160608101359181019060a0810160808201356401000000008111156103ba57600080fd5b8201836020820111156103cc57600080fd5b803590602001918460018302840111640100000000831117156103ee57600080fd5b50909250905061085e565b6040805192835260208301919091528051918290030190f35b7f000000000000000000000000000000000000000000000000000000000000000081565b600080600080600080600061044d8b8b8b8b61093b565b9398509196509450925090506104818361047586670de0b6b3a764000063ffffffff610f7316565b9063ffffffff610fe616565b96506dffffffffffffffffffffffffffff8216156105715773ffffffffffffffffffffffffffffffffffffffff808c1660009081526002602052604080822054928d16825290205460ff91821691166104f86dffffffffffffffffffffffffffff8416670de0b6b3a764000063ffffffff610f7316565b97508160ff168160ff161015610523576105208860ff83850316600a0a63ffffffff610f7316565b97505b610543886dffffffffffffffffffffffffffff861663ffffffff610fe616565b97508060ff168260ff16101561056e5761056b8860ff84840316600a0a63ffffffff610fe616565b97505b50505b505050509450945094915050565b601290565b600154610100900460ff1681565b60008060006105a68787600080898961085e565b90925090506105c78161047584670de0b6b3a764000063ffffffff610f7316565b979650505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006020819052908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156106a4575073ffffffffffffffffffffffffffffffffffffffff808216600090815260208190526040902054161515610786565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610728575073ffffffffffffffffffffffffffffffffffffffff808316600090815260208190526040902054161515610786565b73ffffffffffffffffffffffffffffffffffffffff80841660009081526020819052604080822054858416835291205490821691168115801590610781575073ffffffffffffffffffffffffffffffffffffffff811615155b925050505b92915050565b60015460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60026020526000908152604090205460ff1681565b60008061086f888888888888611028565b91509150965096945050505050565b60006108c083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506114ab565b9392505050565b6000828201838110156108c057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60008060008060008773ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614156109c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806118326029913960400191505060405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff161415610a8f575073ffffffffffffffffffffffffffffffffffffffff808916600090815260208190526040812054899216610a528161155c565b60ff8116600a0a9850909650915082610a8857610a79876104758b8963ffffffff610f7316565b9250610a85838c6116c3565b92505b5050610c87565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff161415610b4a575073ffffffffffffffffffffffffffffffffffffffff808a16600090815260208190526040812054889216610b178161155c565b90975060ff8116600a0a9650915082610a8857610b3e866104758c8a63ffffffff610f7316565b9250610a85838d6116c3565b73ffffffffffffffffffffffffffffffffffffffff808b1660009081526020819052604081205490911690610b7e8261155c565b73ffffffffffffffffffffffffffffffffffffffff808e16600090815260208190526040812054939a509193509190911690610bb98261155c565b90985090508b610bf057610bdd60ff8216600a0a6104758d8b63ffffffff610f7316565b9450610be9858e6116c3565b9450610c82565b8a610c1b57610c0f60ff8416600a0a6104758e8c63ffffffff610f7316565b9450610be9858f6116c3565b604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f7261636c6541646170746f723a20496e76616c696420616d6f756e74000000604482015290519081900360640190fd5b505050505b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610cef57600080fd5b505afa158015610d03573d6000803e3d6000fd5b505050506040513d60a0811015610d1957600080fd5b5060200151600154909150610d3d90610100900460ff16600a0a6104758385610f73565b965060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663e6a439058d8d6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015610e1257600080fd5b505afa158015610e26573d6000803e3d6000fd5b505050506040513d6020811015610e3c57600080fd5b5051905073ffffffffffffffffffffffffffffffffffffffff8116610ec257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f70616972206e6f74206578697374730000000000000000000000000000000000604482015290519081900360640190fd5b8073ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b158015610f0857600080fd5b505afa158015610f1c573d6000803e3d6000fd5b505050506040513d6060811015610f3257600080fd5b508051602090910151909550935073ffffffffffffffffffffffffffffffffffffffff808d16908c161015610f65579293925b505050945094509450945094565b600082610f8257506000610786565b82820282848281610f8f57fe5b04146108c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806118a76021913960400191505060405180910390fd5b60006108c083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506117b2565b600080600080600061103c8b8b8b8b61093b565b92985090965091945090925090507f00000000000000000000000000000000000000000000000000000000000000008311156110d957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f7261636c6541646170746f723a204578636565737369766520616d6f756e74604482015290519081900360640190fd5b60006110fb856dffffffffffffffffffffffffffff841663ffffffff610f7316565b9050600061111f876dffffffffffffffffffffffffffff861663ffffffff610f7316565b90506000600260008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690506000600260008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905060008260ff168260ff1610156111f4575060ff81830316600a0a6111ed858263ffffffff610f7316565b945061121f565b8160ff168360ff16101561121f575060ff82820316600a0a61121c848263ffffffff610f7316565b93505b7f0000000000000000000000000000000000000000000000000000000000000000156113a75761125d84670de0b6b3a764000063ffffffff610f7316565b61128d867f000000000000000000000000000000000000000000000000000000000000000063ffffffff610f7316565b111580156112e157506112c6857f000000000000000000000000000000000000000000000000000000000000000063ffffffff610f7316565b6112de85670de0b6b3a764000063ffffffff610f7316565b11155b611336576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061185b602a913960400191505060405180910390fd5b856dffffffffffffffffffffffffffff169950866dffffffffffffffffffffffffffff1698508260ff168260ff1610156113815761137a8a8263ffffffff610f7316565b99506113a2565b8160ff168360ff1610156113a25761139f898263ffffffff610f7316565b98505b611498565b6113bf85670de0b6b3a764000063ffffffff610f7316565b6113ef857f000000000000000000000000000000000000000000000000000000000000000063ffffffff610f7316565b111580156114435750611428847f000000000000000000000000000000000000000000000000000000000000000063ffffffff610f7316565b61144086670de0b6b3a764000063ffffffff610f7316565b11155b611498576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061185b602a913960400191505060405180910390fd5b5050505050505050965096945050505050565b60008184841115611554576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611519578181015183820152602001611501565b50505050905090810190601f1680156115465780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008073ffffffffffffffffffffffffffffffffffffffff83166115e157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4f535741503a2070726963652066656564206e6f7420666f756e640000000000604482015290519081900360640190fd5b60008373ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561162957600080fd5b505afa15801561163d573d6000803e3d6000fd5b505050506040513d60a081101561165357600080fd5b506020015160015460ff1692509050600081136116bb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d8152602001806118c8602d913960400191505060405180910390fd5b939092509050565b73ffffffffffffffffffffffffffffffffffffffff811660009081526002602052604081205460ff1680611742576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806118856022913960400191505060405180910390fd5b601281111561178757611780847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee8301600a0a63ffffffff610f7316565b93506117aa565b60128110156117aa576117a7846012839003600a0a63ffffffff610fe616565b93505b509192915050565b6000818361181b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201818152835160248401528351909283926044909101919085019080838360008315611519578181015183820152602001611501565b50600083858161182757fe5b049594505050505056fe4f535741503a2066726f6d20616e6420746f2061646472657373657320617265207468652073616d654f7261636c6541646170746f723a205072696365206f75747369646520616c6c6f7765642072616e67654f7261636c6541646170746f723a20746f6b656e206e6f7420737570706f72746564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f535741505f4f7261636c65436861696e6c696e6b3a204e65676174697665206f72207a65726f207072696365a26469706673582212207eb35b8cdd22eb7072e4f85d00501208c812b0b0b414a33ad285bbf95f181a7c64736f6c634300060b0033"
    };
});
define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkPriceGuardGeneric.ts", ["require", "exports", "@ijstech/eth-contract", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkPriceGuardGeneric.json.ts"], function (require, exports, eth_contract_11, OSWAP_OracleChainlinkPriceGuardGeneric_json_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.OSWAP_OracleChainlinkPriceGuardGeneric = void 0;
    class OSWAP_OracleChainlinkPriceGuardGeneric extends eth_contract_11.Contract {
        constructor(wallet, address) {
            super(wallet, address, OSWAP_OracleChainlinkPriceGuardGeneric_json_1.default.abi, OSWAP_OracleChainlinkPriceGuardGeneric_json_1.default.bytecode);
            this.assign();
        }
        deploy(params, options) {
            return this.__deploy([params.weth, params.wethPriceFeed, params.tokens, params.pricefeeds, params.factory, this.wallet.utils.toString(params.maxValue), this.wallet.utils.toString(params.deviation), params.returnAmmPrice], options);
        }
        assign() {
            let WETH_call = async (options) => {
                let result = await this.call('WETH', [], options);
                return result;
            };
            this.WETH = WETH_call;
            let chainlinkDeicmals_call = async (options) => {
                let result = await this.call('chainlinkDeicmals', [], options);
                return new eth_contract_11.BigNumber(result);
            };
            this.chainlinkDeicmals = chainlinkDeicmals_call;
            let decimals_call = async (options) => {
                let result = await this.call('decimals', [], options);
                return new eth_contract_11.BigNumber(result);
            };
            this.decimals = decimals_call;
            let decimals_1_call = async (param1, options) => {
                let result = await this.call('decimals', [param1], options);
                return new eth_contract_11.BigNumber(result);
            };
            this.decimals_1 = decimals_1_call;
            let factory_call = async (options) => {
                let result = await this.call('factory', [], options);
                return result;
            };
            this.factory = factory_call;
            let getLatestPriceParams = (params) => [params.from, params.to, this.wallet.utils.stringToBytes(params.payload)];
            let getLatestPrice_call = async (params, options) => {
                let result = await this.call('getLatestPrice', getLatestPriceParams(params), options);
                return new eth_contract_11.BigNumber(result);
            };
            this.getLatestPrice = getLatestPrice_call;
            let getPriceInfoParams = (params) => [params.from, params.to, this.wallet.utils.toString(params.fromAmount), this.wallet.utils.toString(params.toAmount)];
            let getPriceInfo_call = async (params, options) => {
                let result = await this.call('getPriceInfo', getPriceInfoParams(params), options);
                return {
                    chainlinkPrice: new eth_contract_11.BigNumber(result.chainlinkPrice),
                    ammPrice: new eth_contract_11.BigNumber(result.ammPrice),
                    usdAmount: new eth_contract_11.BigNumber(result.usdAmount)
                };
            };
            this.getPriceInfo = getPriceInfo_call;
            let getRatioParams = (params) => [params.from, params.to, this.wallet.utils.toString(params.fromAmount), this.wallet.utils.toString(params.toAmount), this.wallet.utils.stringToBytes(params.payload)];
            let getRatio_call = async (params, options) => {
                let result = await this.call('getRatio', getRatioParams(params), options);
                return {
                    numerator: new eth_contract_11.BigNumber(result.numerator),
                    denominator: new eth_contract_11.BigNumber(result.denominator)
                };
            };
            this.getRatio = getRatio_call;
            let high_call = async (options) => {
                let result = await this.call('high', [], options);
                return new eth_contract_11.BigNumber(result);
            };
            this.high = high_call;
            let isSupportedParams = (params) => [params.from, params.to];
            let isSupported_call = async (params, options) => {
                let result = await this.call('isSupported', isSupportedParams(params), options);
                return result;
            };
            this.isSupported = isSupported_call;
            let low_call = async (options) => {
                let result = await this.call('low', [], options);
                return new eth_contract_11.BigNumber(result);
            };
            this.low = low_call;
            let maxValue_call = async (options) => {
                let result = await this.call('maxValue', [], options);
                return new eth_contract_11.BigNumber(result);
            };
            this.maxValue = maxValue_call;
            let priceFeedAddresses_call = async (param1, options) => {
                let result = await this.call('priceFeedAddresses', [param1], options);
                return result;
            };
            this.priceFeedAddresses = priceFeedAddresses_call;
            let returnAmmPrice_call = async (options) => {
                let result = await this.call('returnAmmPrice', [], options);
                return result;
            };
            this.returnAmmPrice = returnAmmPrice_call;
            let wethDecimals_call = async (options) => {
                let result = await this.call('wethDecimals', [], options);
                return new eth_contract_11.BigNumber(result);
            };
            this.wethDecimals = wethDecimals_call;
            let wethPriceFeed_call = async (options) => {
                let result = await this.call('wethPriceFeed', [], options);
                return result;
            };
            this.wethPriceFeed = wethPriceFeed_call;
        }
    }
    exports.OSWAP_OracleChainlinkPriceGuardGeneric = OSWAP_OracleChainlinkPriceGuardGeneric;
    OSWAP_OracleChainlinkPriceGuardGeneric._abi = OSWAP_OracleChainlinkPriceGuardGeneric_json_1.default.abi;
});
define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkV1Generic.json.ts", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    ///<amd-module name='@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkV1Generic.json.ts'/> 
    exports.default = {
        "abi": [
            { "inputs": [{ "internalType": "address", "name": "_weth", "type": "address" }, { "internalType": "address[]", "name": "_tokens", "type": "address[]" }, { "internalType": "address[]", "name": "_pricefeeds", "type": "address[]" }], "stateMutability": "nonpayable", "type": "constructor" },
            { "inputs": [], "name": "decimals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "bytes", "name": "payload", "type": "bytes" }], "name": "getLatestPrice", "outputs": [{ "internalType": "uint256", "name": "price", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "bytes", "name": "payload", "type": "bytes" }], "name": "getRatio", "outputs": [{ "internalType": "uint256", "name": "numerator", "type": "uint256" }, { "internalType": "uint256", "name": "denominator", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }], "name": "isSupported", "outputs": [{ "internalType": "bool", "name": "supported", "type": "bool" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "priceFeedAddresses", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" }
        ],
        "bytecode": "608060405234801561001057600080fd5b50604051610df2380380610df28339818101604052606081101561003357600080fd5b81516020830180516040519294929383019291908464010000000082111561005a57600080fd5b90830190602082018581111561006f57600080fd5b825186602082028301116401000000008211171561008c57600080fd5b82525081516020918201928201910280838360005b838110156100b95781810151838201526020016100a1565b50505050905001604052602001805160405193929190846401000000008211156100e257600080fd5b9083019060208201858111156100f757600080fd5b825186602082028301116401000000008211171561011457600080fd5b82525081516020918201928201910280838360005b83811015610141578181015183820152602001610129565b5050505090500160405250505080518251146101a4576040805162461bcd60e51b815260206004820152601660248201527f4172726179206c656e677468206e6f74206d6174636800000000000000000000604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b0385161781558251905b818110156102a55760008482815181106101d957fe5b6020908102919091018101516001600160a01b03808216600090815260019093526040909220549092501615610256576040805162461bcd60e51b815260206004820152601960248201527f7072696365206665656420616c72656164792065786973747300000000000000604482015290519081900360640190fd5b83828151811061026257fe5b6020908102919091018101516001600160a01b0392831660009081526001928390526040902080546001600160a01b0319169390911692909217909155016101c3565b5050505050610b39806102b96000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c806375aa41741161005057806375aa41741461013257806388462c8d1461018e578063d9da4fe6146101dd57610067565b8063313ce5671461006c578063495e43481461008a575b600080fd5b610074610298565b6040805160ff9092168252519081900360200190f35b610120600480360360608110156100a057600080fd5b73ffffffffffffffffffffffffffffffffffffffff82358116926020810135909116918101906060810160408201356401000000008111156100e157600080fd5b8201836020820111156100f357600080fd5b8035906020019184600183028401116401000000008311171561011557600080fd5b50909250905061029d565b60408051918252519081900360200190f35b6101656004803603602081101561014857600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166102e9565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6101c9600480360360408110156101a457600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516610311565b604080519115158252519081900360200190f35b61027f600480360360a08110156101f357600080fd5b73ffffffffffffffffffffffffffffffffffffffff823581169260208101359091169160408201359160608101359181019060a08101608082013564010000000081111561024057600080fd5b82018360208201111561025257600080fd5b8035906020019184600183028401116401000000008311171561027457600080fd5b50909250905061041c565b6040805192835260208301919091528051918290030190f35b601290565b60008060006102b18787600080898961041c565b90925090506102de816102d284670de0b6b3a764000063ffffffff61066b16565b9063ffffffff6106e516565b979650505050505050565b60016020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6000805473ffffffffffffffffffffffffffffffffffffffff84811691161415610365575073ffffffffffffffffffffffffffffffffffffffff808216600090815260016020526040902054161515610416565b60005473ffffffffffffffffffffffffffffffffffffffff838116911614156103b8575073ffffffffffffffffffffffffffffffffffffffff808316600090815260016020526040902054161515610416565b73ffffffffffffffffffffffffffffffffffffffff80841660009081526001602052604080822054858416835291205490821691168115801590610411575073ffffffffffffffffffffffffffffffffffffffff811615155b925050505b92915050565b6000808673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614156104a4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180610a8d6029913960400191505060405180910390fd5b60005473ffffffffffffffffffffffffffffffffffffffff8981169116141561050e5773ffffffffffffffffffffffffffffffffffffffff8088166000908152600160205260408120549091166104fc818787610727565b60ff16600a0a94509250610660915050565b60005473ffffffffffffffffffffffffffffffffffffffff888116911614156105795773ffffffffffffffffffffffffffffffffffffffff808916600090815260016020526040812054909116610566818787610727565b90945060ff16600a0a9250610660915050565b73ffffffffffffffffffffffffffffffffffffffff808916600090815260016020526040812054909116906105af828787610727565b73ffffffffffffffffffffffffffffffffffffffff808c1660009081526001602052604081205493975091935091909116906105ec828989610727565b909550905060ff808416908216111561062f5761062861061860ff83811690861663ffffffff61091a16565b8790600a0a63ffffffff61066b16565b955061065b565b61065861064860ff85811690841663ffffffff61091a16565b8690600a0a63ffffffff61066b16565b94505b505050505b965096945050505050565b60008261067a57506000610416565b8282028284828161068757fe5b04146106de576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180610ab66021913960400191505060405180910390fd5b9392505050565b60006106de83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061095c565b60008073ffffffffffffffffffffffffffffffffffffffff85166107ac57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4f535741503a2070726963652066656564206e6f7420666f756e640000000000604482015290519081900360640190fd5b60008573ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156107f457600080fd5b505afa158015610808573d6000803e3d6000fd5b505050506040513d60a081101561081e57600080fd5b50602090810151604080517f313ce567000000000000000000000000000000000000000000000000000000008152905191935073ffffffffffffffffffffffffffffffffffffffff89169263313ce56792600480840193829003018186803b15801561088957600080fd5b505afa15801561089d573d6000803e3d6000fd5b505050506040513d60208110156108b357600080fd5b5051915060008113610910576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180610ad7602d913960400191505060405180910390fd5b9590945092505050565b60006106de83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610a18565b60008183610a02576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156109c75781810151838201526020016109af565b50505050905090810190601f1680156109f45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581610a0e57fe5b0495945050505050565b60008184841115610a84576040517f08c379a00000000000000000000000000000000000000000000000000000000081526020600482018181528351602484015283519092839260449091019190850190808383600083156109c75781810151838201526020016109af565b50505090039056fe4f535741503a2066726f6d20616e6420746f2061646472657373657320617265207468652073616d65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f535741505f4f7261636c65436861696e6c696e6b3a204e65676174697665206f72207a65726f207072696365a2646970667358221220683daf1e7cffb81f9ccc676b3207c4f05d3fc7bff781c19652000639fcb2839c64736f6c634300060b0033"
    };
});
define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkV1Generic.ts", ["require", "exports", "@ijstech/eth-contract", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkV1Generic.json.ts"], function (require, exports, eth_contract_12, OSWAP_OracleChainlinkV1Generic_json_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.OSWAP_OracleChainlinkV1Generic = void 0;
    class OSWAP_OracleChainlinkV1Generic extends eth_contract_12.Contract {
        constructor(wallet, address) {
            super(wallet, address, OSWAP_OracleChainlinkV1Generic_json_1.default.abi, OSWAP_OracleChainlinkV1Generic_json_1.default.bytecode);
            this.assign();
        }
        deploy(params, options) {
            return this.__deploy([params.weth, params.tokens, params.pricefeeds], options);
        }
        assign() {
            let decimals_call = async (options) => {
                let result = await this.call('decimals', [], options);
                return new eth_contract_12.BigNumber(result);
            };
            this.decimals = decimals_call;
            let getLatestPriceParams = (params) => [params.from, params.to, this.wallet.utils.stringToBytes(params.payload)];
            let getLatestPrice_call = async (params, options) => {
                let result = await this.call('getLatestPrice', getLatestPriceParams(params), options);
                return new eth_contract_12.BigNumber(result);
            };
            this.getLatestPrice = getLatestPrice_call;
            let getRatioParams = (params) => [params.from, params.to, this.wallet.utils.toString(params.param3), this.wallet.utils.toString(params.param4), this.wallet.utils.stringToBytes(params.payload)];
            let getRatio_call = async (params, options) => {
                let result = await this.call('getRatio', getRatioParams(params), options);
                return {
                    numerator: new eth_contract_12.BigNumber(result.numerator),
                    denominator: new eth_contract_12.BigNumber(result.denominator)
                };
            };
            this.getRatio = getRatio_call;
            let isSupportedParams = (params) => [params.from, params.to];
            let isSupported_call = async (params, options) => {
                let result = await this.call('isSupported', isSupportedParams(params), options);
                return result;
            };
            this.isSupported = isSupported_call;
            let priceFeedAddresses_call = async (param1, options) => {
                let result = await this.call('priceFeedAddresses', [param1], options);
                return result;
            };
            this.priceFeedAddresses = priceFeedAddresses_call;
        }
    }
    exports.OSWAP_OracleChainlinkV1Generic = OSWAP_OracleChainlinkV1Generic;
    OSWAP_OracleChainlinkV1Generic._abi = OSWAP_OracleChainlinkV1Generic_json_1.default.abi;
});
define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkLimited.json.ts", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    ///<amd-module name='@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkLimited.json.ts'/> 
    exports.default = {
        "abi": [
            { "inputs": [{ "internalType": "address", "name": "factory", "type": "address" }], "stateMutability": "nonpayable", "type": "constructor" },
            { "inputs": [], "name": "WETH", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "_WETH", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "chainlinkDeicmals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "decimals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "factory", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "bytes", "name": "payload", "type": "bytes" }], "name": "getLatestPrice", "outputs": [{ "internalType": "uint256", "name": "price", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "fromAmount", "type": "uint256" }, { "internalType": "uint256", "name": "toAmount", "type": "uint256" }, { "internalType": "bytes", "name": "payload", "type": "bytes" }], "name": "getRatio", "outputs": [{ "internalType": "uint256", "name": "numerator", "type": "uint256" }, { "internalType": "uint256", "name": "denominator", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }], "name": "isSupported", "outputs": [{ "internalType": "bool", "name": "supported", "type": "bool" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "priceFeedAddresses", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" }
        ],
        "bytecode": ""
    };
});
define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkLimited.ts", ["require", "exports", "@ijstech/eth-contract", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkLimited.json.ts"], function (require, exports, eth_contract_13, OSWAP_OracleChainlinkLimited_json_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.OSWAP_OracleChainlinkLimited = void 0;
    class OSWAP_OracleChainlinkLimited extends eth_contract_13.Contract {
        constructor(wallet, address) {
            super(wallet, address, OSWAP_OracleChainlinkLimited_json_1.default.abi, OSWAP_OracleChainlinkLimited_json_1.default.bytecode);
            this.assign();
        }
        deploy(factory, options) {
            return this.__deploy([factory], options);
        }
        assign() {
            let WETH_call = async (options) => {
                let result = await this.call('WETH', [], options);
                return result;
            };
            this.WETH = WETH_call;
            let _WETH_call = async (options) => {
                let result = await this.call('_WETH', [], options);
                return result;
            };
            this._WETH = _WETH_call;
            let chainlinkDeicmals_call = async (options) => {
                let result = await this.call('chainlinkDeicmals', [], options);
                return new eth_contract_13.BigNumber(result);
            };
            this.chainlinkDeicmals = chainlinkDeicmals_call;
            let decimals_call = async (options) => {
                let result = await this.call('decimals', [], options);
                return new eth_contract_13.BigNumber(result);
            };
            this.decimals = decimals_call;
            let factory_call = async (options) => {
                let result = await this.call('factory', [], options);
                return result;
            };
            this.factory = factory_call;
            let getLatestPriceParams = (params) => [params.from, params.to, this.wallet.utils.stringToBytes(params.payload)];
            let getLatestPrice_call = async (params, options) => {
                let result = await this.call('getLatestPrice', getLatestPriceParams(params), options);
                return new eth_contract_13.BigNumber(result);
            };
            this.getLatestPrice = getLatestPrice_call;
            let getRatioParams = (params) => [params.from, params.to, this.wallet.utils.toString(params.fromAmount), this.wallet.utils.toString(params.toAmount), this.wallet.utils.stringToBytes(params.payload)];
            let getRatio_call = async (params, options) => {
                let result = await this.call('getRatio', getRatioParams(params), options);
                return {
                    numerator: new eth_contract_13.BigNumber(result.numerator),
                    denominator: new eth_contract_13.BigNumber(result.denominator)
                };
            };
            this.getRatio = getRatio_call;
            let isSupportedParams = (params) => [params.from, params.to];
            let isSupported_call = async (params, options) => {
                let result = await this.call('isSupported', isSupportedParams(params), options);
                return result;
            };
            this.isSupported = isSupported_call;
            let priceFeedAddresses_call = async (param1, options) => {
                let result = await this.call('priceFeedAddresses', [param1], options);
                return result;
            };
            this.priceFeedAddresses = priceFeedAddresses_call;
        }
    }
    exports.OSWAP_OracleChainlinkLimited = OSWAP_OracleChainlinkLimited;
    OSWAP_OracleChainlinkLimited._abi = OSWAP_OracleChainlinkLimited_json_1.default.abi;
});
define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkPriceGuardBinance.json.ts", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    ///<amd-module name='@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkPriceGuardBinance.json.ts'/> 
    exports.default = {
        "abi": [
            { "inputs": [{ "internalType": "address", "name": "_factory", "type": "address" }, { "internalType": "uint256", "name": "_maxValue", "type": "uint256" }, { "internalType": "uint256", "name": "_deviation", "type": "uint256" }, { "internalType": "bool", "name": "_returnAmmPrice", "type": "bool" }], "stateMutability": "nonpayable", "type": "constructor" },
            { "inputs": [], "name": "WETH", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "_WBNB", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "chainlinkDeicmals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "decimals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "decimals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "factory", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "bytes", "name": "payload", "type": "bytes" }], "name": "getLatestPrice", "outputs": [{ "internalType": "uint256", "name": "price", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "fromAmount", "type": "uint256" }, { "internalType": "uint256", "name": "toAmount", "type": "uint256" }], "name": "getPriceInfo", "outputs": [{ "internalType": "uint256", "name": "chainlinkPrice", "type": "uint256" }, { "internalType": "uint256", "name": "ammPrice", "type": "uint256" }, { "internalType": "uint256", "name": "usdAmount", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "fromAmount", "type": "uint256" }, { "internalType": "uint256", "name": "toAmount", "type": "uint256" }, { "internalType": "bytes", "name": "payload", "type": "bytes" }], "name": "getRatio", "outputs": [{ "internalType": "uint256", "name": "numerator", "type": "uint256" }, { "internalType": "uint256", "name": "denominator", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "high", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }], "name": "isSupported", "outputs": [{ "internalType": "bool", "name": "supported", "type": "bool" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "low", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "maxValue", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "priceFeedAddresses", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "returnAmmPrice", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "wethDecimals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "wethPriceFeed", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" }
        ],
        "bytecode": ""
    };
});
define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkPriceGuardBinance.ts", ["require", "exports", "@ijstech/eth-contract", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkPriceGuardBinance.json.ts"], function (require, exports, eth_contract_14, OSWAP_OracleChainlinkPriceGuardBinance_json_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.OSWAP_OracleChainlinkPriceGuardBinance = void 0;
    class OSWAP_OracleChainlinkPriceGuardBinance extends eth_contract_14.Contract {
        constructor(wallet, address) {
            super(wallet, address, OSWAP_OracleChainlinkPriceGuardBinance_json_1.default.abi, OSWAP_OracleChainlinkPriceGuardBinance_json_1.default.bytecode);
            this.assign();
        }
        deploy(params, options) {
            return this.__deploy([params.factory, this.wallet.utils.toString(params.maxValue), this.wallet.utils.toString(params.deviation), params.returnAmmPrice], options);
        }
        assign() {
            let WETH_call = async (options) => {
                let result = await this.call('WETH', [], options);
                return result;
            };
            this.WETH = WETH_call;
            let _WBNB_call = async (options) => {
                let result = await this.call('_WBNB', [], options);
                return result;
            };
            this._WBNB = _WBNB_call;
            let chainlinkDeicmals_call = async (options) => {
                let result = await this.call('chainlinkDeicmals', [], options);
                return new eth_contract_14.BigNumber(result);
            };
            this.chainlinkDeicmals = chainlinkDeicmals_call;
            let decimals_call = async (options) => {
                let result = await this.call('decimals', [], options);
                return new eth_contract_14.BigNumber(result);
            };
            this.decimals = decimals_call;
            let decimals_1_call = async (param1, options) => {
                let result = await this.call('decimals', [param1], options);
                return new eth_contract_14.BigNumber(result);
            };
            this.decimals_1 = decimals_1_call;
            let factory_call = async (options) => {
                let result = await this.call('factory', [], options);
                return result;
            };
            this.factory = factory_call;
            let getLatestPriceParams = (params) => [params.from, params.to, this.wallet.utils.stringToBytes(params.payload)];
            let getLatestPrice_call = async (params, options) => {
                let result = await this.call('getLatestPrice', getLatestPriceParams(params), options);
                return new eth_contract_14.BigNumber(result);
            };
            this.getLatestPrice = getLatestPrice_call;
            let getPriceInfoParams = (params) => [params.from, params.to, this.wallet.utils.toString(params.fromAmount), this.wallet.utils.toString(params.toAmount)];
            let getPriceInfo_call = async (params, options) => {
                let result = await this.call('getPriceInfo', getPriceInfoParams(params), options);
                return {
                    chainlinkPrice: new eth_contract_14.BigNumber(result.chainlinkPrice),
                    ammPrice: new eth_contract_14.BigNumber(result.ammPrice),
                    usdAmount: new eth_contract_14.BigNumber(result.usdAmount)
                };
            };
            this.getPriceInfo = getPriceInfo_call;
            let getRatioParams = (params) => [params.from, params.to, this.wallet.utils.toString(params.fromAmount), this.wallet.utils.toString(params.toAmount), this.wallet.utils.stringToBytes(params.payload)];
            let getRatio_call = async (params, options) => {
                let result = await this.call('getRatio', getRatioParams(params), options);
                return {
                    numerator: new eth_contract_14.BigNumber(result.numerator),
                    denominator: new eth_contract_14.BigNumber(result.denominator)
                };
            };
            this.getRatio = getRatio_call;
            let high_call = async (options) => {
                let result = await this.call('high', [], options);
                return new eth_contract_14.BigNumber(result);
            };
            this.high = high_call;
            let isSupportedParams = (params) => [params.from, params.to];
            let isSupported_call = async (params, options) => {
                let result = await this.call('isSupported', isSupportedParams(params), options);
                return result;
            };
            this.isSupported = isSupported_call;
            let low_call = async (options) => {
                let result = await this.call('low', [], options);
                return new eth_contract_14.BigNumber(result);
            };
            this.low = low_call;
            let maxValue_call = async (options) => {
                let result = await this.call('maxValue', [], options);
                return new eth_contract_14.BigNumber(result);
            };
            this.maxValue = maxValue_call;
            let priceFeedAddresses_call = async (param1, options) => {
                let result = await this.call('priceFeedAddresses', [param1], options);
                return result;
            };
            this.priceFeedAddresses = priceFeedAddresses_call;
            let returnAmmPrice_call = async (options) => {
                let result = await this.call('returnAmmPrice', [], options);
                return result;
            };
            this.returnAmmPrice = returnAmmPrice_call;
            let wethDecimals_call = async (options) => {
                let result = await this.call('wethDecimals', [], options);
                return new eth_contract_14.BigNumber(result);
            };
            this.wethDecimals = wethDecimals_call;
            let wethPriceFeed_call = async (options) => {
                let result = await this.call('wethPriceFeed', [], options);
                return result;
            };
            this.wethPriceFeed = wethPriceFeed_call;
        }
    }
    exports.OSWAP_OracleChainlinkPriceGuardBinance = OSWAP_OracleChainlinkPriceGuardBinance;
    OSWAP_OracleChainlinkPriceGuardBinance._abi = OSWAP_OracleChainlinkPriceGuardBinance_json_1.default.abi;
});
define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkPriceGuardFiatAvalanche.json.ts", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    ///<amd-module name='@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkPriceGuardFiatAvalanche.json.ts'/> 
    exports.default = {
        "abi": [
            { "inputs": [{ "internalType": "address", "name": "_factory", "type": "address" }, { "internalType": "uint256", "name": "_maxValue", "type": "uint256" }, { "internalType": "uint256", "name": "_deviation", "type": "uint256" }, { "internalType": "bool", "name": "_returnAmmPrice", "type": "bool" }], "stateMutability": "nonpayable", "type": "constructor" },
            { "inputs": [], "name": "WETH", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "chainlinkDeicmals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "decimals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "decimals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "factory", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "bytes", "name": "payload", "type": "bytes" }], "name": "getLatestPrice", "outputs": [{ "internalType": "uint256", "name": "price", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "fromAmount", "type": "uint256" }, { "internalType": "uint256", "name": "toAmount", "type": "uint256" }], "name": "getPriceInfo", "outputs": [{ "internalType": "uint256", "name": "chainlinkPrice", "type": "uint256" }, { "internalType": "uint256", "name": "ammPrice", "type": "uint256" }, { "internalType": "uint256", "name": "usdAmount", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "fromAmount", "type": "uint256" }, { "internalType": "uint256", "name": "toAmount", "type": "uint256" }, { "internalType": "bytes", "name": "payload", "type": "bytes" }], "name": "getRatio", "outputs": [{ "internalType": "uint256", "name": "numerator", "type": "uint256" }, { "internalType": "uint256", "name": "denominator", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "high", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }], "name": "isSupported", "outputs": [{ "internalType": "bool", "name": "supported", "type": "bool" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "low", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "maxValue", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "priceFeedAddresses", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "returnAmmPrice", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "wethDecimals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "wethPriceFeed", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" }
        ],
        "bytecode": ""
    };
});
define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkPriceGuardFiatAvalanche.ts", ["require", "exports", "@ijstech/eth-contract", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkPriceGuardFiatAvalanche.json.ts"], function (require, exports, eth_contract_15, OSWAP_OracleChainlinkPriceGuardFiatAvalanche_json_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.OSWAP_OracleChainlinkPriceGuardFiatAvalanche = void 0;
    class OSWAP_OracleChainlinkPriceGuardFiatAvalanche extends eth_contract_15.Contract {
        constructor(wallet, address) {
            super(wallet, address, OSWAP_OracleChainlinkPriceGuardFiatAvalanche_json_1.default.abi, OSWAP_OracleChainlinkPriceGuardFiatAvalanche_json_1.default.bytecode);
            this.assign();
        }
        deploy(params, options) {
            return this.__deploy([params.factory, this.wallet.utils.toString(params.maxValue), this.wallet.utils.toString(params.deviation), params.returnAmmPrice], options);
        }
        assign() {
            let WETH_call = async (options) => {
                let result = await this.call('WETH', [], options);
                return result;
            };
            this.WETH = WETH_call;
            let chainlinkDeicmals_call = async (options) => {
                let result = await this.call('chainlinkDeicmals', [], options);
                return new eth_contract_15.BigNumber(result);
            };
            this.chainlinkDeicmals = chainlinkDeicmals_call;
            let decimals_call = async (options) => {
                let result = await this.call('decimals', [], options);
                return new eth_contract_15.BigNumber(result);
            };
            this.decimals = decimals_call;
            let decimals_1_call = async (param1, options) => {
                let result = await this.call('decimals', [param1], options);
                return new eth_contract_15.BigNumber(result);
            };
            this.decimals_1 = decimals_1_call;
            let factory_call = async (options) => {
                let result = await this.call('factory', [], options);
                return result;
            };
            this.factory = factory_call;
            let getLatestPriceParams = (params) => [params.from, params.to, this.wallet.utils.stringToBytes(params.payload)];
            let getLatestPrice_call = async (params, options) => {
                let result = await this.call('getLatestPrice', getLatestPriceParams(params), options);
                return new eth_contract_15.BigNumber(result);
            };
            this.getLatestPrice = getLatestPrice_call;
            let getPriceInfoParams = (params) => [params.from, params.to, this.wallet.utils.toString(params.fromAmount), this.wallet.utils.toString(params.toAmount)];
            let getPriceInfo_call = async (params, options) => {
                let result = await this.call('getPriceInfo', getPriceInfoParams(params), options);
                return {
                    chainlinkPrice: new eth_contract_15.BigNumber(result.chainlinkPrice),
                    ammPrice: new eth_contract_15.BigNumber(result.ammPrice),
                    usdAmount: new eth_contract_15.BigNumber(result.usdAmount)
                };
            };
            this.getPriceInfo = getPriceInfo_call;
            let getRatioParams = (params) => [params.from, params.to, this.wallet.utils.toString(params.fromAmount), this.wallet.utils.toString(params.toAmount), this.wallet.utils.stringToBytes(params.payload)];
            let getRatio_call = async (params, options) => {
                let result = await this.call('getRatio', getRatioParams(params), options);
                return {
                    numerator: new eth_contract_15.BigNumber(result.numerator),
                    denominator: new eth_contract_15.BigNumber(result.denominator)
                };
            };
            this.getRatio = getRatio_call;
            let high_call = async (options) => {
                let result = await this.call('high', [], options);
                return new eth_contract_15.BigNumber(result);
            };
            this.high = high_call;
            let isSupportedParams = (params) => [params.from, params.to];
            let isSupported_call = async (params, options) => {
                let result = await this.call('isSupported', isSupportedParams(params), options);
                return result;
            };
            this.isSupported = isSupported_call;
            let low_call = async (options) => {
                let result = await this.call('low', [], options);
                return new eth_contract_15.BigNumber(result);
            };
            this.low = low_call;
            let maxValue_call = async (options) => {
                let result = await this.call('maxValue', [], options);
                return new eth_contract_15.BigNumber(result);
            };
            this.maxValue = maxValue_call;
            let priceFeedAddresses_call = async (param1, options) => {
                let result = await this.call('priceFeedAddresses', [param1], options);
                return result;
            };
            this.priceFeedAddresses = priceFeedAddresses_call;
            let returnAmmPrice_call = async (options) => {
                let result = await this.call('returnAmmPrice', [], options);
                return result;
            };
            this.returnAmmPrice = returnAmmPrice_call;
            let wethDecimals_call = async (options) => {
                let result = await this.call('wethDecimals', [], options);
                return new eth_contract_15.BigNumber(result);
            };
            this.wethDecimals = wethDecimals_call;
            let wethPriceFeed_call = async (options) => {
                let result = await this.call('wethPriceFeed', [], options);
                return result;
            };
            this.wethPriceFeed = wethPriceFeed_call;
        }
    }
    exports.OSWAP_OracleChainlinkPriceGuardFiatAvalanche = OSWAP_OracleChainlinkPriceGuardFiatAvalanche;
    OSWAP_OracleChainlinkPriceGuardFiatAvalanche._abi = OSWAP_OracleChainlinkPriceGuardFiatAvalanche_json_1.default.abi;
});
define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkPriceGuardFiatBinance.json.ts", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    ///<amd-module name='@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkPriceGuardFiatBinance.json.ts'/> 
    exports.default = {
        "abi": [
            { "inputs": [{ "internalType": "address", "name": "_factory", "type": "address" }, { "internalType": "uint256", "name": "_maxValue", "type": "uint256" }, { "internalType": "uint256", "name": "_deviation", "type": "uint256" }, { "internalType": "bool", "name": "_returnAmmPrice", "type": "bool" }], "stateMutability": "nonpayable", "type": "constructor" },
            { "inputs": [], "name": "WETH", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "chainlinkDeicmals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "decimals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "decimals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "factory", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "bytes", "name": "payload", "type": "bytes" }], "name": "getLatestPrice", "outputs": [{ "internalType": "uint256", "name": "price", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "fromAmount", "type": "uint256" }, { "internalType": "uint256", "name": "toAmount", "type": "uint256" }], "name": "getPriceInfo", "outputs": [{ "internalType": "uint256", "name": "chainlinkPrice", "type": "uint256" }, { "internalType": "uint256", "name": "ammPrice", "type": "uint256" }, { "internalType": "uint256", "name": "usdAmount", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "fromAmount", "type": "uint256" }, { "internalType": "uint256", "name": "toAmount", "type": "uint256" }, { "internalType": "bytes", "name": "payload", "type": "bytes" }], "name": "getRatio", "outputs": [{ "internalType": "uint256", "name": "numerator", "type": "uint256" }, { "internalType": "uint256", "name": "denominator", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "high", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }], "name": "isSupported", "outputs": [{ "internalType": "bool", "name": "supported", "type": "bool" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "low", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "maxValue", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "priceFeedAddresses", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "returnAmmPrice", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "wethDecimals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "wethPriceFeed", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" }
        ],
        "bytecode": ""
    };
});
define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkPriceGuardFiatBinance.ts", ["require", "exports", "@ijstech/eth-contract", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkPriceGuardFiatBinance.json.ts"], function (require, exports, eth_contract_16, OSWAP_OracleChainlinkPriceGuardFiatBinance_json_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.OSWAP_OracleChainlinkPriceGuardFiatBinance = void 0;
    class OSWAP_OracleChainlinkPriceGuardFiatBinance extends eth_contract_16.Contract {
        constructor(wallet, address) {
            super(wallet, address, OSWAP_OracleChainlinkPriceGuardFiatBinance_json_1.default.abi, OSWAP_OracleChainlinkPriceGuardFiatBinance_json_1.default.bytecode);
            this.assign();
        }
        deploy(params, options) {
            return this.__deploy([params.factory, this.wallet.utils.toString(params.maxValue), this.wallet.utils.toString(params.deviation), params.returnAmmPrice], options);
        }
        assign() {
            let WETH_call = async (options) => {
                let result = await this.call('WETH', [], options);
                return result;
            };
            this.WETH = WETH_call;
            let chainlinkDeicmals_call = async (options) => {
                let result = await this.call('chainlinkDeicmals', [], options);
                return new eth_contract_16.BigNumber(result);
            };
            this.chainlinkDeicmals = chainlinkDeicmals_call;
            let decimals_call = async (options) => {
                let result = await this.call('decimals', [], options);
                return new eth_contract_16.BigNumber(result);
            };
            this.decimals = decimals_call;
            let decimals_1_call = async (param1, options) => {
                let result = await this.call('decimals', [param1], options);
                return new eth_contract_16.BigNumber(result);
            };
            this.decimals_1 = decimals_1_call;
            let factory_call = async (options) => {
                let result = await this.call('factory', [], options);
                return result;
            };
            this.factory = factory_call;
            let getLatestPriceParams = (params) => [params.from, params.to, this.wallet.utils.stringToBytes(params.payload)];
            let getLatestPrice_call = async (params, options) => {
                let result = await this.call('getLatestPrice', getLatestPriceParams(params), options);
                return new eth_contract_16.BigNumber(result);
            };
            this.getLatestPrice = getLatestPrice_call;
            let getPriceInfoParams = (params) => [params.from, params.to, this.wallet.utils.toString(params.fromAmount), this.wallet.utils.toString(params.toAmount)];
            let getPriceInfo_call = async (params, options) => {
                let result = await this.call('getPriceInfo', getPriceInfoParams(params), options);
                return {
                    chainlinkPrice: new eth_contract_16.BigNumber(result.chainlinkPrice),
                    ammPrice: new eth_contract_16.BigNumber(result.ammPrice),
                    usdAmount: new eth_contract_16.BigNumber(result.usdAmount)
                };
            };
            this.getPriceInfo = getPriceInfo_call;
            let getRatioParams = (params) => [params.from, params.to, this.wallet.utils.toString(params.fromAmount), this.wallet.utils.toString(params.toAmount), this.wallet.utils.stringToBytes(params.payload)];
            let getRatio_call = async (params, options) => {
                let result = await this.call('getRatio', getRatioParams(params), options);
                return {
                    numerator: new eth_contract_16.BigNumber(result.numerator),
                    denominator: new eth_contract_16.BigNumber(result.denominator)
                };
            };
            this.getRatio = getRatio_call;
            let high_call = async (options) => {
                let result = await this.call('high', [], options);
                return new eth_contract_16.BigNumber(result);
            };
            this.high = high_call;
            let isSupportedParams = (params) => [params.from, params.to];
            let isSupported_call = async (params, options) => {
                let result = await this.call('isSupported', isSupportedParams(params), options);
                return result;
            };
            this.isSupported = isSupported_call;
            let low_call = async (options) => {
                let result = await this.call('low', [], options);
                return new eth_contract_16.BigNumber(result);
            };
            this.low = low_call;
            let maxValue_call = async (options) => {
                let result = await this.call('maxValue', [], options);
                return new eth_contract_16.BigNumber(result);
            };
            this.maxValue = maxValue_call;
            let priceFeedAddresses_call = async (param1, options) => {
                let result = await this.call('priceFeedAddresses', [param1], options);
                return result;
            };
            this.priceFeedAddresses = priceFeedAddresses_call;
            let returnAmmPrice_call = async (options) => {
                let result = await this.call('returnAmmPrice', [], options);
                return result;
            };
            this.returnAmmPrice = returnAmmPrice_call;
            let wethDecimals_call = async (options) => {
                let result = await this.call('wethDecimals', [], options);
                return new eth_contract_16.BigNumber(result);
            };
            this.wethDecimals = wethDecimals_call;
            let wethPriceFeed_call = async (options) => {
                let result = await this.call('wethPriceFeed', [], options);
                return result;
            };
            this.wethPriceFeed = wethPriceFeed_call;
        }
    }
    exports.OSWAP_OracleChainlinkPriceGuardFiatBinance = OSWAP_OracleChainlinkPriceGuardFiatBinance;
    OSWAP_OracleChainlinkPriceGuardFiatBinance._abi = OSWAP_OracleChainlinkPriceGuardFiatBinance_json_1.default.abi;
});
define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleConstant.json.ts", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    ///<amd-module name='@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleConstant.json.ts'/> 
    exports.default = {
        "abi": [
            { "inputs": [{ "internalType": "address[]", "name": "token0", "type": "address[]" }, { "internalType": "address[]", "name": "token1", "type": "address[]" }, { "internalType": "uint256[]", "name": "price0", "type": "uint256[]" }, { "internalType": "uint256[]", "name": "price1", "type": "uint256[]" }], "stateMutability": "nonpayable", "type": "constructor" },
            { "inputs": [], "name": "decimals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "bytes", "name": "", "type": "bytes" }], "name": "getLatestPrice", "outputs": [{ "internalType": "uint256", "name": "price", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "bytes", "name": "payload", "type": "bytes" }], "name": "getRatio", "outputs": [{ "internalType": "uint256", "name": "numerator", "type": "uint256" }, { "internalType": "uint256", "name": "denominator", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }, { "internalType": "address", "name": "", "type": "address" }], "name": "isSupported", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }, { "internalType": "address", "name": "", "type": "address" }], "name": "prices", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" }
        ],
        "bytecode": "608060405234801561001057600080fd5b50604051610a14380380610a148339818101604052608081101561003357600080fd5b810190808051604051939291908464010000000082111561005357600080fd5b90830190602082018581111561006857600080fd5b825186602082028301116401000000008211171561008557600080fd5b82525081516020918201928201910280838360005b838110156100b257818101518382015260200161009a565b50505050905001604052602001805160405193929190846401000000008211156100db57600080fd5b9083019060208201858111156100f057600080fd5b825186602082028301116401000000008211171561010d57600080fd5b82525081516020918201928201910280838360005b8381101561013a578181015183820152602001610122565b505050509050016040526020018051604051939291908464010000000082111561016357600080fd5b90830190602082018581111561017857600080fd5b825186602082028301116401000000008211171561019557600080fd5b82525081516020918201928201910280838360005b838110156101c25781810151838201526020016101aa565b50505050905001604052602001805160405193929190846401000000008211156101eb57600080fd5b90830190602082018581111561020057600080fd5b825186602082028301116401000000008211171561021d57600080fd5b82525081516020918201928201910280838360005b8381101561024a578181015183820152602001610232565b5050505090500160405250505060008451905083518114801561026e575082518451145b801561027b575081518351145b6102cc576040805162461bcd60e51b815260206004820152601d60248201527f4f535741503a204172726179206c656e677468206e6f74206d61746368000000604482015290519081900360640190fd5b60005b818110156105695760008682815181106102e557fe5b6020026020010151905060008683815181106102fd57fe5b60200260200101519050600086848151811061031557fe5b60200260200101519050600086858151811061032d57fe5b6020026020010151905060006001600160a01b0316846001600160a01b0316141561039f576040805162461bcd60e51b815260206004820152601f60248201527f4f535741503a2063616e6e6f742068617665207a65726f206164647265737300604482015290519081900360640190fd5b6001600160a01b0383166103fa576040805162461bcd60e51b815260206004820152601f60248201527f4f535741503a2063616e6e6f742068617665207a65726f206164647265737300604482015290519081900360640190fd5b826001600160a01b0316846001600160a01b0316141561044b5760405162461bcd60e51b815260040180806020018281038252602f8152602001806109e5602f913960400191505060405180910390fd5b8161049d576040805162461bcd60e51b815260206004820152601d60248201527f4f535741503a2063616e6e6f742068617665207a65726f207072696365000000604482015290519081900360640190fd5b806104ef576040805162461bcd60e51b815260206004820152601d60248201527f4f535741503a2063616e6e6f742068617665207a65726f207072696365000000604482015290519081900360640190fd5b6001600160a01b0393841660008181526020818152604080832096909716808352958152868220949094558084528581208282528452858120929092556001808452858320948352938352848220805460ff19908116861790915584845285832091835292529290922080549092168117909155016102cf565b5050505050506104678061057e6000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063495e434811610050578063495e4348146100d757806388462c8d1461016d578063d9da4fe6146101bc57610067565b80631f3124041461006c578063313ce567146100b9575b600080fd5b6100a76004803603604081101561008257600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516610277565b60408051918252519081900360200190f35b6100c1610291565b6040805160ff9092168252519081900360200190f35b6100a7600480360360608110156100ed57600080fd5b73ffffffffffffffffffffffffffffffffffffffff823581169260208101359091169181019060608101604082013564010000000081111561012e57600080fd5b82018360208201111561014057600080fd5b8035906020019184600183028401116401000000008311171561016257600080fd5b509092509050610296565b6101a86004803603604081101561018357600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160200135166103c3565b604080519115158252519081900360200190f35b61025e600480360360a08110156101d257600080fd5b73ffffffffffffffffffffffffffffffffffffffff823581169260208101359091169160408201359160608101359181019060a08101608082013564010000000081111561021f57600080fd5b82018360208201111561023157600080fd5b8035906020019184600183028401116401000000008311171561025357600080fd5b5090925090506103e3565b6040805192835260208301919091528051918290030190f35b600060208181529281526040808220909352908152205481565b601290565b60008373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141561031d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806104096029913960400191505060405180910390fd5b5073ffffffffffffffffffffffffffffffffffffffff80851660009081526020818152604080832093871683529290522054806103bb57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4f535741503a2070726963652066656564206e6f7420666f756e640000000000604482015290519081900360640190fd5b949350505050565b600160209081526000928352604080842090915290825290205460ff1681565b6000806103f288888686610296565b98670de0b6b3a76400009850965050505050505056fe4f535741503a2066726f6d20616e6420746f2061646472657373657320617265207468652073616d65a26469706673582212203cf87715f8085ecfd37c4590fb2383bfceea6bab193fa58e353a01818683c1bc64736f6c634300060b00334f535741503a2066726f6d20616e6420746f206164647265737365732063616e6e6f74206265207468652073616d65"
    };
});
define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleConstant.ts", ["require", "exports", "@ijstech/eth-contract", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleConstant.json.ts"], function (require, exports, eth_contract_17, OSWAP_OracleConstant_json_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.OSWAP_OracleConstant = void 0;
    class OSWAP_OracleConstant extends eth_contract_17.Contract {
        constructor(wallet, address) {
            super(wallet, address, OSWAP_OracleConstant_json_1.default.abi, OSWAP_OracleConstant_json_1.default.bytecode);
            this.assign();
        }
        deploy(params, options) {
            return this.__deploy([params.token0, params.token1, this.wallet.utils.toString(params.price0), this.wallet.utils.toString(params.price1)], options);
        }
        assign() {
            let decimals_call = async (options) => {
                let result = await this.call('decimals', [], options);
                return new eth_contract_17.BigNumber(result);
            };
            this.decimals = decimals_call;
            let getLatestPriceParams = (params) => [params.from, params.to, this.wallet.utils.stringToBytes(params.param3)];
            let getLatestPrice_call = async (params, options) => {
                let result = await this.call('getLatestPrice', getLatestPriceParams(params), options);
                return new eth_contract_17.BigNumber(result);
            };
            this.getLatestPrice = getLatestPrice_call;
            let getRatioParams = (params) => [params.from, params.to, this.wallet.utils.toString(params.param3), this.wallet.utils.toString(params.param4), this.wallet.utils.stringToBytes(params.payload)];
            let getRatio_call = async (params, options) => {
                let result = await this.call('getRatio', getRatioParams(params), options);
                return {
                    numerator: new eth_contract_17.BigNumber(result.numerator),
                    denominator: new eth_contract_17.BigNumber(result.denominator)
                };
            };
            this.getRatio = getRatio_call;
            let isSupportedParams = (params) => [params.param1, params.param2];
            let isSupported_call = async (params, options) => {
                let result = await this.call('isSupported', isSupportedParams(params), options);
                return result;
            };
            this.isSupported = isSupported_call;
            let pricesParams = (params) => [params.param1, params.param2];
            let prices_call = async (params, options) => {
                let result = await this.call('prices', pricesParams(params), options);
                return new eth_contract_17.BigNumber(result);
            };
            this.prices = prices_call;
        }
    }
    exports.OSWAP_OracleConstant = OSWAP_OracleConstant;
    OSWAP_OracleConstant._abi = OSWAP_OracleConstant_json_1.default.abi;
});
define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleConstantLimited.json.ts", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    ///<amd-module name='@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleConstantLimited.json.ts'/> 
    exports.default = {
        "abi": [
            { "inputs": [{ "internalType": "address[]", "name": "token0", "type": "address[]" }, { "internalType": "address[]", "name": "token1", "type": "address[]" }, { "internalType": "uint256[]", "name": "price0", "type": "uint256[]" }, { "internalType": "uint256[]", "name": "price1", "type": "uint256[]" }, { "internalType": "uint256[]", "name": "limit0", "type": "uint256[]" }, { "internalType": "uint256[]", "name": "limit1", "type": "uint256[]" }], "stateMutability": "nonpayable", "type": "constructor" },
            { "inputs": [], "name": "decimals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "bytes", "name": "", "type": "bytes" }], "name": "getLatestPrice", "outputs": [{ "internalType": "uint256", "name": "price", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "fromAmount", "type": "uint256" }, { "internalType": "uint256", "name": "toAmount", "type": "uint256" }, { "internalType": "bytes", "name": "payload", "type": "bytes" }], "name": "getRatio", "outputs": [{ "internalType": "uint256", "name": "numerator", "type": "uint256" }, { "internalType": "uint256", "name": "denominator", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }, { "internalType": "address", "name": "", "type": "address" }], "name": "isSupported", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }, { "internalType": "address", "name": "", "type": "address" }, { "internalType": "bool", "name": "", "type": "bool" }], "name": "limits", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }, { "internalType": "address", "name": "", "type": "address" }], "name": "prices", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" }
        ],
        "bytecode": "60806040523480156200001157600080fd5b506040516200126938038062001269833981810160405260c08110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82518660208202830111640100000000821117156200008c57600080fd5b82525081516020918201928201910280838360005b83811015620000bb578181015183820152602001620000a1565b5050505090500160405260200180516040519392919084640100000000821115620000e557600080fd5b908301906020820185811115620000fb57600080fd5b82518660208202830111640100000000821117156200011957600080fd5b82525081516020918201928201910280838360005b83811015620001485781810151838201526020016200012e565b50505050905001604052602001805160405193929190846401000000008211156200017257600080fd5b9083019060208201858111156200018857600080fd5b8251866020820283011164010000000082111715620001a657600080fd5b82525081516020918201928201910280838360005b83811015620001d5578181015183820152602001620001bb565b5050505090500160405260200180516040519392919084640100000000821115620001ff57600080fd5b9083019060208201858111156200021557600080fd5b82518660208202830111640100000000821117156200023357600080fd5b82525081516020918201928201910280838360005b838110156200026257818101518382015260200162000248565b50505050905001604052602001805160405193929190846401000000008211156200028c57600080fd5b908301906020820185811115620002a257600080fd5b8251866020820283011164010000000082111715620002c057600080fd5b82525081516020918201928201910280838360005b83811015620002ef578181015183820152602001620002d5565b50505050905001604052602001805160405193929190846401000000008211156200031957600080fd5b9083019060208201858111156200032f57600080fd5b82518660208202830111640100000000821117156200034d57600080fd5b82525081516020918201928201910280838360005b838110156200037c57818101518382015260200162000362565b5050505090500160405250505085858585600084519050835181148015620003a5575082518451145b8015620003b3575081518351145b62000405576040805162461bcd60e51b815260206004820152601d60248201527f4f535741503a204172726179206c656e677468206e6f74206d61746368000000604482015290519081900360640190fd5b60005b81811015620006ae5760008682815181106200042057fe5b6020026020010151905060008683815181106200043957fe5b6020026020010151905060008684815181106200045257fe5b6020026020010151905060008685815181106200046b57fe5b6020026020010151905060006001600160a01b0316846001600160a01b03161415620004de576040805162461bcd60e51b815260206004820152601f60248201527f4f535741503a2063616e6e6f742068617665207a65726f206164647265737300604482015290519081900360640190fd5b6001600160a01b0383166200053a576040805162461bcd60e51b815260206004820152601f60248201527f4f535741503a2063616e6e6f742068617665207a65726f206164647265737300604482015290519081900360640190fd5b826001600160a01b0316846001600160a01b031614156200058d5760405162461bcd60e51b815260040180806020018281038252602f8152602001806200123a602f913960400191505060405180910390fd5b81620005e0576040805162461bcd60e51b815260206004820152601d60248201527f4f535741503a2063616e6e6f742068617665207a65726f207072696365000000604482015290519081900360640190fd5b8062000633576040805162461bcd60e51b815260206004820152601d60248201527f4f535741503a2063616e6e6f742068617665207a65726f207072696365000000604482015290519081900360640190fd5b6001600160a01b0393841660008181526020818152604080832096909716808352958152868220949094558084528581208282528452858120929092556001808452858320948352938352848220805460ff199081168617909155848452858320918352925292909220805490921681179091550162000408565b505050505050600086519050855181148015620006cc575084518651145b8015620006da575083518551145b8015620006e8575082518451145b8015620006f6575081518351145b62000748576040805162461bcd60e51b815260206004820152601d60248201527f4f535741503a204172726179206c656e677468206e6f74206d61746368000000604482015290519081900360640190fd5b60005b81811015620009335760008882815181106200076357fe5b6020026020010151905060008883815181106200077c57fe5b6020026020010151905060008884815181106200079557fe5b602002602001015190506000888581518110620007ae57fe5b60200260200101519050878581518110620007c557fe5b6020908102919091018101516001600160a01b0380871660009081526002845260408082209288168252918452818120600182529093529091205587516200085590670de0b6b3a764000090620008419085908c908a9081106200082557fe5b60200260200101516200094160201b6200057b1790919060201c565b620009a860201b620005f71790919060201c565b6001600160a01b03808616600090815260026020908152604080832093881683529281528282208280529052205586518790869081106200089257fe5b6020908102919091018101516001600160a01b038086166000908152600284526040808220928916825291845281812060018252909352909120558651620008f290670de0b6b3a764000090620008419084908b908a9081106200082557fe5b6001600160a01b039384166000908152600260209081526040808320979096168252958652848120818052909552929093209190915550506001016200074b565b505050505050505062000a99565b6000826200095257506000620009a2565b828202828482816200096057fe5b04146200099f5760405162461bcd60e51b8152600401808060200182810382526021815260200180620012196021913960400191505060405180910390fd5b90505b92915050565b60006200099f83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250620009f260201b60201c565b6000818362000a825760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101562000a4657818101518382015260200162000a2c565b50505050905090810190601f16801562000a745780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858162000a8f57fe5b0495945050505050565b6107708062000aa96000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c806388462c8d1161005057806388462c8d146101785780638d670b71146101c7578063d9da4fe61461020c57610072565b80631f31240414610077578063313ce567146100c4578063495e4348146100e2575b600080fd5b6100b26004803603604081101561008d57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160200135166102c7565b60408051918252519081900360200190f35b6100cc6102e1565b6040805160ff9092168252519081900360200190f35b6100b2600480360360608110156100f857600080fd5b73ffffffffffffffffffffffffffffffffffffffff823581169260208101359091169181019060608101604082013564010000000081111561013957600080fd5b82018360208201111561014b57600080fd5b8035906020019184600183028401116401000000008311171561016d57600080fd5b5090925090506102e6565b6101b36004803603604081101561018e57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516610413565b604080519115158252519081900360200190f35b6100b2600480360360608110156101dd57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013590911690604001351515610433565b6102ae600480360360a081101561022257600080fd5b73ffffffffffffffffffffffffffffffffffffffff823581169260208101359091169160408201359160608101359181019060a08101608082013564010000000081111561026f57600080fd5b82018360208201111561028157600080fd5b803590602001918460018302840111640100000000831117156102a357600080fd5b509092509050610456565b6040805192835260208301919091528051918290030190f35b600060208181529281526040808220909352908152205481565b601290565b60008373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141561036d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806106f16029913960400191505060405180910390fd5b5073ffffffffffffffffffffffffffffffffffffffff808516600090815260208181526040808320938716835292905220548061040b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4f535741503a2070726963652066656564206e6f7420666f756e640000000000604482015290519081900360640190fd5b949350505050565b600160209081526000928352604080842090915290825290205460ff1681565b600260209081526000938452604080852082529284528284209052825290205481565b600080851580156104a0575073ffffffffffffffffffffffffffffffffffffffff8089166000908152600260209081526040808320938b1683529281528282208280529052205485105b806104ee5750841580156104ee575073ffffffffffffffffffffffffffffffffffffffff8089166000908152600260209081526040808320938b168352928152828220600183529052205486105b61055957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4f535741503a204f766572204c696d6974000000000000000000000000000000604482015290519081900360640190fd5b610565888886866102e6565b98670de0b6b3a764000098509650505050505050565b60008261058a575060006105f1565b8282028284828161059757fe5b04146105ee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061071a6021913960400191505060405180910390fd5b90505b92915050565b60006105ee83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250600081836106da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561069f578181015183820152602001610687565b50505050905090810190601f1680156106cc5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816106e657fe5b049594505050505056fe4f535741503a2066726f6d20616e6420746f2061646472657373657320617265207468652073616d65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a264697066735822122045e2478de3bd70bf010555e698b86592d13b2b1649593c632def3f8f9ae2f79864736f6c634300060b0033536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f535741503a2066726f6d20616e6420746f206164647265737365732063616e6e6f74206265207468652073616d65"
    };
});
define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleConstantLimited.ts", ["require", "exports", "@ijstech/eth-contract", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleConstantLimited.json.ts"], function (require, exports, eth_contract_18, OSWAP_OracleConstantLimited_json_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.OSWAP_OracleConstantLimited = void 0;
    class OSWAP_OracleConstantLimited extends eth_contract_18.Contract {
        constructor(wallet, address) {
            super(wallet, address, OSWAP_OracleConstantLimited_json_1.default.abi, OSWAP_OracleConstantLimited_json_1.default.bytecode);
            this.assign();
        }
        deploy(params, options) {
            return this.__deploy([params.token0, params.token1, this.wallet.utils.toString(params.price0), this.wallet.utils.toString(params.price1), this.wallet.utils.toString(params.limit0), this.wallet.utils.toString(params.limit1)], options);
        }
        assign() {
            let decimals_call = async (options) => {
                let result = await this.call('decimals', [], options);
                return new eth_contract_18.BigNumber(result);
            };
            this.decimals = decimals_call;
            let getLatestPriceParams = (params) => [params.from, params.to, this.wallet.utils.stringToBytes(params.param3)];
            let getLatestPrice_call = async (params, options) => {
                let result = await this.call('getLatestPrice', getLatestPriceParams(params), options);
                return new eth_contract_18.BigNumber(result);
            };
            this.getLatestPrice = getLatestPrice_call;
            let getRatioParams = (params) => [params.from, params.to, this.wallet.utils.toString(params.fromAmount), this.wallet.utils.toString(params.toAmount), this.wallet.utils.stringToBytes(params.payload)];
            let getRatio_call = async (params, options) => {
                let result = await this.call('getRatio', getRatioParams(params), options);
                return {
                    numerator: new eth_contract_18.BigNumber(result.numerator),
                    denominator: new eth_contract_18.BigNumber(result.denominator)
                };
            };
            this.getRatio = getRatio_call;
            let isSupportedParams = (params) => [params.param1, params.param2];
            let isSupported_call = async (params, options) => {
                let result = await this.call('isSupported', isSupportedParams(params), options);
                return result;
            };
            this.isSupported = isSupported_call;
            let limitsParams = (params) => [params.param1, params.param2, params.param3];
            let limits_call = async (params, options) => {
                let result = await this.call('limits', limitsParams(params), options);
                return new eth_contract_18.BigNumber(result);
            };
            this.limits = limits_call;
            let pricesParams = (params) => [params.param1, params.param2];
            let prices_call = async (params, options) => {
                let result = await this.call('prices', pricesParams(params), options);
                return new eth_contract_18.BigNumber(result);
            };
            this.prices = prices_call;
        }
    }
    exports.OSWAP_OracleConstantLimited = OSWAP_OracleConstantLimited;
    OSWAP_OracleConstantLimited._abi = OSWAP_OracleConstantLimited_json_1.default.abi;
});
define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleSetYourOwnPrice.json.ts", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    ///<amd-module name='@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleSetYourOwnPrice.json.ts'/> 
    exports.default = {
        "abi": [
            { "inputs": [], "name": "decimals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }, { "internalType": "address", "name": "", "type": "address" }, { "internalType": "bytes", "name": "payload", "type": "bytes" }], "name": "getLatestPrice", "outputs": [{ "internalType": "uint256", "name": "price", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "bytes", "name": "payload", "type": "bytes" }], "name": "getRatio", "outputs": [{ "internalType": "uint256", "name": "numerator", "type": "uint256" }, { "internalType": "uint256", "name": "denominator", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }, { "internalType": "address", "name": "", "type": "address" }], "name": "isSupported", "outputs": [{ "internalType": "bool", "name": "supported", "type": "bool" }], "stateMutability": "view", "type": "function" }
        ],
        "bytecode": "608060405234801561001057600080fd5b506102fd806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063313ce56714610051578063495e43481461006f57806388462c8d1461014d578063d9da4fe61461019c575b600080fd5b61005961028d565b6040805160ff9092168252519081900360200190f35b61013b6004803603606081101561008557600080fd5b73ffffffffffffffffffffffffffffffffffffffff82358116926020810135909116918101906060810160408201356401000000008111156100c657600080fd5b8201836020820111156100d857600080fd5b803590602001918460018302840111640100000000831117156100fa57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610292945050505050565b60408051918252519081900360200190f35b6101886004803603604081101561016357600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602001351661029c565b604080519115158252519081900360200190f35b610274600480360360a08110156101b257600080fd5b73ffffffffffffffffffffffffffffffffffffffff823581169260208101359091169160408201359160608101359181019060a0810160808201356401000000008111156101ff57600080fd5b82018360208201111561021157600080fd5b8035906020019184600183028401116401000000008311171561023357600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506102a4945050505050565b6040805192835260208301919091528051918290030190f35b601290565b6020015192915050565b600192915050565b6000806102b2878785610292565b97670de0b6b3a764000097509550505050505056fea2646970667358221220357dd76a082d203bb10b1a07c5f44d0fd0f3fa825dff0a922b990cb37164761e64736f6c634300060b0033"
    };
});
define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleSetYourOwnPrice.ts", ["require", "exports", "@ijstech/eth-contract", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleSetYourOwnPrice.json.ts"], function (require, exports, eth_contract_19, OSWAP_OracleSetYourOwnPrice_json_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.OSWAP_OracleSetYourOwnPrice = void 0;
    class OSWAP_OracleSetYourOwnPrice extends eth_contract_19.Contract {
        constructor(wallet, address) {
            super(wallet, address, OSWAP_OracleSetYourOwnPrice_json_1.default.abi, OSWAP_OracleSetYourOwnPrice_json_1.default.bytecode);
            this.assign();
        }
        deploy(options) {
            return this.__deploy([], options);
        }
        assign() {
            let decimals_call = async (options) => {
                let result = await this.call('decimals', [], options);
                return new eth_contract_19.BigNumber(result);
            };
            this.decimals = decimals_call;
            let getLatestPriceParams = (params) => [params.param1, params.param2, this.wallet.utils.stringToBytes(params.payload)];
            let getLatestPrice_call = async (params, options) => {
                let result = await this.call('getLatestPrice', getLatestPriceParams(params), options);
                return new eth_contract_19.BigNumber(result);
            };
            this.getLatestPrice = getLatestPrice_call;
            let getRatioParams = (params) => [params.from, params.to, this.wallet.utils.toString(params.param3), this.wallet.utils.toString(params.param4), this.wallet.utils.stringToBytes(params.payload)];
            let getRatio_call = async (params, options) => {
                let result = await this.call('getRatio', getRatioParams(params), options);
                return {
                    numerator: new eth_contract_19.BigNumber(result.numerator),
                    denominator: new eth_contract_19.BigNumber(result.denominator)
                };
            };
            this.getRatio = getRatio_call;
            let isSupportedParams = (params) => [params.param1, params.param2];
            let isSupported_call = async (params, options) => {
                let result = await this.call('isSupported', isSupportedParams(params), options);
                return result;
            };
            this.isSupported = isSupported_call;
        }
    }
    exports.OSWAP_OracleSetYourOwnPrice = OSWAP_OracleSetYourOwnPrice;
    OSWAP_OracleSetYourOwnPrice._abi = OSWAP_OracleSetYourOwnPrice_json_1.default.abi;
});
define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleSigned.json.ts", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    ///<amd-module name='@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleSigned.json.ts'/> 
    exports.default = {
        "abi": [
            { "inputs": [{ "internalType": "address", "name": "_signer", "type": "address" }], "stateMutability": "nonpayable", "type": "constructor" },
            { "inputs": [], "name": "decimals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "bytes", "name": "payload", "type": "bytes" }], "name": "getLatestPrice", "outputs": [{ "internalType": "uint256", "name": "price", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "bytes", "name": "payload", "type": "bytes" }], "name": "getRatio", "outputs": [{ "internalType": "uint256", "name": "numerator", "type": "uint256" }, { "internalType": "uint256", "name": "denominator", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }, { "internalType": "address", "name": "", "type": "address" }], "name": "isSupported", "outputs": [{ "internalType": "bool", "name": "supported", "type": "bool" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "sequenceNumber", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "signer", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "bytes", "name": "payload", "type": "bytes" }], "name": "updateSequenceNumber", "outputs": [], "stateMutability": "nonpayable", "type": "function" }
        ],
        "bytecode": "60a060405234801561001057600080fd5b506040516109063803806109068339818101604052602081101561003357600080fd5b5051606081901b6001600160601b0319166080526001600160a01b031661089a61006c6000398061032552806106c8525061089a6000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806364ca23ef1161005b57806364ca23ef1461017957806388462c8d146101815780638f47e82e146101d0578063d9da4fe6146102685761007d565b8063238ac93314610082578063313ce567146100b3578063495e4348146100d1575b600080fd5b61008a610323565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6100bb610347565b6040805160ff9092168252519081900360200190f35b610167600480360360608110156100e757600080fd5b73ffffffffffffffffffffffffffffffffffffffff823581169260208101359091169181019060608101604082013564010000000081111561012857600080fd5b82018360208201111561013a57600080fd5b8035906020019184600183028401116401000000008311171561015c57600080fd5b50909250905061034c565b60408051918252519081900360200190f35b610167610399565b6101bc6004803603604081101561019757600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602001351661039f565b604080519115158252519081900360200190f35b610266600480360360608110156101e657600080fd5b73ffffffffffffffffffffffffffffffffffffffff823581169260208101359091169181019060608101604082013564010000000081111561022757600080fd5b82018360208201111561023957600080fd5b8035906020019184600183028401116401000000008311171561025b57600080fd5b5090925090506103a7565b005b61030a600480360360a081101561027e57600080fd5b73ffffffffffffffffffffffffffffffffffffffff823581169260208101359091169160408201359160608101359181019060a0810160808201356401000000008111156102cb57600080fd5b8201836020820111156102dd57600080fd5b803590602001918460018302840111640100000000831117156102ff57600080fd5b509092509050610466565b6040805192835260208301919091528051918290030190f35b7f000000000000000000000000000000000000000000000000000000000000000081565b601290565b600061038f858585858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061048b92505050565b5095945050505050565b60005481565b600192915050565b60006103ea858585858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061048b92505050565b915050600054811161045d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f4f535741503a20496e76616c69642073657175656e6365206e756d6265720000604482015290519081900360640190fd5b60005550505050565b6000806104758888868661034c565b98670de0b6b3a764000098509650505050505050565b600080825160a1146104fe57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4f535741503a20496e76616c6964207061796c6f61642073697a650000000000604482015290519081900360640190fd5b505060208101516040820151606083015160005446919083101561058357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f4f535741503a20496e76616c69642073657175656e6365206e756d6265720000604482015290519081900360640190fd5b8042106105f157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f4f535741503a2050726963652065787069726564000000000000000000000000604482015290519081900360640190fd5b6040805130606090811b6020808401919091527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008b831b81166034850152918a901b9091166048830152605c8201879052607c8201869052609c820184905260bc8083018690528351808403909101815260dc830184528051908201207f19457468657265756d205369676e6564204d6573736167653a0a33320000000060fc8401526101188084019190915283518084039091018152610138909201909252805191012060006106c48288608061078c565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461078057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4f535741503a20496e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b50505050935093915050565b8181018051602082015160409092015160009290831a601b8110156107af57601b015b8060ff16601b141580156107c757508060ff16601c14155b156107d8576000935050505061085d565b604080516000815260208082018084528a905260ff8416828401526060820186905260808201859052915160019260a08084019391927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081019281900390910190855afa15801561084d573d6000803e3d6000fd5b5050506020604051035193505050505b939250505056fea26469706673582212209bfd43e770f351041a653a30ee8a972575efad2f413f0874ad638e3f4e681f3d64736f6c634300060b0033"
    };
});
define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleSigned.ts", ["require", "exports", "@ijstech/eth-contract", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleSigned.json.ts"], function (require, exports, eth_contract_20, OSWAP_OracleSigned_json_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.OSWAP_OracleSigned = void 0;
    class OSWAP_OracleSigned extends eth_contract_20.Contract {
        constructor(wallet, address) {
            super(wallet, address, OSWAP_OracleSigned_json_1.default.abi, OSWAP_OracleSigned_json_1.default.bytecode);
            this.assign();
        }
        deploy(signer, options) {
            return this.__deploy([signer], options);
        }
        assign() {
            let decimals_call = async (options) => {
                let result = await this.call('decimals', [], options);
                return new eth_contract_20.BigNumber(result);
            };
            this.decimals = decimals_call;
            let getLatestPriceParams = (params) => [params.from, params.to, this.wallet.utils.stringToBytes(params.payload)];
            let getLatestPrice_call = async (params, options) => {
                let result = await this.call('getLatestPrice', getLatestPriceParams(params), options);
                return new eth_contract_20.BigNumber(result);
            };
            this.getLatestPrice = getLatestPrice_call;
            let getRatioParams = (params) => [params.from, params.to, this.wallet.utils.toString(params.param3), this.wallet.utils.toString(params.param4), this.wallet.utils.stringToBytes(params.payload)];
            let getRatio_call = async (params, options) => {
                let result = await this.call('getRatio', getRatioParams(params), options);
                return {
                    numerator: new eth_contract_20.BigNumber(result.numerator),
                    denominator: new eth_contract_20.BigNumber(result.denominator)
                };
            };
            this.getRatio = getRatio_call;
            let isSupportedParams = (params) => [params.param1, params.param2];
            let isSupported_call = async (params, options) => {
                let result = await this.call('isSupported', isSupportedParams(params), options);
                return result;
            };
            this.isSupported = isSupported_call;
            let sequenceNumber_call = async (options) => {
                let result = await this.call('sequenceNumber', [], options);
                return new eth_contract_20.BigNumber(result);
            };
            this.sequenceNumber = sequenceNumber_call;
            let signer_call = async (options) => {
                let result = await this.call('signer', [], options);
                return result;
            };
            this.signer = signer_call;
            let updateSequenceNumberParams = (params) => [params.from, params.to, this.wallet.utils.stringToBytes(params.payload)];
            let updateSequenceNumber_send = async (params, options) => {
                let result = await this.send('updateSequenceNumber', updateSequenceNumberParams(params), options);
                return result;
            };
            let updateSequenceNumber_call = async (params, options) => {
                let result = await this.call('updateSequenceNumber', updateSequenceNumberParams(params), options);
                return;
            };
            this.updateSequenceNumber = Object.assign(updateSequenceNumber_send, {
                call: updateSequenceNumber_call
            });
        }
    }
    exports.OSWAP_OracleSigned = OSWAP_OracleSigned;
    OSWAP_OracleSigned._abi = OSWAP_OracleSigned_json_1.default.abi;
});
define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleUnity.json.ts", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    ///<amd-module name='@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleUnity.json.ts'/> 
    exports.default = {
        "abi": [
            { "inputs": [], "name": "decimals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }, { "internalType": "address", "name": "", "type": "address" }, { "internalType": "bytes", "name": "", "type": "bytes" }], "name": "getLatestPrice", "outputs": [{ "internalType": "uint256", "name": "price", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }, { "internalType": "address", "name": "", "type": "address" }, { "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "bytes", "name": "", "type": "bytes" }], "name": "getRatio", "outputs": [{ "internalType": "uint256", "name": "numerator", "type": "uint256" }, { "internalType": "uint256", "name": "denominator", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }, { "internalType": "address", "name": "", "type": "address" }], "name": "isSupported", "outputs": [{ "internalType": "bool", "name": "supported", "type": "bool" }], "stateMutability": "view", "type": "function" }
        ],
        "bytecode": "608060405234801561001057600080fd5b50610283806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063313ce56714610051578063495e43481461006f57806388462c8d14610117578063d9da4fe614610166575b600080fd5b610059610221565b6040805160ff9092168252519081900360200190f35b6101056004803603606081101561008557600080fd5b73ffffffffffffffffffffffffffffffffffffffff82358116926020810135909116918101906060810160408201356401000000008111156100c657600080fd5b8201836020820111156100d857600080fd5b803590602001918460018302840111640100000000831117156100fa57600080fd5b509092509050610226565b60408051918252519081900360200190f35b6101526004803603604081101561012d57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516610237565b604080519115158252519081900360200190f35b610208600480360360a081101561017c57600080fd5b73ffffffffffffffffffffffffffffffffffffffff823581169260208101359091169160408201359160608101359181019060a0810160808201356401000000008111156101c957600080fd5b8201836020820111156101db57600080fd5b803590602001918460018302840111640100000000831117156101fd57600080fd5b50909250905061023f565b6040805192835260208301919091528051918290030190f35b601290565b670de0b6b3a7640000949350505050565b600192915050565b50600195869550935050505056fea26469706673582212204135066d4e52158245df0e70f7aa151a1b6675bd928c6c625153b6e87d28d1e664736f6c634300060b0033"
    };
});
define("@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleUnity.ts", ["require", "exports", "@ijstech/eth-contract", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleUnity.json.ts"], function (require, exports, eth_contract_21, OSWAP_OracleUnity_json_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.OSWAP_OracleUnity = void 0;
    class OSWAP_OracleUnity extends eth_contract_21.Contract {
        constructor(wallet, address) {
            super(wallet, address, OSWAP_OracleUnity_json_1.default.abi, OSWAP_OracleUnity_json_1.default.bytecode);
            this.assign();
        }
        deploy(options) {
            return this.__deploy([], options);
        }
        assign() {
            let decimals_call = async (options) => {
                let result = await this.call('decimals', [], options);
                return new eth_contract_21.BigNumber(result);
            };
            this.decimals = decimals_call;
            let getLatestPriceParams = (params) => [params.param1, params.param2, this.wallet.utils.stringToBytes(params.param3)];
            let getLatestPrice_call = async (params, options) => {
                let result = await this.call('getLatestPrice', getLatestPriceParams(params), options);
                return new eth_contract_21.BigNumber(result);
            };
            this.getLatestPrice = getLatestPrice_call;
            let getRatioParams = (params) => [params.param1, params.param2, this.wallet.utils.toString(params.param3), this.wallet.utils.toString(params.param4), this.wallet.utils.stringToBytes(params.param5)];
            let getRatio_call = async (params, options) => {
                let result = await this.call('getRatio', getRatioParams(params), options);
                return {
                    numerator: new eth_contract_21.BigNumber(result.numerator),
                    denominator: new eth_contract_21.BigNumber(result.denominator)
                };
            };
            this.getRatio = getRatio_call;
            let isSupportedParams = (params) => [params.param1, params.param2];
            let isSupported_call = async (params, options) => {
                let result = await this.call('isSupported', isSupportedParams(params), options);
                return result;
            };
            this.isSupported = isSupported_call;
        }
    }
    exports.OSWAP_OracleUnity = OSWAP_OracleUnity;
    OSWAP_OracleUnity._abi = OSWAP_OracleUnity_json_1.default.abi;
});
define("@scom/oswap-oracle-adaptor-contract/contracts/index.ts", ["require", "exports", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChained.ts", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlink.ts", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkBinance.ts", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkFiat.ts", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkFiatAvalanche.ts", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkFiatBinance.ts", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkFiatGeneric.ts", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkGeneric.ts", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkLimitedGeneric.ts", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkPriceGuardFiatGeneric.ts", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkPriceGuardGeneric.ts", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkV1Generic.ts", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkLimited.ts", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkPriceGuardBinance.ts", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkPriceGuardFiatAvalanche.ts", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleChainlinkPriceGuardFiatBinance.ts", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleConstant.ts", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleConstantLimited.ts", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleSetYourOwnPrice.ts", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleSigned.ts", "@scom/oswap-oracle-adaptor-contract/contracts/OSWAP_OracleUnity.ts"], function (require, exports, OSWAP_OracleChained_1, OSWAP_OracleChainlink_1, OSWAP_OracleChainlinkBinance_1, OSWAP_OracleChainlinkFiat_1, OSWAP_OracleChainlinkFiatAvalanche_1, OSWAP_OracleChainlinkFiatBinance_1, OSWAP_OracleChainlinkFiatGeneric_1, OSWAP_OracleChainlinkGeneric_1, OSWAP_OracleChainlinkLimitedGeneric_1, OSWAP_OracleChainlinkPriceGuardFiatGeneric_1, OSWAP_OracleChainlinkPriceGuardGeneric_1, OSWAP_OracleChainlinkV1Generic_1, OSWAP_OracleChainlinkLimited_1, OSWAP_OracleChainlinkPriceGuardBinance_1, OSWAP_OracleChainlinkPriceGuardFiatAvalanche_1, OSWAP_OracleChainlinkPriceGuardFiatBinance_1, OSWAP_OracleConstant_1, OSWAP_OracleConstantLimited_1, OSWAP_OracleSetYourOwnPrice_1, OSWAP_OracleSigned_1, OSWAP_OracleUnity_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.OSWAP_OracleUnity = exports.OSWAP_OracleSigned = exports.OSWAP_OracleSetYourOwnPrice = exports.OSWAP_OracleConstantLimited = exports.OSWAP_OracleConstant = exports.OSWAP_OracleChainlinkPriceGuardFiatBinance = exports.OSWAP_OracleChainlinkPriceGuardFiatAvalanche = exports.OSWAP_OracleChainlinkPriceGuardBinance = exports.OSWAP_OracleChainlinkLimited = exports.OSWAP_OracleChainlinkV1Generic = exports.OSWAP_OracleChainlinkPriceGuardGeneric = exports.OSWAP_OracleChainlinkPriceGuardFiatGeneric = exports.OSWAP_OracleChainlinkLimitedGeneric = exports.OSWAP_OracleChainlinkGeneric = exports.OSWAP_OracleChainlinkFiatGeneric = exports.OSWAP_OracleChainlinkFiatBinance = exports.OSWAP_OracleChainlinkFiatAvalanche = exports.OSWAP_OracleChainlinkFiat = exports.OSWAP_OracleChainlinkBinance = exports.OSWAP_OracleChainlink = exports.OSWAP_OracleChained = void 0;
    Object.defineProperty(exports, "OSWAP_OracleChained", { enumerable: true, get: function () { return OSWAP_OracleChained_1.OSWAP_OracleChained; } });
    Object.defineProperty(exports, "OSWAP_OracleChainlink", { enumerable: true, get: function () { return OSWAP_OracleChainlink_1.OSWAP_OracleChainlink; } });
    Object.defineProperty(exports, "OSWAP_OracleChainlinkBinance", { enumerable: true, get: function () { return OSWAP_OracleChainlinkBinance_1.OSWAP_OracleChainlinkBinance; } });
    Object.defineProperty(exports, "OSWAP_OracleChainlinkFiat", { enumerable: true, get: function () { return OSWAP_OracleChainlinkFiat_1.OSWAP_OracleChainlinkFiat; } });
    Object.defineProperty(exports, "OSWAP_OracleChainlinkFiatAvalanche", { enumerable: true, get: function () { return OSWAP_OracleChainlinkFiatAvalanche_1.OSWAP_OracleChainlinkFiatAvalanche; } });
    Object.defineProperty(exports, "OSWAP_OracleChainlinkFiatBinance", { enumerable: true, get: function () { return OSWAP_OracleChainlinkFiatBinance_1.OSWAP_OracleChainlinkFiatBinance; } });
    Object.defineProperty(exports, "OSWAP_OracleChainlinkFiatGeneric", { enumerable: true, get: function () { return OSWAP_OracleChainlinkFiatGeneric_1.OSWAP_OracleChainlinkFiatGeneric; } });
    Object.defineProperty(exports, "OSWAP_OracleChainlinkGeneric", { enumerable: true, get: function () { return OSWAP_OracleChainlinkGeneric_1.OSWAP_OracleChainlinkGeneric; } });
    Object.defineProperty(exports, "OSWAP_OracleChainlinkLimitedGeneric", { enumerable: true, get: function () { return OSWAP_OracleChainlinkLimitedGeneric_1.OSWAP_OracleChainlinkLimitedGeneric; } });
    Object.defineProperty(exports, "OSWAP_OracleChainlinkPriceGuardFiatGeneric", { enumerable: true, get: function () { return OSWAP_OracleChainlinkPriceGuardFiatGeneric_1.OSWAP_OracleChainlinkPriceGuardFiatGeneric; } });
    Object.defineProperty(exports, "OSWAP_OracleChainlinkPriceGuardGeneric", { enumerable: true, get: function () { return OSWAP_OracleChainlinkPriceGuardGeneric_1.OSWAP_OracleChainlinkPriceGuardGeneric; } });
    Object.defineProperty(exports, "OSWAP_OracleChainlinkV1Generic", { enumerable: true, get: function () { return OSWAP_OracleChainlinkV1Generic_1.OSWAP_OracleChainlinkV1Generic; } });
    Object.defineProperty(exports, "OSWAP_OracleChainlinkLimited", { enumerable: true, get: function () { return OSWAP_OracleChainlinkLimited_1.OSWAP_OracleChainlinkLimited; } });
    Object.defineProperty(exports, "OSWAP_OracleChainlinkPriceGuardBinance", { enumerable: true, get: function () { return OSWAP_OracleChainlinkPriceGuardBinance_1.OSWAP_OracleChainlinkPriceGuardBinance; } });
    Object.defineProperty(exports, "OSWAP_OracleChainlinkPriceGuardFiatAvalanche", { enumerable: true, get: function () { return OSWAP_OracleChainlinkPriceGuardFiatAvalanche_1.OSWAP_OracleChainlinkPriceGuardFiatAvalanche; } });
    Object.defineProperty(exports, "OSWAP_OracleChainlinkPriceGuardFiatBinance", { enumerable: true, get: function () { return OSWAP_OracleChainlinkPriceGuardFiatBinance_1.OSWAP_OracleChainlinkPriceGuardFiatBinance; } });
    Object.defineProperty(exports, "OSWAP_OracleConstant", { enumerable: true, get: function () { return OSWAP_OracleConstant_1.OSWAP_OracleConstant; } });
    Object.defineProperty(exports, "OSWAP_OracleConstantLimited", { enumerable: true, get: function () { return OSWAP_OracleConstantLimited_1.OSWAP_OracleConstantLimited; } });
    Object.defineProperty(exports, "OSWAP_OracleSetYourOwnPrice", { enumerable: true, get: function () { return OSWAP_OracleSetYourOwnPrice_1.OSWAP_OracleSetYourOwnPrice; } });
    Object.defineProperty(exports, "OSWAP_OracleSigned", { enumerable: true, get: function () { return OSWAP_OracleSigned_1.OSWAP_OracleSigned; } });
    Object.defineProperty(exports, "OSWAP_OracleUnity", { enumerable: true, get: function () { return OSWAP_OracleUnity_1.OSWAP_OracleUnity; } });
});
define("@scom/oswap-oracle-adaptor-contract", ["require", "exports", "@scom/oswap-oracle-adaptor-contract/contracts/index.ts"], function (require, exports, Contracts) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Contracts = void 0;
    ///<amd-module name='@scom/oswap-oracle-adaptor-contract'/> 
    exports.Contracts = Contracts;
});
